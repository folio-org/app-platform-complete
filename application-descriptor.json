{
  "id": "app-platform-complete-2.1.15",
  "name": "app-platform-complete",
  "version": "2.1.15",
  "description": "Application comprised of most Folio modules not present in app-platform-minimal",
  "platform": "base",
  "modules":   [
        {
      "name": "mod-graphql",
      "version": "1.13.1"
    },
        {
      "name": "mod-quick-marc",
      "version": "7.0.0"
    },
        {
      "name": "mod-inventory-storage",
      "version": "29.0.5"
    },
        {
      "name": "mod-circulation-storage",
      "version": "17.4.0"
    },
        {
      "name": "mod-search",
      "version": "5.0.2"
    },
        {
      "name": "mod-inventory",
      "version": "21.1.3"
    },
        {
      "name": "mod-circulation",
      "version": "24.4.3"
    },
        {
      "name": "mod-feesfines",
      "version": "19.3.2"
    },
        {
      "name": "mod-patron-blocks",
      "version": "1.12.1"
    },
        {
      "name": "mod-entities-links",
      "version": "4.0.2"
    },
        {
      "name": "mod-source-record-manager",
      "version": "3.10.2"
    },
        {
      "name": "mod-di-converter-storage",
      "version": "2.4.1"
    },
        {
      "name": "mod-patron",
      "version": "6.3.1"
    },
        {
      "name": "mod-data-export",
      "version": "5.2.1"
    },
        {
      "name": "mod-data-export-spring",
      "version": "3.5.0"
    },
        {
      "name": "mod-data-export-worker",
      "version": "3.4.3"
    },
        {
      "name": "mod-rtac",
      "version": "3.8.0"
    },
        {
      "name": "mod-remote-storage",
      "version": "3.4.1"
    },
        {
      "name": "mod-calendar",
      "version": "3.3.0"
    },
        {
      "name": "mod-audit",
      "version": "2.11.1"
    },
        {
      "name": "mod-courses",
      "version": "1.4.11"
    },
        {
      "name": "mod-source-record-storage",
      "version": "5.10.4"
    },
        {
      "name": "mod-data-import",
      "version": "3.3.2"
    },
        {
      "name": "mod-agreements",
      "version": "7.2.2"
    },
        {
      "name": "mod-licenses",
      "version": "6.2.2"
    },
        {
      "name": "mod-email",
      "version": "1.19.0"
    },
        {
      "name": "mod-event-config",
      "version": "2.9.0"
    },
        {
      "name": "mod-notify",
      "version": "3.4.0"
    },
        {
      "name": "mod-sender",
      "version": "1.14.1"
    },
        {
      "name": "mod-template-engine",
      "version": "1.22.0"
    },
        {
      "name": "mod-pubsub",
      "version": "2.16.1"
    },
        {
      "name": "mod-gobi",
      "version": "3.0.0"
    },
        {
      "name": "mod-copycat",
      "version": "1.8.0"
    },
        {
      "name": "mod-kb-ebsco-java",
      "version": "6.0.0"
    },
        {
      "name": "mod-ncip",
      "version": "1.15.7"
    },
        {
      "name": "mod-inventory-update",
      "version": "4.1.0"
    },
        {
      "name": "mod-user-import",
      "version": "3.10.0"
    },
        {
      "name": "mod-service-interaction",
      "version": "4.2.2"
    },
        {
      "name": "mod-ebsconet",
      "version": "2.4.0"
    },
        {
      "name": "mod-batch-print",
      "version": "1.3.0"
    },
        {
      "name": "mod-serials-management",
      "version": "2.0.2"
    },
        {
      "name": "mod-record-specifications",
      "version": "2.0.1"
    }
  ],
  "uiModules":   [
        {
      "name": "folio_marc-authorities",
      "version": "7.0.2"
    },
        {
      "name": "folio_stripes-authority-components",
      "version": "6.0.1"
    },
        {
      "name": "folio_quick-marc",
      "version": "10.0.1"
    },
        {
      "name": "folio_inventory",
      "version": "13.0.4"
    },
        {
      "name": "folio_servicepoints",
      "version": "8.0.0"
    },
        {
      "name": "folio_plugin-create-inventory-records",
      "version": "6.0.0"
    },
        {
      "name": "folio_plugin-find-instance",
      "version": "9.0.1"
    },
        {
      "name": "folio_plugin-find-package-title",
      "version": "7.0.0"
    },
        {
      "name": "folio_checkin",
      "version": "11.0.0"
    },
        {
      "name": "folio_checkout",
      "version": "12.0.1"
    },
        {
      "name": "folio_circulation",
      "version": "11.0.1"
    },
        {
      "name": "folio_plugin-find-user",
      "version": "8.0.0"
    },
        {
      "name": "folio_data-export",
      "version": "7.0.0"
    },
        {
      "name": "folio_export-manager",
      "version": "4.0.0"
    },
        {
      "name": "folio_plugin-bursar-export",
      "version": "4.0.3"
    },
        {
      "name": "folio_remote-storage",
      "version": "7.0.1"
    },
        {
      "name": "folio_circulation-log",
      "version": "6.0.1"
    },
        {
      "name": "folio_calendar",
      "version": "12.0.0"
    },
        {
      "name": "folio_courses",
      "version": "7.0.3"
    },
        {
      "name": "folio_requests",
      "version": "12.0.2"
    },
        {
      "name": "folio_data-import",
      "version": "9.0.1"
    },
        {
      "name": "folio_plugin-find-import-profile",
      "version": "9.0.0"
    },
        {
      "name": "folio_agreements",
      "version": "12.0.2"
    },
        {
      "name": "folio_plugin-find-agreement",
      "version": "12.0.0"
    },
        {
      "name": "folio_eholdings",
      "version": "11.0.1"
    },
        {
      "name": "folio_licenses",
      "version": "12.0.1"
    },
        {
      "name": "folio_plugin-find-license",
      "version": "12.0.0"
    },
        {
      "name": "folio_local-kb-admin",
      "version": "9.0.0"
    },
        {
      "name": "folio_plugin-find-eresource",
      "version": "8.0.0"
    },
        {
      "name": "folio_dashboard",
      "version": "7.0.0"
    },
        {
      "name": "folio_tenant-settings",
      "version": "10.0.0"
    },
        {
      "name": "folio_gobi-settings",
      "version": "4.0.0"
    },
        {
      "name": "folio_handler-stripes-registry",
      "version": "3.0.0"
    },
        {
      "name": "folio_myprofile",
      "version": "10.0.0"
    },
        {
      "name": "folio_plugin-find-authority",
      "version": "5.0.0"
    },
        {
      "name": "folio_service-interaction",
      "version": "4.0.0"
    },
        {
      "name": "folio_users",
      "version": "12.1.4"
    },
        {
      "name": "folio_serials-management",
      "version": "2.0.3"
    },
        {
      "name": "folio_stripes-marc-components",
      "version": "2.0.1"
    },
        {
      "name": "folio_stripes-inventory-components",
      "version": "2.0.2"
    }
  ],
  "dependencies": [  {
    "name": "app-platform-minimal",
    "version": "^2.0.0"
  }],
  "moduleDescriptors":   [
        {
      "id": "mod-graphql-1.13.1",
      "name": "GraphQL API for FOLIO",
      "provides": [      {
        "id": "graphql",
        "version": "1.4",
        "handlers": [        {
          "methods": ["POST"],
          "pathPattern": "/graphql",
          "permissionsRequired": []
        }]
      }],
      "launchDescriptor":       {
        "dockerImage": "mod-graphql:0.1.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 402653184,
          "PortBindings": {"3001/tcp": [{"HostPort": "%p"}]}
        }}
      }
    },
        {
      "id": "mod-quick-marc-7.0.0",
      "name": "quickMARC",
      "requires":       [
                {
          "id": "source-manager-parsed-records",
          "version": "3.0"
        },
                {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
                {
          "id": "source-manager-records",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "field-protection-settings",
          "version": "1.2"
        },
                {
          "id": "instance-authority-links",
          "version": "2.1"
        },
                {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        },
                {
          "id": "instance-authority-links-suggestions",
          "version": "1.2"
        },
                {
          "id": "specification-storage",
          "version": "1.0"
        }
      ],
      "provides":       [
                {
          "id": "marc-records-editor",
          "version": "6.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/records-editor/records",
              "permissionsRequired": ["marc-records-editor.item.get"],
              "modulePermissions":               [
                "change-manager.parsedrecords.get",
                "users.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority.linking-rules.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/records-editor/records",
              "permissionsRequired": ["marc-records-editor.item.post"],
              "modulePermissions":               [
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.jobProfile.item.put",
                "change-manager.records.post",
                "specification-storage.specifications.collection.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/records-editor/records/{id}",
              "permissionsRequired": ["marc-records-editor.item.put"],
              "modulePermissions":               [
                "change-manager.parsedrecords.put",
                "instance-authority-links.instances.collection.put",
                "specification-storage.specifications.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/records-editor/records/status",
              "permissionsRequired": ["marc-records-editor.status.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/records-editor/links/suggestion",
              "permissionsRequired": ["marc-records-editor.links.suggestion.post"],
              "modulePermissions": ["instance-authority-links.suggestions.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/records-editor/validate",
              "permissionsRequired": ["marc-records-editor.validate.post"],
              "modulePermissions": ["specification-storage.specifications.collection.get"]
            }
          ]
        },
                {
          "id": "marc-specifications",
          "version": "1.2",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/marc-specifications/{recordType}/{fieldTag}",
            "permissionsRequired": ["marc-specifications.item.get"]
          }]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "permissionsRequired": []
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": []
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "marc-specifications.item.get",
          "displayName": "marc-specifications - get a marc specification",
          "description": "Get a marc specification"
        },
                {
          "permissionName": "marc-records-editor.item.get",
          "displayName": "marc-records-editor - get a record",
          "description": "Get a record"
        },
                {
          "permissionName": "marc-records-editor.item.post",
          "displayName": "marc-records-editor - create a new record",
          "description": "Create a new record"
        },
                {
          "permissionName": "marc-records-editor.item.put",
          "displayName": "marc-records-editor - update a record",
          "description": "Update a record"
        },
                {
          "permissionName": "marc-records-editor.status.item.get",
          "displayName": "marc-records-editor - get record creation status",
          "description": "Get record creation status"
        },
                {
          "permissionName": "marc-records-editor.links.suggestion.post",
          "displayName": "marc-records-editor - get record creation status",
          "description": "Suggest links for record collection"
        },
                {
          "permissionName": "marc-records-editor.validate.post",
          "displayName": "marc-records-editor - validate record",
          "description": "Validate record"
        },
                {
          "permissionName": "marc-records-editor.all",
          "displayName": "All marc-records-editor permissions",
          "description": "All permissions for the marc-records-editor",
          "subPermissions":           [
            "marc-records-editor.item.get",
            "marc-records-editor.item.post",
            "marc-records-editor.item.put",
            "marc-records-editor.status.item.get",
            "marc-records-editor.links.suggestion.post",
            "marc-records-editor.validate.post"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-quick-marc:7.0.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 536870912,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
                    {
            "name": "NUMBER_OF_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "ENV",
            "value": "folio"
          }
        ]
      }
    },
        {
      "id": "mod-inventory-storage-29.0.5",
      "name": "Inventory Storage Module",
      "replaces": ["inventory-storage"],
      "requires": [      {
        "id": "user-tenants",
        "version": "1.0"
      }],
      "provides":       [
                {
          "id": "item-storage-dereferenced",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/item-storage-dereferenced/items",
              "permissionsRequired": ["inventory-storage-dereferenced.items.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/item-storage-dereferenced/items/{id}",
              "permissionsRequired": ["inventory-storage-dereferenced.items.item.get"]
            }
          ]
        },
                {
          "id": "item-storage",
          "version": "10.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": ["inventory-storage.items.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": ["inventory-storage.items.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/item-storage/items/retrieve",
              "permissionsRequired": ["inventory-storage.items.retrieve.collection.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": ["inventory-storage.items.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": ["inventory-storage.items.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": ["inventory-storage.items.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": ["inventory-storage.items.collection.delete"]
            }
          ]
        },
                {
          "id": "instance-date-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-date-types",
              "permissionsRequired": ["inventory-storage.instance-date-types.collection.get"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/instance-date-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-date-types.item.patch"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "item-storage-batch-sync",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/item-storage/batch/synchronous",
            "permissionsRequired": ["inventory-storage.items.batch.post"]
          }]
        },
                {
          "id": "item-storage-batch-sync-unsafe",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/item-storage/batch/synchronous-unsafe",
            "permissionsRequired": ["inventory-storage.items.batch-unsafe.post"]
          }]
        },
                {
          "id": "holdings-storage",
          "version": "8.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": ["inventory-storage.holdings.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/holdings-storage/holdings/retrieve",
              "permissionsRequired": ["inventory-storage.holdings.retrieve.collection.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": ["inventory-storage.holdings.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": ["inventory-storage.holdings.item.post"],
              "modulePermissions":               [
                "user-tenants.collection.get",
                "consortia.sharing-instances.item.post"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": ["inventory-storage.holdings.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": ["inventory-storage.holdings.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": ["inventory-storage.holdings.collection.delete"]
            }
          ]
        },
                {
          "id": "holdings-storage-batch-sync",
          "version": "2.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/holdings-storage/batch/synchronous",
            "permissionsRequired": ["inventory-storage.holdings.batch.post"],
            "modulePermissions":             [
              "user-tenants.collection.get",
              "consortia.sharing-instances.item.post"
            ]
          }]
        },
                {
          "id": "holdings-storage-batch-sync-unsafe",
          "version": "2.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/holdings-storage/batch/synchronous-unsafe",
            "permissionsRequired": ["inventory-storage.holdings.batch-unsafe.post"],
            "modulePermissions":             [
              "user-tenants.collection.get",
              "consortia.sharing-instances.item.post"
            ]
          }]
        },
                {
          "id": "instance-storage",
          "version": "11.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": ["inventory-storage.instances.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-storage/instances/retrieve",
              "permissionsRequired": ["inventory-storage.instances.retrieve.collection.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": ["inventory-storage.instances.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": ["inventory-storage.instances.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": ["inventory-storage.instances.item.put"],
              "modulePermissions":               [
                "user-tenants.collection.get",
                "consortia.sharing-instances.collection.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": ["inventory-storage.instances.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instances/{id}/source-record",
              "permissionsRequired": ["inventory-storage.instances.source-record.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": ["inventory-storage.instances.source-record.marc-json.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": ["inventory-storage.instances.source-record.marc-json.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": ["inventory-storage.instances.source-record.marc-json.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": ["inventory-storage.instances.collection.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instance-relationships",
              "permissionsRequired": ["inventory-storage.instance-relationships.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-storage/instance-relationships",
              "permissionsRequired": ["inventory-storage.instance-relationships.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationships.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationships.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationships.item.delete"]
            }
          ]
        },
                {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/preceding-succeeding-titles",
              "permissionsRequired": ["inventory-storage.preceding-succeeding-titles.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": ["inventory-storage.preceding-succeeding-titles.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/preceding-succeeding-titles",
              "permissionsRequired": ["inventory-storage.preceding-succeeding-titles.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": ["inventory-storage.preceding-succeeding-titles.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": ["inventory-storage.preceding-succeeding-titles.item.delete"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/preceding-succeeding-titles/instances/{id}",
              "permissionsRequired": ["inventory-storage.instances.preceding-succeeding-titles.collection.put"]
            }
          ]
        },
                {
          "id": "instance-storage-batch-sync",
          "version": "3.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/instance-storage/batch/synchronous",
            "permissionsRequired": ["inventory-storage.instances.batch.synchronous.post"]
          }]
        },
                {
          "id": "instance-storage-batch-sync-unsafe",
          "version": "3.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/instance-storage/batch/synchronous-unsafe",
            "permissionsRequired": ["inventory-storage.instances.batch-unsafe.post"]
          }]
        },
                {
          "id": "instance-storage-bulk",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/instance-storage/instances/bulk",
            "permissionsRequired": ["inventory-storage.instances.bulk.post"]
          }]
        },
                {
          "id": "loan-types",
          "version": "2.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-types",
              "permissionsRequired": ["inventory-storage.loan-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": ["inventory-storage.loan-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/loan-types",
              "permissionsRequired": ["inventory-storage.loan-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": ["inventory-storage.loan-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": ["inventory-storage.loan-types.item.delete"]
            }
          ]
        },
                {
          "id": "material-types",
          "version": "2.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/material-types",
              "permissionsRequired": ["inventory-storage.material-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": ["inventory-storage.material-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/material-types",
              "permissionsRequired": ["inventory-storage.material-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": ["inventory-storage.material-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": ["inventory-storage.material-types.item.delete"]
            }
          ]
        },
                {
          "id": "location-units",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/institutions",
              "permissionsRequired": ["inventory-storage.location-units.institutions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": ["inventory-storage.location-units.institutions.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/location-units/institutions",
              "permissionsRequired": ["inventory-storage.location-units.institutions.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": ["inventory-storage.location-units.institutions.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": ["inventory-storage.location-units.institutions.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/campuses",
              "permissionsRequired": ["inventory-storage.location-units.campuses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": ["inventory-storage.location-units.campuses.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/location-units/campuses",
              "permissionsRequired": ["inventory-storage.location-units.campuses.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": ["inventory-storage.location-units.campuses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": ["inventory-storage.location-units.campuses.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/libraries",
              "permissionsRequired": ["inventory-storage.location-units.libraries.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": ["inventory-storage.location-units.libraries.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/location-units/libraries",
              "permissionsRequired": ["inventory-storage.location-units.libraries.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": ["inventory-storage.location-units.libraries.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": ["inventory-storage.location-units.libraries.item.delete"]
            }
          ]
        },
                {
          "id": "locations",
          "version": "3.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/locations",
              "permissionsRequired": ["inventory-storage.locations.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": ["inventory-storage.locations.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/locations",
              "permissionsRequired": ["inventory-storage.locations.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": ["inventory-storage.locations.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": ["inventory-storage.locations.item.delete"]
            }
          ]
        },
                {
          "id": "instance-relationship-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-relationship-types",
              "permissionsRequired": ["inventory-storage.instance-relationship-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationship-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-relationship-types",
              "permissionsRequired": ["inventory-storage.instance-relationship-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationship-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-relationship-types.item.delete"]
            }
          ]
        },
                {
          "id": "identifier-types",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/identifier-types",
              "permissionsRequired": ["inventory-storage.identifier-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": ["inventory-storage.identifier-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/identifier-types",
              "permissionsRequired": ["inventory-storage.identifier-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": ["inventory-storage.identifier-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": ["inventory-storage.identifier-types.item.delete"]
            }
          ]
        },
                {
          "id": "subject-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/subject-types",
              "permissionsRequired": ["inventory-storage.subject-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": ["inventory-storage.subject-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/subject-types",
              "permissionsRequired": ["inventory-storage.subject-types.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": ["inventory-storage.subject-types.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": ["inventory-storage.subject-types.item.delete"]
            }
          ]
        },
                {
          "id": "subject-sources",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/subject-sources",
              "permissionsRequired": ["inventory-storage.subject-sources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": ["inventory-storage.subject-sources.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/subject-sources",
              "permissionsRequired": ["inventory-storage.subject-sources.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": ["inventory-storage.subject-sources.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": ["inventory-storage.subject-sources.item.delete"]
            }
          ]
        },
                {
          "id": "contributor-types",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/contributor-types",
              "permissionsRequired": ["inventory-storage.contributor-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/contributor-types",
              "permissionsRequired": ["inventory-storage.contributor-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-types.item.delete"]
            }
          ]
        },
                {
          "id": "contributor-name-types",
          "version": "1.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/contributor-name-types",
              "permissionsRequired": ["inventory-storage.contributor-name-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-name-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/contributor-name-types",
              "permissionsRequired": ["inventory-storage.contributor-name-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-name-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": ["inventory-storage.contributor-name-types.item.delete"]
            }
          ]
        },
                {
          "id": "inventory-record-bulk",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/record-bulk/ids",
            "permissionsRequired": ["inventory-storage.record-bulk.ids.get"]
          }]
        },
                {
          "id": "inventory-reindex-records",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/inventory-reindex-records/publish",
            "permissionsRequired": ["inventory-storage.reindex-records.publish.post"],
            "modulePermissions": ["user-tenants.collection.get"]
          }]
        },
                {
          "id": "instance-formats",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-formats",
              "permissionsRequired": ["inventory-storage.instance-formats.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": ["inventory-storage.instance-formats.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-formats",
              "permissionsRequired": ["inventory-storage.instance-formats.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": ["inventory-storage.instance-formats.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": ["inventory-storage.instance-formats.item.delete"]
            }
          ]
        },
                {
          "id": "instance-types",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-types",
              "permissionsRequired": ["inventory-storage.instance-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-types",
              "permissionsRequired": ["inventory-storage.instance-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-types.item.delete"]
            }
          ]
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/nature-of-content-terms",
              "permissionsRequired": ["inventory-storage.nature-of-content-terms.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": ["inventory-storage.nature-of-content-terms.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/nature-of-content-terms",
              "permissionsRequired": ["inventory-storage.nature-of-content-terms.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": ["inventory-storage.nature-of-content-terms.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": ["inventory-storage.nature-of-content-terms.item.delete"]
            }
          ]
        },
                {
          "id": "classification-types",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/classification-types",
              "permissionsRequired": ["inventory-storage.classification-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": ["inventory-storage.classification-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/classification-types",
              "permissionsRequired": ["inventory-storage.classification-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": ["inventory-storage.classification-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": ["inventory-storage.classification-types.item.delete"]
            }
          ]
        },
                {
          "id": "alternative-title-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/alternative-title-types",
              "permissionsRequired": ["inventory-storage.alternative-title-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": ["inventory-storage.alternative-title-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/alternative-title-types",
              "permissionsRequired": ["inventory-storage.alternative-title-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": ["inventory-storage.alternative-title-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": ["inventory-storage.alternative-title-types.item.delete"]
            }
          ]
        },
                {
          "id": "modes-of-issuance",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/modes-of-issuance",
              "permissionsRequired": ["inventory-storage.modes-of-issuance.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": ["inventory-storage.modes-of-issuance.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/modes-of-issuance",
              "permissionsRequired": ["inventory-storage.modes-of-issuance.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": ["inventory-storage.modes-of-issuance.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": ["inventory-storage.modes-of-issuance.item.delete"]
            }
          ]
        },
                {
          "id": "instance-statuses",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-statuses",
              "permissionsRequired": ["inventory-storage.instance-statuses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": ["inventory-storage.instance-statuses.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-statuses",
              "permissionsRequired": ["inventory-storage.instance-statuses.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": ["inventory-storage.instance-statuses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": ["inventory-storage.instance-statuses.item.delete"]
            }
          ]
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/electronic-access-relationships",
              "permissionsRequired": ["inventory-storage.electronic-access-relationships.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": ["inventory-storage.electronic-access-relationships.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/electronic-access-relationships",
              "permissionsRequired": ["inventory-storage.electronic-access-relationships.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": ["inventory-storage.electronic-access-relationships.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": ["inventory-storage.electronic-access-relationships.item.delete"]
            }
          ]
        },
                {
          "id": "statistical-code-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/statistical-code-types",
              "permissionsRequired": ["inventory-storage.statistical-code-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": ["inventory-storage.statistical-code-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/statistical-code-types",
              "permissionsRequired": ["inventory-storage.statistical-code-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": ["inventory-storage.statistical-code-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": ["inventory-storage.statistical-code-types.item.delete"]
            }
          ]
        },
                {
          "id": "statistical-codes",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/statistical-codes",
              "permissionsRequired": ["inventory-storage.statistical-codes.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": ["inventory-storage.statistical-codes.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/statistical-codes",
              "permissionsRequired": ["inventory-storage.statistical-codes.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": ["inventory-storage.statistical-codes.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": ["inventory-storage.statistical-codes.item.delete"]
            }
          ]
        },
                {
          "id": "ill-policies",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/ill-policies",
              "permissionsRequired": ["inventory-storage.ill-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": ["inventory-storage.ill-policies.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/ill-policies",
              "permissionsRequired": ["inventory-storage.ill-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": ["inventory-storage.ill-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": ["inventory-storage.ill-policies.item.delete"]
            }
          ]
        },
                {
          "id": "holdings-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-types",
              "permissionsRequired": ["inventory-storage.holdings-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/holdings-types",
              "permissionsRequired": ["inventory-storage.holdings-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-types.item.delete"]
            }
          ]
        },
                {
          "id": "call-number-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/call-number-types",
              "permissionsRequired": ["inventory-storage.call-number-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": ["inventory-storage.call-number-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/call-number-types",
              "permissionsRequired": ["inventory-storage.call-number-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": ["inventory-storage.call-number-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": ["inventory-storage.call-number-types.item.delete"]
            }
          ]
        },
                {
          "id": "instance-note-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-note-types",
              "permissionsRequired": ["inventory-storage.instance-note-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-note-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-note-types",
              "permissionsRequired": ["inventory-storage.instance-note-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-note-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": ["inventory-storage.instance-note-types.item.delete"]
            }
          ]
        },
                {
          "id": "holdings-note-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-note-types",
              "permissionsRequired": ["inventory-storage.holdings-note-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-note-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/holdings-note-types",
              "permissionsRequired": ["inventory-storage.holdings-note-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-note-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": ["inventory-storage.holdings-note-types.item.delete"]
            }
          ]
        },
                {
          "id": "item-note-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/item-note-types",
              "permissionsRequired": ["inventory-storage.item-note-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": ["inventory-storage.item-note-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/item-note-types",
              "permissionsRequired": ["inventory-storage.item-note-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": ["inventory-storage.item-note-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": ["inventory-storage.item-note-types.item.delete"]
            }
          ]
        },
                {
          "id": "item-damaged-statuses",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/item-damaged-statuses",
              "permissionsRequired": ["inventory-storage.item-damaged-statuses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": ["inventory-storage.item-damaged-statuses.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/item-damaged-statuses",
              "permissionsRequired": ["inventory-storage.item-damaged-statuses.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": ["inventory-storage.item-damaged-statuses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": ["inventory-storage.item-damaged-statuses.item.delete"]
            }
          ]
        },
                {
          "id": "service-points",
          "version": "3.4",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/service-points",
              "permissionsRequired": ["inventory-storage.service-points.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": ["inventory-storage.service-points.item.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/service-points",
              "permissionsRequired": ["inventory-storage.service-points.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": ["inventory-storage.service-points.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": ["inventory-storage.service-points.item.delete"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "service-points-users",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/service-points-users",
              "permissionsRequired": ["inventory-storage.service-points-users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": ["inventory-storage.service-points-users.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/service-points-users",
              "permissionsRequired": ["inventory-storage.service-points-users.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": ["inventory-storage.service-points-users.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": ["inventory-storage.service-points-users.item.delete"]
            }
          ]
        },
                {
          "id": "hrid-settings-storage",
          "version": "1.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/hrid-settings-storage/hrid-settings",
              "permissionsRequired": ["inventory-storage.hrid-settings.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/hrid-settings-storage/hrid-settings",
              "permissionsRequired": ["inventory-storage.hrid-settings.item.put"]
            }
          ]
        },
                {
          "id": "holdings-sources",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-sources",
              "permissionsRequired": ["inventory-storage.holdings-sources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": ["inventory-storage.holdings-sources.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/holdings-sources",
              "permissionsRequired": ["inventory-storage.holdings-sources.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": ["inventory-storage.holdings-sources.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": ["inventory-storage.holdings-sources.item.delete"]
            }
          ]
        },
                {
          "id": "bound-with-parts-storage",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-storage/bound-with-parts",
              "permissionsRequired": ["inventory-storage.bound-with-parts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": ["inventory-storage.bound-with-parts.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory-storage/bound-with-parts",
              "permissionsRequired": ["inventory-storage.bound-with-parts.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": ["inventory-storage.bound-with-parts.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": ["inventory-storage.bound-with-parts.item.delete"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory-storage/bound-withs",
              "permissionsRequired": ["inventory-storage.bound-withs.collection.put"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas",
            "permissionsRequired": []
          }]
        },
                {
          "id": "oaipmhview",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/oai-pmh-view/instances",
              "permissionsRequired": ["inventory-storage.oai-pmh-view.instances.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/oai-pmh-view/updatedInstanceIds",
              "permissionsRequired": ["inventory-storage.oai-pmh-view.updatedinstanceids.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/oai-pmh-view/enrichedInstances",
              "permissionsRequired": ["inventory-storage.oai-pmh-view.enrichedinstances.collection.post"]
            }
          ]
        },
                {
          "id": "inventory-hierarchy",
          "version": "0.6",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-hierarchy/updated-instance-ids",
              "permissionsRequired": ["inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory-hierarchy/items-and-holdings",
              "permissionsRequired": ["inventory-storage.inventory-hierarchy.items-and-holdings.collection.post"]
            }
          ]
        },
                {
          "id": "inventory-view",
          "version": "3.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/inventory-view/instances",
            "permissionsRequired": ["inventory-storage.inventory-view.instances.collection.get"]
          }]
        },
                {
          "id": "inventory-view-instance-set",
          "version": "3.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/inventory-view/instance-set",
            "permissionsRequired": ["inventory-storage.inventory-view.instance-set.get"]
          }]
        },
                {
          "id": "instance-reindex",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-storage/reindex",
              "permissionsRequired": ["inventory-storage.instance.reindex.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/reindex",
              "permissionsRequired": ["inventory-storage.instance.reindex.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/reindex/{id}",
              "permissionsRequired": ["inventory-storage.instance.reindex.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/reindex/{id}",
              "permissionsRequired": ["inventory-storage.instance.reindex.item.delete"]
            }
          ]
        },
                {
          "id": "instance-iteration",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/instance-storage/instances/iteration",
              "permissionsRequired": ["inventory-storage.instance.iteration.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/instance-storage/instances/iteration/{id}",
              "permissionsRequired": ["inventory-storage.instance.iteration.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/instance-storage/instances/iteration/{id}",
              "permissionsRequired": ["inventory-storage.instance.iteration.item.delete"]
            }
          ]
        },
                {
          "id": "async-migration",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory-storage/migrations/jobs",
              "permissionsRequired": ["inventory-storage.migration.job.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-storage/migrations",
              "permissionsRequired": ["inventory-storage.migration.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-storage/migrations/jobs/{id}",
              "permissionsRequired": ["inventory-storage.migration.job.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-storage/migrations/jobs",
              "permissionsRequired": ["inventory-storage.migration.job.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory-storage/migrations/jobs/{id}",
              "permissionsRequired": ["inventory-storage.migration.job.item.delete"]
            }
          ]
        }
      ],
      "optional": [      {
        "id": "consortia",
        "version": "1.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "inventory-storage.instance-relationships.collection.get",
          "displayName": "inventory storage - get instance relationships by query",
          "description": "get instance relationships by query"
        },
                {
          "permissionName": "inventory-storage.instance-relationships.item.get",
          "displayName": "inventory storage - get instance relationship by id",
          "description": "get instance relationship by id"
        },
                {
          "permissionName": "inventory-storage.instance-relationships.item.post",
          "displayName": "inventory storage - create an instance relationship",
          "description": "create an instance relationship"
        },
                {
          "permissionName": "inventory-storage.instance-relationships.item.put",
          "displayName": "inventory storage - modify an instance relationship",
          "description": "modify an instance relationship"
        },
                {
          "permissionName": "inventory-storage.instance-relationships.item.delete",
          "displayName": "inventory storage - delete an instance relationship",
          "description": "delete an instance relationship"
        },
                {
          "permissionName": "inventory-storage.items.collection.get",
          "displayName": "inventory storage - get item collection",
          "description": "get item collection from storage"
        },
                {
          "permissionName": "inventory-storage.items.retrieve.collection.post",
          "displayName": "inventory storage - retrieve item collection via post method",
          "description": "retrieve item collection from storage"
        },
                {
          "permissionName": "inventory-storage.items.collection.delete",
          "displayName": "inventory storage - delete entire item collection",
          "description": "delete entire item collection from storage"
        },
                {
          "permissionName": "inventory-storage.items.item.get",
          "displayName": "inventory storage - get individual item",
          "description": "get individual item from storage"
        },
                {
          "permissionName": "inventory-storage-dereferenced.items.item.get",
          "displayName": "inventory storage - get dereferenced version of individual item",
          "description": "get dereferenced individual item from storage"
        },
                {
          "permissionName": "inventory-storage-dereferenced.items.collection.get",
          "displayName": "inventory storage - get collection of dereferenced item records",
          "description": "get dereferenced item collections from storage"
        },
                {
          "permissionName": "inventory-storage.items.item.post",
          "displayName": "inventory storage - create individual item",
          "description": "create individual item in storage"
        },
                {
          "permissionName": "inventory-storage.items.item.put",
          "displayName": "inventory storage - modify item",
          "description": "modify item in storage"
        },
                {
          "permissionName": "inventory-storage.items.item.delete",
          "displayName": "inventory storage - delete individual item",
          "description": "delete individual item from storage"
        },
                {
          "permissionName": "inventory-storage.items.batch.post",
          "displayName": "inventory storage - create or update a number of items",
          "description": "create or update a number of items in storage"
        },
                {
          "permissionName": "inventory-storage.items.batch-unsafe.post",
          "displayName": "inventory storage - create or update a number of items with optimistic locking disabled",
          "description": "create or update a number of items in storage with optimistic locking disabled"
        },
                {
          "permissionName": "inventory-storage.holdings.collection.get",
          "displayName": "inventory storage - get holdings collection",
          "description": "get holdings collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings.retrieve.collection.post",
          "displayName": "inventory storage - retrieve holdings collection",
          "description": "retrieve holdings collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings.collection.delete",
          "displayName": "inventory storage - delete entire holdings collection",
          "description": "delete entire holdings collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings.item.get",
          "displayName": "inventory storage - get individual holdings record",
          "description": "get individual holdings record from storage"
        },
                {
          "permissionName": "inventory-storage.holdings.item.post",
          "displayName": "inventory storage - create individual holdings record",
          "description": "create individual holdings record in storage"
        },
                {
          "permissionName": "inventory-storage.holdings.item.put",
          "displayName": "inventory storage - modify holdings record",
          "description": "modify holdings record in storage"
        },
                {
          "permissionName": "inventory-storage.holdings.item.delete",
          "displayName": "inventory storage - delete individual holdings record",
          "description": "delete individual holdings record from storage"
        },
                {
          "permissionName": "inventory-storage.holdings.batch.post",
          "displayName": "inventory storage - create or update a number of holdings",
          "description": "create or update a number of holdings in storage"
        },
                {
          "permissionName": "inventory-storage.holdings.batch-unsafe.post",
          "displayName": "inventory storage - create or update a number of holdings with optimistic locking disabled",
          "description": "create or update a number of holdings in storage with optimistic locking disabled"
        },
                {
          "permissionName": "inventory-storage.instances.collection.get",
          "displayName": "inventory storage - get instance collection",
          "description": "get instance collection from storage"
        },
                {
          "permissionName": "inventory-storage.instances.retrieve.collection.post",
          "displayName": "inventory storage - retrieve instance collection",
          "description": "retrieve instance collection from storage"
        },
                {
          "permissionName": "inventory-storage.instances.collection.delete",
          "displayName": "inventory storage - delete entire instance collection",
          "description": "delete entire instance collection from storage"
        },
                {
          "permissionName": "inventory-storage.instances.item.get",
          "displayName": "inventory storage - get individual instance",
          "description": "get individual instance from storage"
        },
                {
          "permissionName": "inventory-storage.instances.item.post",
          "displayName": "inventory storage - create individual instance",
          "description": "create individual instance in storage"
        },
                {
          "permissionName": "inventory-storage.instances.item.put",
          "displayName": "inventory storage - modify instance",
          "description": "modify instance in storage"
        },
                {
          "permissionName": "inventory-storage.instances.item.delete",
          "displayName": "inventory storage - delete individual instance",
          "description": "delete individual instance from storage"
        },
                {
          "permissionName": "inventory-storage.instances.preceding-succeeding-titles.collection.put",
          "displayName": "inventory storage - update preceding/succeeding titles related to instance",
          "description": "update preceding/succeeding titles related to instance from storage"
        },
                {
          "permissionName": "inventory-storage.instances.batch.synchronous.post",
          "displayName": "inventory storage - create or update a collection of instances in a single synchronous request",
          "description": "create or update a collection of instances in a single synchronous request"
        },
                {
          "permissionName": "inventory-storage.instances.batch-unsafe.post",
          "displayName": "inventory storage - create or update a number of instances with optimistic locking disabled",
          "description": "create or update a number of instances in storage with optimistic locking disabled"
        },
                {
          "permissionName": "inventory-storage.instances.source-record.delete",
          "displayName": "inventory storage - delete source record of an individual instance",
          "description": "delete source record of individual instance from storage"
        },
                {
          "permissionName": "inventory-storage.instances.source-record.marc-json.get",
          "displayName": "inventory storage - get MARC JSON source record of an individual instance",
          "description": "get MARC JSON source record of individual instance from storage"
        },
                {
          "permissionName": "inventory-storage.instances.source-record.marc-json.put",
          "displayName": "inventory storage - set MARC JSON source record of an individual instance",
          "description": "set MARC JSON source record of individual instance in storage"
        },
                {
          "permissionName": "inventory-storage.instances.source-record.marc-json.delete",
          "displayName": "inventory storage - delete MARC JSON source record of an individual instance",
          "description": "delete MARC JSON source record of individual instance in storage"
        },
                {
          "permissionName": "inventory-storage.loan-types.collection.get",
          "displayName": "inventory storage - get loan-type collection",
          "description": "get loan-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.loan-types.item.get",
          "displayName": "inventory storage - get individual loan-type",
          "description": "get individual loan-type from storage"
        },
                {
          "permissionName": "inventory-storage.loan-types.item.post",
          "displayName": "inventory storage - create individual loan-type",
          "description": "create individual loan-type in storage"
        },
                {
          "permissionName": "inventory-storage.loan-types.item.put",
          "displayName": "inventory storage - modify loan-type",
          "description": "modify loan-type in storage"
        },
                {
          "permissionName": "inventory-storage.loan-types.item.delete",
          "displayName": "inventory storage - delete individual loan-type",
          "description": "delete individual loan-type from storage"
        },
                {
          "permissionName": "inventory-storage.material-types.collection.get",
          "displayName": "inventory storage - get material-type collection",
          "description": "get material-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.material-types.item.get",
          "displayName": "inventory storage - get individual material-type",
          "description": "get individual material-type from storage"
        },
                {
          "permissionName": "inventory-storage.material-types.item.post",
          "displayName": "inventory storage - create individual material-type",
          "description": "create individual material-type in storage"
        },
                {
          "permissionName": "inventory-storage.material-types.item.put",
          "displayName": "inventory storage - modify material-type",
          "description": "modify material-type in storage"
        },
                {
          "permissionName": "inventory-storage.material-types.item.delete",
          "displayName": "inventory storage - delete individual material-type",
          "description": "delete individual material-type from storage"
        },
                {
          "permissionName": "inventory-storage.location-units.institutions.collection.get",
          "displayName": "inventory storage - location units - get institution collection",
          "description": "Get institution collection"
        },
                {
          "permissionName": "inventory-storage.location-units.institutions.item.get",
          "displayName": "inventory storage - location units - get individual institution",
          "description": "get individual institution"
        },
                {
          "permissionName": "inventory-storage.location-units.institutions.item.post",
          "displayName": "inventory storage - location units - create individual institution",
          "description": "create individual instution"
        },
                {
          "permissionName": "inventory-storage.location-units.institutions.item.put",
          "displayName": "inventory storage - location units - modify institution",
          "description": "modify institution"
        },
                {
          "permissionName": "inventory-storage.location-units.institutions.item.delete",
          "displayName": "inventory storage - location units - delete individual institution",
          "description": "delete individual institution"
        },
                {
          "permissionName": "inventory-storage.location-units.campuses.collection.get",
          "displayName": "inventory storage - location units - get campus collection",
          "description": "Get campus collection"
        },
                {
          "permissionName": "inventory-storage.location-units.campuses.item.get",
          "displayName": "inventory storage - location units - get individual campus",
          "description": "get individual campus"
        },
                {
          "permissionName": "inventory-storage.location-units.campuses.item.post",
          "displayName": "inventory storage - location units - create individual campus",
          "description": "create individual instution"
        },
                {
          "permissionName": "inventory-storage.location-units.campuses.item.put",
          "displayName": "inventory storage - location units - modify campus",
          "description": "modify campus"
        },
                {
          "permissionName": "inventory-storage.location-units.campuses.item.delete",
          "displayName": "inventory storage - location units - delete individual campus",
          "description": "delete individual campus"
        },
                {
          "permissionName": "inventory-storage.location-units.libraries.collection.get",
          "displayName": "inventory storage - location units - get library collection",
          "description": "Get library collection"
        },
                {
          "permissionName": "inventory-storage.location-units.libraries.item.get",
          "displayName": "inventory storage - location units - get individual library",
          "description": "get individual library"
        },
                {
          "permissionName": "inventory-storage.location-units.libraries.item.post",
          "displayName": "inventory storage - location units - create individual library",
          "description": "create individual instution"
        },
                {
          "permissionName": "inventory-storage.location-units.libraries.item.put",
          "displayName": "inventory storage - location units - modify library",
          "description": "modify library"
        },
                {
          "permissionName": "inventory-storage.location-units.libraries.item.delete",
          "displayName": "inventory storage - location units - delete individual library",
          "description": "delete individual library"
        },
                {
          "permissionName": "inventory-storage.locations.collection.get",
          "displayName": "inventory storage - locations - get location collection",
          "description": "get location collection"
        },
                {
          "permissionName": "inventory-storage.locations.item.get",
          "displayName": "inventory storage - locations - get individual location",
          "description": "get individual location"
        },
                {
          "permissionName": "inventory-storage.locations.item.post",
          "displayName": "inventory storage - locations - create individual location",
          "description": "create individual location"
        },
                {
          "permissionName": "inventory-storage.locations.item.put",
          "displayName": "inventory storage - locations - modify location",
          "description": "modify location"
        },
                {
          "permissionName": "inventory-storage.locations.item.delete",
          "displayName": "inventory storage - locations - delete individual location",
          "description": "delete individual location"
        },
                {
          "permissionName": "inventory-storage.instance-relationship-types.collection.get",
          "displayName": "inventory storage - get instance-relationship-type collection",
          "description": "get instance-relationship-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.instance-relationship-types.item.get",
          "displayName": "inventory storage - get individual instance-relationship-type",
          "description": "get individual instance-relationship-type from storage"
        },
                {
          "permissionName": "inventory-storage.instance-relationship-types.item.post",
          "displayName": "inventory storage - create individual instance-relationship-type",
          "description": "create individual instance-relationship-type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-relationship-types.item.put",
          "displayName": "inventory storage - modify instance-relationship-type",
          "description": "modify instance-relationship-type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-relationship-types.item.delete",
          "displayName": "inventory storage - delete individual instance-relationship-type",
          "description": "delete individual instance-relationship-type from storage"
        },
                {
          "permissionName": "inventory-storage.preceding-succeeding-titles.collection.get",
          "displayName": "inventory storage - get preceding-succeeding-title collection",
          "description": "get preceding-succeeding-title collection from storage"
        },
                {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.get",
          "displayName": "inventory storage - get individual preceding-succeeding-title",
          "description": "get individual preceding-succeeding-title from storage"
        },
                {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.post",
          "displayName": "inventory storage - create individual preceding-succeeding-title",
          "description": "create individual preceding-succeeding-title in storage"
        },
                {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.put",
          "displayName": "inventory storage - modify preceding-succeeding-title",
          "description": "modify preceding-succeeding-title in storage"
        },
                {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.delete",
          "displayName": "inventory storage - delete individual preceding-succeeding-title",
          "description": "delete individual preceding-succeeding-title from storage"
        },
                {
          "permissionName": "inventory-storage.identifier-types.collection.get",
          "displayName": "inventory storage - get identifier-type collection",
          "description": "get identifier-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.identifier-types.item.get",
          "displayName": "inventory storage - get individual identifier-type",
          "description": "get individual identifier-type from storage"
        },
                {
          "permissionName": "inventory-storage.identifier-types.item.post",
          "displayName": "inventory storage - create individual identifier-type",
          "description": "create individual identifier-type in storage"
        },
                {
          "permissionName": "inventory-storage.identifier-types.item.put",
          "displayName": "inventory storage - modify identifier-type",
          "description": "modify identifier-type in storage"
        },
                {
          "permissionName": "inventory-storage.identifier-types.item.delete",
          "displayName": "inventory storage - delete individual identifier-type",
          "description": "delete individual identifier-type from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-types.collection.get",
          "displayName": "inventory storage - get contributor-type collection",
          "description": "get contributor-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-types.item.get",
          "displayName": "inventory storage - get individual contributor-type",
          "description": "get individual contributor-type from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-types.item.post",
          "displayName": "inventory storage - create individual contributor-type",
          "description": "create individual contributor-type in storage"
        },
                {
          "permissionName": "inventory-storage.contributor-types.item.put",
          "displayName": "inventory storage - modify contributor-type",
          "description": "modify contributor-type in storage"
        },
                {
          "permissionName": "inventory-storage.contributor-types.item.delete",
          "displayName": "inventory storage - delete individual contributor-type",
          "description": "delete individual contributor-type from storage"
        },
                {
          "permissionName": "inventory-storage.service-points.collection.get",
          "displayName": "inventory storage - get service-point collection",
          "description": "get service-point collection from storage"
        },
                {
          "permissionName": "inventory-storage.service-points.item.get",
          "displayName": "inventory storage - get individual service-point",
          "description": "get individual service-point from storage"
        },
                {
          "permissionName": "inventory-storage.service-points.item.post",
          "displayName": "inventory storage - create individual service-point",
          "description": "create individual service-point in storage"
        },
                {
          "permissionName": "inventory-storage.service-points.item.put",
          "displayName": "inventory storage - modify service-point",
          "description": "modify service-point in storage"
        },
                {
          "permissionName": "inventory-storage.service-points.item.delete",
          "displayName": "inventory storage - delete individual service-point",
          "description": "delete individual service-point from storage"
        },
                {
          "permissionName": "inventory-storage.service-points-users.collection.get",
          "displayName": "inventory storage - get service-point-users collection",
          "description": "get service-point-users collection from storage"
        },
                {
          "permissionName": "inventory-storage.service-points-users.item.get",
          "displayName": "inventory storage - get individual service-points-user",
          "description": "get individual service-points-user from storage"
        },
                {
          "permissionName": "inventory-storage.service-points-users.item.post",
          "displayName": "inventory storage - create individual service-points-user",
          "description": "create individual service-points-user in storage"
        },
                {
          "permissionName": "inventory-storage.service-points-users.item.put",
          "displayName": "inventory storage - modify service-points-user",
          "description": "modify service-points-user in storage"
        },
                {
          "permissionName": "inventory-storage.service-points-users.item.delete",
          "displayName": "inventory storage - delete individual service-points-user",
          "description": "delete individual service-points-user from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-name-types.collection.get",
          "displayName": "inventory storage - get contributor-name-type collection",
          "description": "get contributor-name-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-name-types.item.get",
          "displayName": "inventory storage - get individual contributor-name-type",
          "description": "get individual contributor-name-type from storage"
        },
                {
          "permissionName": "inventory-storage.contributor-name-types.item.post",
          "displayName": "inventory storage - create individual contributor-name-type",
          "description": "create individual contributor-name-type in storage"
        },
                {
          "permissionName": "inventory-storage.contributor-name-types.item.put",
          "displayName": "inventory storage - modify contributor-name-type",
          "description": "modify contributor-name-type in storage"
        },
                {
          "permissionName": "inventory-storage.contributor-name-types.item.delete",
          "displayName": "inventory storage - delete individual contributor-name-type",
          "description": "delete individual contributor-name-type from storage"
        },
                {
          "permissionName": "inventory-storage.record-bulk.ids.get",
          "displayName": "inventory storage - get bulk ids",
          "description": "get a bulk set of record ids from storage"
        },
                {
          "permissionName": "inventory-storage.reindex-records.publish.post",
          "displayName": "inventory storage - publish inventory records for reindex",
          "description": "publish inventory storage reindex records"
        },
                {
          "permissionName": "inventory-storage.instance-formats.collection.get",
          "displayName": "inventory storage - get formats collection",
          "description": "get contributor-name-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.instance-formats.item.get",
          "displayName": "inventory storage - get individual format",
          "description": "get individual instance format from storage"
        },
                {
          "permissionName": "inventory-storage.instance-formats.item.post",
          "displayName": "inventory storage - create individual format",
          "description": "create individual instance format in storage"
        },
                {
          "permissionName": "inventory-storage.instance-formats.item.put",
          "displayName": "inventory storage - modify format",
          "description": "modify instance format in storage"
        },
                {
          "permissionName": "inventory-storage.instance-formats.item.delete",
          "displayName": "inventory storage - delete individual format",
          "description": "delete individual instance format from storage"
        },
                {
          "permissionName": "inventory-storage.subject-types.collection.get",
          "displayName": "inventory storage - get subject types collection",
          "description": "get subject-types collection from storage"
        },
                {
          "permissionName": "inventory-storage.subject-types.item.get",
          "displayName": "inventory storage - get individual subject type",
          "description": "get individual subject type from storage"
        },
                {
          "permissionName": "inventory-storage.subject-types.item.post",
          "displayName": "inventory storage - create individual subject type",
          "description": "create individual subject type in storage"
        },
                {
          "permissionName": "inventory-storage.subject-types.item.put",
          "displayName": "inventory storage - modify subject type",
          "description": "modify subject type in storage"
        },
                {
          "permissionName": "inventory-storage.subject-types.item.delete",
          "displayName": "inventory storage - delete individual subject type",
          "description": "delete subject type in storage"
        },
                {
          "permissionName": "inventory-storage.subject-sources.collection.get",
          "displayName": "inventory storage - get subject sources collection",
          "description": "get subject-sources collection from storage"
        },
                {
          "permissionName": "inventory-storage.subject-sources.item.get",
          "displayName": "inventory storage - get individual subject source",
          "description": "get individual subject source from storage"
        },
                {
          "permissionName": "inventory-storage.subject-sources.item.post",
          "displayName": "inventory storage - create individual subject source",
          "description": "create individual subject source in storage"
        },
                {
          "permissionName": "inventory-storage.subject-sources.item.put",
          "displayName": "inventory storage - modify subject source",
          "description": "modify subject source in storage"
        },
                {
          "permissionName": "inventory-storage.subject-sources.item.delete",
          "displayName": "inventory storage - delete individual subject source",
          "description": "delete subject source in storage"
        },
                {
          "permissionName": "inventory-storage.instance-types.collection.get",
          "displayName": "inventory storage - get instance types collection",
          "description": "get instance-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.instance-types.item.get",
          "displayName": "inventory storage - get individual instance type",
          "description": "get individual instance type from storage"
        },
                {
          "permissionName": "inventory-storage.instance-types.item.post",
          "displayName": "inventory storage - create individual instance type",
          "description": "create individual instance type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-types.item.put",
          "displayName": "inventory storage - modify instance type",
          "description": "modify instance type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-types.item.delete",
          "displayName": "inventory storage - delete individual instance type",
          "description": "delete instance type in storage"
        },
                {
          "permissionName": "inventory-storage.nature-of-content-terms.collection.get",
          "displayName": "inventory storage - get content terms collection",
          "description": "get nature-of-content terms collection from storage"
        },
                {
          "permissionName": "inventory-storage.nature-of-content-terms.item.get",
          "displayName": "inventory storage - get individual content term",
          "description": "get individual nature-of-content term from storage"
        },
                {
          "permissionName": "inventory-storage.nature-of-content-terms.item.post",
          "displayName": "inventory storage - create individual content term",
          "description": "create individual nature-of-content term in storage"
        },
                {
          "permissionName": "inventory-storage.nature-of-content-terms.item.put",
          "displayName": "inventory storage - modify content term",
          "description": "modify nature-of-content term in storage"
        },
                {
          "permissionName": "inventory-storage.nature-of-content-terms.item.delete",
          "displayName": "inventory storage - delete individual content term",
          "description": "delete nature-of-content term in storage"
        },
                {
          "permissionName": "inventory-storage.classification-types.collection.get",
          "displayName": "inventory storage - get classification types collection",
          "description": "get classification types collection from storage"
        },
                {
          "permissionName": "inventory-storage.classification-types.item.get",
          "displayName": "inventory storage - get individual classification type",
          "description": "get individual classification type from storage"
        },
                {
          "permissionName": "inventory-storage.classification-types.item.post",
          "displayName": "inventory storage - create individual classification type",
          "description": "create individual classification type in storage"
        },
                {
          "permissionName": "inventory-storage.classification-types.item.put",
          "displayName": "inventory storage - modify classification type",
          "description": "modify classification type in storage"
        },
                {
          "permissionName": "inventory-storage.classification-types.item.delete",
          "displayName": "inventory storage - delete individual classification type",
          "description": "delete individual classification qualifier from storage"
        },
                {
          "permissionName": "inventory-storage.alternative-title-types.collection.get",
          "displayName": "inventory storage - get alternative-title-type collection",
          "description": "get alternative-title-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.alternative-title-types.item.get",
          "displayName": "inventory storage - get individual alternative-title-type",
          "description": "get individual alternative-title-type from storage"
        },
                {
          "permissionName": "inventory-storage.alternative-title-types.item.post",
          "displayName": "inventory storage - create individual alternative-title-type",
          "description": "create individual alternative-title-type in storage"
        },
                {
          "permissionName": "inventory-storage.alternative-title-types.item.put",
          "displayName": "inventory storage - modify alternative-title-type",
          "description": "modify alternative-title-type in storage"
        },
                {
          "permissionName": "inventory-storage.alternative-title-types.item.delete",
          "displayName": "inventory storage - delete individual alternative-title-type",
          "description": "delete individual alternative-title-type from storage"
        },
                {
          "permissionName": "inventory-storage.modes-of-issuance.collection.get",
          "displayName": "inventory storage - get modes of issuance collection",
          "description": "get modes of issuance collection from storage"
        },
                {
          "permissionName": "inventory-storage.modes-of-issuance.item.get",
          "displayName": "inventory storage - get individual mode of issuance",
          "description": "get individual mode of issuance from storage"
        },
                {
          "permissionName": "inventory-storage.modes-of-issuance.item.post",
          "displayName": "inventory storage - create individual mode of issuance",
          "description": "create individual mode of issuance in storage"
        },
                {
          "permissionName": "inventory-storage.modes-of-issuance.item.put",
          "displayName": "inventory storage - modify mode of issuance",
          "description": "modify mode of issuance in storage"
        },
                {
          "permissionName": "inventory-storage.modes-of-issuance.item.delete",
          "displayName": "inventory storage - delete individual mode of issuance",
          "description": "delete individual mode of issuance from storage"
        },
                {
          "permissionName": "inventory-storage.instance-statuses.collection.get",
          "displayName": "inventory storage - get instance status collection",
          "description": "get instance status collection from storage"
        },
                {
          "permissionName": "inventory-storage.instance-statuses.item.get",
          "displayName": "inventory storage - get individual instance status",
          "description": "get individual instance status from storage"
        },
                {
          "permissionName": "inventory-storage.instance-statuses.item.post",
          "displayName": "inventory storage - create individual instance status",
          "description": "create individual instance status in storage"
        },
                {
          "permissionName": "inventory-storage.instance-statuses.item.put",
          "displayName": "inventory storage - modify instance status",
          "description": "modify instance status in storage"
        },
                {
          "permissionName": "inventory-storage.instance-statuses.item.delete",
          "displayName": "inventory storage - delete individual instance status",
          "description": "delete individual instance status from storage"
        },
                {
          "permissionName": "inventory-storage.electronic-access-relationships.collection.get",
          "displayName": "inventory storage - get URL relationship types collection",
          "description": "get statistical codes collection from storage"
        },
                {
          "permissionName": "inventory-storage.electronic-access-relationships.item.get",
          "displayName": "inventory storage - get individual URL relationship type",
          "description": "get individual statistical code from storage"
        },
                {
          "permissionName": "inventory-storage.electronic-access-relationships.item.post",
          "displayName": "inventory storage - create individual URL relationship type",
          "description": "create individual statistical code in storage"
        },
                {
          "permissionName": "inventory-storage.electronic-access-relationships.item.put",
          "displayName": "inventory storage - modify URL relationship type",
          "description": "modify statistical code in storage"
        },
                {
          "permissionName": "inventory-storage.electronic-access-relationships.item.delete",
          "displayName": "inventory storage - delete individual URL relationship",
          "description": "delete individual URL relationship type from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-code-types.collection.get",
          "displayName": "inventory storage - get statistical code types collection",
          "description": "get statistical code types collection from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-code-types.item.get",
          "displayName": "inventory storage - get individual statistical code type",
          "description": "get individual statistical code type from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-code-types.item.post",
          "displayName": "inventory storage - create individual statistical code type",
          "description": "create individual statistical code type in storage"
        },
                {
          "permissionName": "inventory-storage.statistical-code-types.item.put",
          "displayName": "inventory storage - modify statistical code type",
          "description": "modify statistical code type in storage"
        },
                {
          "permissionName": "inventory-storage.statistical-code-types.item.delete",
          "displayName": "inventory storage - delete individual statistical code type",
          "description": "delete individual statistical code type from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-codes.collection.get",
          "displayName": "inventory storage - get statistical codes collection",
          "description": "get statistical codes collection from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-codes.item.get",
          "displayName": "inventory storage - get individual statistical code",
          "description": "get individual statistical code from storage"
        },
                {
          "permissionName": "inventory-storage.statistical-codes.item.post",
          "displayName": "inventory storage - create individual statistical code",
          "description": "create individual statistical code in storage"
        },
                {
          "permissionName": "inventory-storage.statistical-codes.item.put",
          "displayName": "inventory storage - modify statistical code",
          "description": "modify statistical code in storage"
        },
                {
          "permissionName": "inventory-storage.statistical-codes.item.delete",
          "displayName": "inventory storage - delete individual statistical code",
          "description": "delete individual statistical code from storage"
        },
                {
          "permissionName": "inventory-storage.ill-policies.collection.get",
          "displayName": "inventory storage - get ill-policy collection",
          "description": "get ill-policy collection from storage"
        },
                {
          "permissionName": "inventory-storage.ill-policies.item.get",
          "displayName": "inventory storage - get individual ill-policy",
          "description": "get individual ill-policy from storage"
        },
                {
          "permissionName": "inventory-storage.ill-policies.item.post",
          "displayName": "inventory storage - create individual ill-policy",
          "description": "create individual ill-policy in storage"
        },
                {
          "permissionName": "inventory-storage.ill-policies.item.put",
          "displayName": "inventory storage - modify ill-policy",
          "description": "modify ill-policy in storage"
        },
                {
          "permissionName": "inventory-storage.ill-policies.item.delete",
          "displayName": "inventory storage - delete individual ill-policy",
          "description": "delete individual ill-policy from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-types.collection.get",
          "displayName": "inventory storage - get holdings-type collection",
          "description": "get holdings-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-types.item.get",
          "displayName": "inventory storage - get individual holdings-type",
          "description": "get individual holdings-type from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-types.item.post",
          "displayName": "inventory storage - create individual holdings-type",
          "description": "create individual holdings-type in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-types.item.put",
          "displayName": "inventory storage - modify holdings-type",
          "description": "modify holdings-type in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-types.item.delete",
          "displayName": "inventory storage - delete individual holdings-type",
          "description": "delete individual holdings-type from storage"
        },
                {
          "permissionName": "inventory-storage.instance-note-types.collection.get",
          "displayName": "inventory storage - get instance-note-type collection",
          "description": "get instance-note-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.instance-note-types.item.get",
          "displayName": "inventory storage - get individual instance-note-type",
          "description": "get individual instance-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.instance-note-types.item.post",
          "displayName": "inventory storage - create individual instance-note-type",
          "description": "create individual instance-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-note-types.item.put",
          "displayName": "inventory storage - modify instance-note-type",
          "description": "modify instance-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.instance-note-types.item.delete",
          "displayName": "inventory storage - delete individual instance-note-type",
          "description": "delete individual instance-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-note-types.collection.get",
          "displayName": "inventory storage - get holdings-note-type collection",
          "description": "get holdings-note-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-note-types.item.get",
          "displayName": "inventory storage - get individual holdings-note-type",
          "description": "get individual holdings-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-note-types.item.post",
          "displayName": "inventory storage - create individual holdings-note-type",
          "description": "create individual holdings-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-note-types.item.put",
          "displayName": "inventory storage - modify holdings-note-type",
          "description": "modify holdings-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-note-types.item.delete",
          "displayName": "inventory storage - delete individual holdings-note-type",
          "description": "delete individual holdings-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.item-note-types.collection.get",
          "displayName": "inventory storage - get item-note-type collection",
          "description": "get item-note-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.item-note-types.item.get",
          "displayName": "inventory storage - get individual item-note-type",
          "description": "get individual item-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.item-note-types.item.post",
          "displayName": "inventory storage - create individual item-note-type",
          "description": "create individual item-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.item-note-types.item.put",
          "displayName": "inventory storage - modify item-note-type",
          "description": "modify item-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.item-note-types.item.delete",
          "displayName": "inventory storage - delete individual item-note-type",
          "description": "delete individual item-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.item-damaged-statuses.collection.get",
          "displayName": "inventory storage - get item-damaged-statuses collection",
          "description": "get item-damaged-statuses collection from storage"
        },
                {
          "permissionName": "inventory-storage.item-damaged-statuses.item.get",
          "displayName": "inventory storage - get individual item-damaged-status",
          "description": "get individual item-damaged-status from storage"
        },
                {
          "permissionName": "inventory-storage.item-damaged-statuses.item.post",
          "displayName": "inventory storage - create individual item-damaged-status",
          "description": "create individual item-damaged-status in storage"
        },
                {
          "permissionName": "inventory-storage.item-damaged-statuses.item.put",
          "displayName": "inventory storage - modify item-damaged-status",
          "description": "modify item-damaged-status in storage"
        },
                {
          "permissionName": "inventory-storage.item-damaged-statuses.item.delete",
          "displayName": "inventory storage - delete individual item-damaged-status",
          "description": "delete individual item-damaged-status from storage"
        },
                {
          "permissionName": "inventory-storage.call-number-types.collection.get",
          "displayName": "inventory storage - get call-number-type collection",
          "description": "get call-number-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.call-number-types.item.get",
          "displayName": "inventory storage - get individual call-number-type",
          "description": "get individual call-number-type from storage"
        },
                {
          "permissionName": "inventory-storage.call-number-types.item.post",
          "displayName": "inventory storage - create individual call-number-type",
          "description": "create individual call-number-type in storage"
        },
                {
          "permissionName": "inventory-storage.call-number-types.item.put",
          "displayName": "inventory storage - modify call-number-type",
          "description": "modify call-number-type in storage"
        },
                {
          "permissionName": "inventory-storage.call-number-types.item.delete",
          "displayName": "inventory storage - delete individual call-number-type",
          "description": "delete individual call-number-type from storage"
        },
                {
          "permissionName": "inventory-storage.hrid-settings.item.get",
          "displayName": "inventory storage - get HRID settings",
          "description": "get the HRID settings from storage"
        },
                {
          "permissionName": "inventory-storage.hrid-settings.item.put",
          "displayName": "inventory storage - modify HRID settings",
          "description": "modify the HRID settings in storage"
        },
                {
          "permissionName": "inventory-storage.oai-pmh-view.instances.collection.get",
          "displayName": "inventory storage - get instances for oai pmh",
          "description": "get instances for oai pmh"
        },
                {
          "permissionName": "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
          "displayName": "inventory storage - get updated instances ids for oai pmh",
          "description": "get updated instances ids for oai pmh"
        },
                {
          "permissionName": "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
          "displayName": "inventory storage - get enriched instances for oai pmh",
          "description": "get enriched instances for oai pmh"
        },
                {
          "permissionName": "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
          "displayName": "inventory storage - get updated instances ids for inventory storage",
          "description": "get updated instances ids for inventory storage"
        },
                {
          "permissionName": "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
          "displayName": "inventory storage - get instances holdings and items for inventory storage",
          "description": "get instances holdings and items for inventory storage"
        },
                {
          "permissionName": "inventory-storage.holdings-sources.collection.get",
          "displayName": "inventory storage - get holdings-source collection",
          "description": "get holdings-records-source collection from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-sources.item.get",
          "displayName": "inventory storage - get individual holdings-source",
          "description": "get individual holdings-records-source from storage"
        },
                {
          "permissionName": "inventory-storage.holdings-sources.item.post",
          "displayName": "inventory storage - create individual holdings-source",
          "description": "create individual holdings-records-source in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-sources.item.put",
          "displayName": "inventory storage - modify holdings-source",
          "description": "modify holdings-records-source in storage"
        },
                {
          "permissionName": "inventory-storage.holdings-sources.item.delete",
          "displayName": "inventory storage - delete individual holdings-source",
          "description": "delete individual holdings-source from storage"
        },
                {
          "permissionName": "inventory-storage.bound-with-parts.collection.get",
          "displayName": "inventory storage - get parts of bound-with(s)",
          "description": "get holdings-records associated with bound-with items"
        },
                {
          "permissionName": "inventory-storage.bound-with-parts.item.get",
          "displayName": "inventory storage - get a part of a bound-with",
          "description": "get a holdings-record id associated with a bound-with item"
        },
                {
          "permissionName": "inventory-storage.bound-with-parts.item.post",
          "displayName": "inventory storage - add a part to a bound-with",
          "description": "add a holdings record to a bound-with by associating it with the bound-with item"
        },
                {
          "permissionName": "inventory-storage.bound-withs.collection.put",
          "displayName": "inventory storage - modify a bound-withs",
          "description": "replace a holdings-records of a bound-withs or move it to a different bound-withs"
        },
                {
          "permissionName": "inventory-storage.bound-with-parts.item.put",
          "displayName": "inventory storage - modify a bound-with part",
          "description": "replace a holdings-record of a bound-with or move it to a different bound-with"
        },
                {
          "permissionName": "inventory-storage.bound-with-parts.item.delete",
          "displayName": "inventory storage - remove part of a bound-with",
          "description": "remove a holdings-record from a bound-with"
        },
                {
          "permissionName": "inventory-storage.instance.reindex.item.delete",
          "displayName": "inventory storage - cancel reindex job",
          "description": "cancel a running reindexing job"
        },
                {
          "permissionName": "inventory-storage.instance.reindex.item.get",
          "displayName": "inventory storage - get reindex job by id",
          "description": "get reindex job by id"
        },
                {
          "permissionName": "inventory-storage.instance.reindex.post",
          "displayName": "inventory storage - submit reindex instance job",
          "description": "submit reindex instance job"
        },
                {
          "permissionName": "inventory-storage.instance.reindex.collection.get",
          "displayName": "inventory storage - get reindex instance jobs",
          "description": "get reindex instance jobs"
        },
                {
          "permissionName": "inventory-storage.instance.iteration.post",
          "displayName": "inventory storage - submit iteration instance job",
          "description": "submit iteration instance job"
        },
                {
          "permissionName": "inventory-storage.instance.iteration.item.get",
          "displayName": "inventory storage - get iteration job by id",
          "description": "get iteration job by id"
        },
                {
          "permissionName": "inventory-storage.instance.iteration.item.delete",
          "displayName": "inventory storage - cancel iteration job",
          "description": "cancel running iteration job"
        },
                {
          "permissionName": "inventory-storage.inventory-view.instances.collection.get",
          "displayName": "inventory view - get instances by query with their holdings and items",
          "description": "get instances by query with their holdings and items"
        },
                {
          "permissionName": "inventory-storage.inventory-view.instance-set.get",
          "displayName": "inventory view - get instances by query with a set of related records",
          "description": "get instances by query with a set of related records"
        },
                {
          "permissionName": "inventory-storage.migration.job.item.delete",
          "displayName": "inventory storage - cancel migration job",
          "description": "cancel a running migration job"
        },
                {
          "permissionName": "inventory-storage.migration.job.item.get",
          "displayName": "inventory storage - get migration job by id",
          "description": "get migration job by id"
        },
                {
          "permissionName": "inventory-storage.migration.job.collection.get",
          "displayName": "inventory storage - get migration jobs",
          "description": "get migration jobs"
        },
                {
          "permissionName": "inventory-storage.migration.item.get",
          "displayName": "inventory storage - get list of available migrations",
          "description": "get list of available migrations"
        },
                {
          "permissionName": "inventory-storage.migration.job.post",
          "displayName": "inventory storage - submit migration job",
          "description": "submit migration instance job"
        },
                {
          "permissionName": "inventory-storage.instance-date-types.collection.get",
          "displayName": "inventory storage - get list of instance-date-types",
          "description": "get list of instance-date-types"
        },
                {
          "permissionName": "inventory-storage.instance-date-types.item.patch",
          "displayName": "inventory storage - patch instance-date-type",
          "description": "patch instance-date-type"
        },
                {
          "permissionName": "inventory-storage.instances.bulk.post",
          "displayName": "inventory storage - create or update instances records in bulk",
          "description": "create or update instances records in bulk from external file"
        },
                {
          "permissionName": "inventory-storage.all",
          "displayName": "inventory storage module - all permissions",
          "description": "Entire set of permissions needed to use the inventory storage module",
          "subPermissions":           [
            "inventory-storage-dereferenced.items.item.get",
            "inventory-storage-dereferenced.items.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.retrieve.collection.post",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.post",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.delete",
            "inventory-storage.items.collection.delete",
            "inventory-storage.items.batch.post",
            "inventory-storage.items.batch-unsafe.post",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.retrieve.collection.post",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.item.post",
            "inventory-storage.holdings.item.put",
            "inventory-storage.holdings.item.delete",
            "inventory-storage.holdings.collection.delete",
            "inventory-storage.holdings.batch.post",
            "inventory-storage.holdings.batch-unsafe.post",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.retrieve.collection.post",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.item.post",
            "inventory-storage.instances.item.put",
            "inventory-storage.instances.item.delete",
            "inventory-storage.instances.preceding-succeeding-titles.collection.put",
            "inventory-storage.instances.source-record.delete",
            "inventory-storage.instances.source-record.marc-json.get",
            "inventory-storage.instances.source-record.marc-json.put",
            "inventory-storage.instances.source-record.marc-json.delete",
            "inventory-storage.instances.collection.delete",
            "inventory-storage.instances.batch.synchronous.post",
            "inventory-storage.instances.batch-unsafe.post",
            "inventory-storage.instances.bulk.post",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.item.post",
            "inventory-storage.loan-types.item.put",
            "inventory-storage.loan-types.item.delete",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.item.post",
            "inventory-storage.material-types.item.put",
            "inventory-storage.material-types.item.delete",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.item.post",
            "inventory-storage.location-units.institutions.item.put",
            "inventory-storage.location-units.institutions.item.delete",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.item.post",
            "inventory-storage.location-units.campuses.item.put",
            "inventory-storage.location-units.campuses.item.delete",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.item.post",
            "inventory-storage.location-units.libraries.item.put",
            "inventory-storage.location-units.libraries.item.delete",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.item.post",
            "inventory-storage.locations.item.put",
            "inventory-storage.locations.item.delete",
            "inventory-storage.instance-relationships.collection.get",
            "inventory-storage.instance-relationships.item.get",
            "inventory-storage.instance-relationships.item.post",
            "inventory-storage.instance-relationships.item.put",
            "inventory-storage.instance-relationships.item.delete",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-relationship-types.item.get",
            "inventory-storage.instance-relationship-types.item.post",
            "inventory-storage.instance-relationship-types.item.put",
            "inventory-storage.instance-relationship-types.item.delete",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.item.post",
            "inventory-storage.identifier-types.item.put",
            "inventory-storage.identifier-types.item.delete",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.contributor-types.item.post",
            "inventory-storage.contributor-types.item.put",
            "inventory-storage.contributor-types.item.delete",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.contributor-name-types.item.get",
            "inventory-storage.contributor-name-types.item.post",
            "inventory-storage.contributor-name-types.item.put",
            "inventory-storage.contributor-name-types.item.delete",
            "inventory-storage.record-bulk.ids.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.instance-formats.item.post",
            "inventory-storage.instance-formats.item.put",
            "inventory-storage.instance-formats.item.delete",
            "inventory-storage.subject-types.collection.get",
            "inventory-storage.subject-types.item.get",
            "inventory-storage.subject-types.item.post",
            "inventory-storage.subject-types.item.put",
            "inventory-storage.subject-types.item.delete",
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-sources.item.get",
            "inventory-storage.subject-sources.item.post",
            "inventory-storage.subject-sources.item.put",
            "inventory-storage.subject-sources.item.delete",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.instance-types.item.post",
            "inventory-storage.instance-types.item.put",
            "inventory-storage.instance-types.item.delete",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.nature-of-content-terms.item.post",
            "inventory-storage.nature-of-content-terms.item.put",
            "inventory-storage.nature-of-content-terms.item.delete",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.classification-types.item.post",
            "inventory-storage.classification-types.item.put",
            "inventory-storage.classification-types.item.delete",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.alternative-title-types.item.post",
            "inventory-storage.alternative-title-types.item.put",
            "inventory-storage.alternative-title-types.item.delete",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.modes-of-issuance.item.post",
            "inventory-storage.modes-of-issuance.item.put",
            "inventory-storage.modes-of-issuance.item.delete",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.instance-statuses.item.post",
            "inventory-storage.instance-statuses.item.put",
            "inventory-storage.instance-statuses.item.delete",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.electronic-access-relationships.item.post",
            "inventory-storage.electronic-access-relationships.item.put",
            "inventory-storage.electronic-access-relationships.item.delete",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.statistical-code-types.item.post",
            "inventory-storage.statistical-code-types.item.put",
            "inventory-storage.statistical-code-types.item.delete",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.statistical-codes.item.post",
            "inventory-storage.statistical-codes.item.put",
            "inventory-storage.statistical-codes.item.delete",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.ill-policies.item.post",
            "inventory-storage.ill-policies.item.put",
            "inventory-storage.ill-policies.item.delete",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.holdings-types.item.post",
            "inventory-storage.holdings-types.item.put",
            "inventory-storage.holdings-types.item.delete",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.call-number-types.item.post",
            "inventory-storage.call-number-types.item.put",
            "inventory-storage.call-number-types.item.delete",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.instance-note-types.item.post",
            "inventory-storage.instance-note-types.item.put",
            "inventory-storage.instance-note-types.item.delete",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-note-types.item.post",
            "inventory-storage.holdings-note-types.item.put",
            "inventory-storage.holdings-note-types.item.delete",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.item-note-types.item.post",
            "inventory-storage.item-note-types.item.put",
            "inventory-storage.item-note-types.item.delete",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.item.get",
            "inventory-storage.item-damaged-statuses.item.post",
            "inventory-storage.item-damaged-statuses.item.put",
            "inventory-storage.item-damaged-statuses.item.delete",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.item.post",
            "inventory-storage.service-points.item.put",
            "inventory-storage.service-points.item.delete",
            "inventory-storage.service-points-users.collection.get",
            "inventory-storage.service-points-users.item.get",
            "inventory-storage.service-points-users.item.post",
            "inventory-storage.service-points-users.item.put",
            "inventory-storage.service-points-users.item.delete",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.hrid-settings.item.put",
            "inventory-storage.preceding-succeeding-titles.collection.get",
            "inventory-storage.preceding-succeeding-titles.item.get",
            "inventory-storage.preceding-succeeding-titles.item.post",
            "inventory-storage.preceding-succeeding-titles.item.put",
            "inventory-storage.preceding-succeeding-titles.item.delete",
            "inventory-storage.oai-pmh-view.instances.collection.get",
            "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
            "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.post",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.put",
            "inventory-storage.holdings-sources.item.delete",
            "inventory-storage.bound-with-parts.collection.get",
            "inventory-storage.bound-with-parts.item.get",
            "inventory-storage.bound-with-parts.item.post",
            "inventory-storage.bound-withs.collection.put",
            "inventory-storage.bound-with-parts.item.put",
            "inventory-storage.bound-with-parts.item.delete",
            "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
            "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
            "inventory-storage.inventory-view.instances.collection.get",
            "inventory-storage.inventory-view.instance-set.get",
            "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
            "inventory-storage.instance.reindex.item.delete",
            "inventory-storage.instance.reindex.item.get",
            "inventory-storage.instance.reindex.post",
            "inventory-storage.instance.reindex.collection.get",
            "inventory-storage.instance.iteration.post",
            "inventory-storage.instance.iteration.item.get",
            "inventory-storage.instance.iteration.item.delete",
            "inventory-storage.migration.job.item.delete",
            "inventory-storage.migration.job.post",
            "inventory-storage.migration.job.item.get",
            "inventory-storage.migration.job.collection.get",
            "inventory-storage.migration.item.get",
            "inventory-storage.reindex-records.publish.post",
            "inventory-storage.instance-date-types.collection.get",
            "inventory-storage.instance-date-types.item.patch"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-inventory-storage:29.0.5",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 715827883,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "ENV",
            "value": "folio"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "DB_MAXSHAREDPOOLSIZE",
            "value": "3"
          },
                    {
            "name": "DB_CONNECTIONRELEASEDELAY",
            "value": "60000"
          },
                    {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
                    {
            "name": "DB_RECONNECTINTERVAL",
            "value": "10000"
          },
                    {
            "name": "DB_EXPLAIN_QUERY_THRESHOLD",
            "value": "1000000"
          },
                    {
            "name": "DB_ALLOW_SUPPRESS_OPTIMISTIC_LOCKING",
            "value": "0001-01-01T00:00:00Z"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
                    {
            "name": "KAFKA_DOMAIN_TOPIC_NUM_PARTITIONS",
            "value": "50"
          },
                    {
            "name": "KAFKA_CLASSIFICATION_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_CALL_NUMBER_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_LOCATION_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_LIBRARY_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_CAMPUS_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_INSTITUTION_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_SUBJECT_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_SUBJECT_SOURCE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
                    {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_NUM_PARTITIONS",
            "value": "16"
          },
                    {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_MESSAGE_RETENTION",
            "value": "86400000"
          },
                    {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_MAX_MESSAGE_SIZE",
            "value": "10485760"
          },
                    {
            "name": "KAFKA_REINDEX_PRODUCER_MAX_REQUEST_SIZE_BYTES",
            "value": "10485760"
          },
                    {
            "name": "S3_URL",
            "value": "http://127.0.0.1:9000/"
          },
                    {
            "name": "S3_REGION",
            "value": ""
          },
                    {
            "name": "S3_BUCKET",
            "value": "marc-migrations"
          },
                    {
            "name": "S3_ACCESS_KEY_ID",
            "value": ""
          },
                    {
            "name": "S3_SECRET_ACCESS_KEY",
            "value": ""
          },
                    {
            "name": "S3_IS_AWS",
            "value": "true"
          },
                    {
            "name": "ECS_TLR_FEATURE_ENABLED",
            "value": "false"
          }
        ]
      }
    },
        {
      "id": "mod-circulation-storage-17.4.0",
      "name": "Circulation Storage Module",
      "requires":       [
                {
          "id": "item-storage",
          "version": "5.0 6.0 7.0 8.2 9.0 10.0"
        },
                {
          "id": "holdings-storage",
          "version": "1.3 2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
                {
          "id": "pubsub-publish",
          "version": "0.1"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.1"
        },
                {
          "id": "service-points",
          "version": "3.4"
        }
      ],
      "provides":       [
                {
          "id": "request-storage-batch",
          "version": "2.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/request-storage-batch/requests",
            "permissionsRequired": ["circulation-storage.request-batch.item.post"]
          }]
        },
                {
          "id": "loan-storage",
          "version": "7.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": ["circulation-storage.loans.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": ["circulation-storage.loans.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": ["circulation-storage.loans.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": ["circulation-storage.loans.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": ["circulation-storage.loans.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": ["circulation-storage.loans.collection.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-storage/loan-history",
              "permissionsRequired": ["circulation-storage.loans-history.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/loan-storage/loans/anonymize/{userId}",
              "permissionsRequired": ["circulation-storage.loans.anonymize.execute"]
            }
          ]
        },
                {
          "id": "anonymize-storage-loans",
          "version": "0.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/anonymize-storage-loans",
            "permissionsRequired": ["anonymize-storage-loans.post"]
          }]
        },
                {
          "id": "circulation-rules-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation-rules-storage",
              "permissionsRequired": ["circulation-storage.circulation-rules.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation-rules-storage",
              "permissionsRequired": ["circulation-storage.circulation-rules.put"]
            }
          ]
        },
                {
          "id": "circulation-settings-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation-settings-storage/circulation-settings",
              "permissionsRequired": ["circulation-storage.circulation-settings.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": ["circulation-storage.circulation-settings.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": ["circulation-storage.circulation-settings.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation-settings-storage/circulation-settings",
              "permissionsRequired": ["circulation-storage.circulation-settings.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": ["circulation-storage.circulation-settings.item.delete"]
            }
          ]
        },
                {
          "id": "loan-policy-storage",
          "version": "2.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": ["circulation-storage.loan-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": ["circulation-storage.loan-policies.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": ["circulation-storage.loan-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": ["circulation-storage.loan-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": ["circulation-storage.loan-policies.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": ["circulation-storage.loan-policies.collection.delete"]
            }
          ]
        },
                {
          "id": "request-storage",
          "version": "6.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": ["circulation-storage.requests.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": ["circulation-storage.requests.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": ["circulation-storage.requests.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": ["circulation-storage.requests.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": ["circulation-storage.requests.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": ["circulation-storage.requests.collection.delete"]
            }
          ]
        },
                {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.collection.delete"]
            }
          ]
        },
                {
          "id": "staff-slips-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": ["circulation-storage.staff-slips.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": ["circulation-storage.staff-slips.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": ["circulation-storage.staff-slips.collection.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": ["circulation-storage.staff-slips.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": ["circulation-storage.staff-slips.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": ["circulation-storage.staff-slips.item.delete"]
            }
          ]
        },
                {
          "id": "cancellation-reason-storage",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.collection.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": ["circulation-storage.cancellation-reasons.item.delete"]
            }
          ]
        },
                {
          "id": "patron-notice-policy-storage",
          "version": "0.13",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
              "permissionsRequired": ["circulation-storage.patron-notice-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": ["circulation-storage.patron-notice-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": ["circulation-storage.patron-notice-policies.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
              "permissionsRequired": ["circulation-storage.patron-notice-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": ["circulation-storage.patron-notice-policies.item.get"]
            }
          ]
        },
                {
          "id": "request-policy-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/request-policy-storage/request-policies",
              "permissionsRequired": ["circulation-storage.request-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "permissionsRequired": ["circulation-storage.request-policies.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/request-policy-storage/request-policies",
              "modulePermissions":               [
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsRequired": ["circulation-storage.request-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "modulePermissions":               [
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsRequired": ["circulation-storage.request-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "permissionsRequired": ["circulation-storage.request-policies.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/request-policy-storage/request-policies",
              "permissionsRequired": ["circulation-storage.request-policies.collection.delete"]
            }
          ]
        },
                {
          "id": "actual-cost-record-storage",
          "version": "0.9",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records",
              "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records",
              "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.delete"]
            }
          ]
        },
                {
          "id": "request-preference-storage",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/request-preference-storage/request-preference",
              "permissionsRequired": ["circulation-storage.request-preferences.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": ["circulation-storage.request-preferences.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": ["circulation-storage.request-preferences.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/request-preference-storage/request-preference",
              "permissionsRequired": ["circulation-storage.request-preferences.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": ["circulation-storage.request-preferences.item.get"]
            }
          ]
        },
                {
          "id": "scheduled-notice-storage",
          "version": "0.6",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.collection.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.delete"]
            }
          ]
        },
                {
          "id": "tlr-feature-toggle-job-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
              "permissionsRequired": ["tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
              "permissionsRequired": ["tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": ["tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": ["tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": ["tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "patron-action-session-storage",
          "version": "0.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions",
              "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions",
              "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-action-session-storage/expired-session-patron-ids",
              "permissionsRequired": ["patron-action-session-storage.expired-session-patron-ids.collection.get"]
            }
          ]
        },
                {
          "id": "check-in-storage",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/check-in-storage/check-ins",
              "permissionsRequired": ["check-in-storage.check-ins.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/check-in-storage/check-ins",
              "permissionsRequired": ["check-in-storage.check-ins.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/check-in-storage/check-ins/{id}",
              "permissionsRequired": ["check-in-storage.check-ins.item.get"]
            }
          ]
        },
                {
          "id": "checkout-lock-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/check-out-lock-storage",
              "permissionsRequired": ["checkout-lock-storage.checkout-locks.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/check-out-lock-storage/{lockId}",
              "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/check-out-lock-storage",
              "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/check-out-lock-storage/{lockId}",
              "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.delete"]
            }
          ]
        },
                {
          "id": "print-events-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/print-events-storage/print-events-entry",
              "permissionsRequired": ["print-events-storage.print-events-entry.item.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/print-events-storage/print-events-status",
              "permissionsRequired": ["print-events-storage.print-events-status.item.post"]
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/scheduled-request-expiration",
              "modulePermissions":               [
                "pubsub.publish.post",
                "configuration.entries.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/tlr-feature-toggle-job/start",
              "modulePermissions": ["configuration.entries.collection.get"],
              "unit": "minute",
              "delay": "5"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "print-events-storage.print-events-entry.item.post",
          "displayName": "print events storage - save print event logs",
          "description": "save print event log in storage"
        },
                {
          "permissionName": "print-events-storage.print-events-status.item.post",
          "displayName": "print-events-storage - Fetch print event status",
          "description": "Fetch print event details for a batch of request Ids"
        },
                {
          "permissionName": "check-in-storage.check-ins.collection.get",
          "displayName": "Check-in storage - get check-ins collection",
          "description": "Get check-ins collection from storage"
        },
                {
          "permissionName": "check-in-storage.check-ins.item.post",
          "displayName": "Check-in storage - create a check-in record",
          "description": "Create a check-in record"
        },
                {
          "permissionName": "check-in-storage.check-ins.item.get",
          "displayName": "Check-in storage - get a check-in record by id",
          "description": "Get individual check-in by id"
        },
                {
          "permissionName": "circulation-storage.loans.collection.get",
          "displayName": "Circulation storage - get loan collection",
          "description": "Get loan collection from storage"
        },
                {
          "permissionName": "circulation-storage.loans.collection.delete",
          "displayName": "Circulation storage - delete entire loan collection",
          "description": "Delete entire loan collection from storage"
        },
                {
          "permissionName": "circulation-storage.loans.item.get",
          "displayName": "Circulation storage - get individual loan",
          "description": "Get individual loan from storage"
        },
                {
          "permissionName": "circulation-storage.loans.item.post",
          "displayName": "Circulation storage - create individual loan",
          "description": "Create individual loan in storage"
        },
                {
          "permissionName": "circulation-storage.loans.item.put",
          "displayName": "Circulation storage - modify loan",
          "description": "Modify loan in storage"
        },
                {
          "permissionName": "circulation-storage.loans.item.delete",
          "displayName": "Circulation storage - delete individual loan",
          "description": "Delete individual loan from storage"
        },
                {
          "permissionName": "circulation-storage.loans.anonymize.execute",
          "displayName": "Circulation storage - anonymize loans for a user",
          "description": "Anonymize closed loans for a single user",
          "replaces": ["circulation-storage.loans.collection.anonymize.user.post"]
        },
                {
          "permissionName": "anonymize-storage-loans.post",
          "displayName": "circulation - anonymize loans",
          "description": "anonymize a list of loans"
        },
                {
          "permissionName": "circulation-storage.circulation-rules.get",
          "displayName": "Circulation storage - get circulation rules",
          "description": "Get circulation rules from storage"
        },
                {
          "permissionName": "circulation-storage.circulation-rules.put",
          "displayName": "Circulation storage - modify circulation rules",
          "description": "Modify circulation rules in storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.collection.get",
          "displayName": "Circulation storage - get loan policy collection",
          "description": "Get loan policy collection from storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.collection.delete",
          "displayName": "Circulation storage - delete entire loan collection",
          "description": "Delete entire loan collection from storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.item.get",
          "displayName": "Circulation storage - get individual loan policy",
          "description": "Get individual loan policy from storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.item.post",
          "displayName": "Circulation storage - create individual loan policy",
          "description": "Create individual loan policy in storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.item.put",
          "displayName": "Circulation storage - modify loan policy",
          "description": "Modify loan policy in storage"
        },
                {
          "permissionName": "circulation-storage.loan-policies.item.delete",
          "displayName": "Circulation storage - delete individual loan policy",
          "description": "Delete individual loan policy from storage"
        },
                {
          "permissionName": "circulation-storage.loans-history.collection.get",
          "displayName": "Circulation storage - get loan history collection",
          "description": "Get loan history collection from storage"
        },
                {
          "permissionName": "circulation-storage.requests.collection.get",
          "displayName": "Circulation storage - get request collection",
          "description": "Get request collection from storage"
        },
                {
          "permissionName": "circulation-storage.requests.collection.delete",
          "displayName": "Circulation storage - delete entire request collection",
          "description": "Delete entire request collection from storage"
        },
                {
          "permissionName": "circulation-storage.requests.item.get",
          "displayName": "Circulation storage - get individual request",
          "description": "Get individual request from storage"
        },
                {
          "permissionName": "circulation-storage.requests.item.post",
          "displayName": "Circulation storage - create individual request",
          "description": "Create individual request in storage"
        },
                {
          "permissionName": "circulation-storage.requests.item.put",
          "displayName": "Circulation storage - modify request",
          "description": "Modify request in storage"
        },
                {
          "permissionName": "circulation-storage.request-batch.item.post",
          "displayName": "Circulation storage batch - modify requests",
          "description": "Modify requests in storage"
        },
                {
          "permissionName": "circulation-storage.requests.item.delete",
          "displayName": "Circulation storage - delete individual request",
          "description": "Delete individual request from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.collection.get",
          "displayName": "Circulation storage - get fixed due date collection",
          "description": "Get fixed due date collection from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.get",
          "displayName": "Circulation storage - get individual fixed due date",
          "description": "Get individual fixed due date from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.post",
          "displayName": "Circulation storage - create individual fixed due date",
          "description": "Create individual fixed due date from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.put",
          "displayName": "Circulation storage - modify individual fixed due date",
          "description": "Modify individual fixed due date from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.delete",
          "displayName": "Circulation storage - delete individual fixed due date",
          "description": "Delete individual fixed due date from storage"
        },
                {
          "permissionName": "circulation-storage.fixed-due-date-schedules.collection.delete",
          "displayName": "Circulation storage - delete collection of fixed due date",
          "description": "Delete collection of fixed due date from storage"
        },
                {
          "permissionName": "circulation-storage.staff-slips.collection.get",
          "displayName": "Circulation storage - get staff slip collection from storage",
          "description": "Get staff slip collection from storage"
        },
                {
          "permissionName": "circulation-storage.staff-slips.collection.delete",
          "displayName": "Circulation storage - delete entire staff slipp collection",
          "description": "Delete entire staff slip collection"
        },
                {
          "permissionName": "circulation-storage.staff-slips.item.post",
          "displayName": "Circulation storage - create indavidual staff slip in storage",
          "description": "Create individual staff slip in storage"
        },
                {
          "permissionName": "circulation-storage.staff-slips.item.get",
          "displayName": "Circulation storage - get indavidual staff slip from storage",
          "description": "Get individual staff slip from storage"
        },
                {
          "permissionName": "circulation-storage.staff-slips.item.delete",
          "displayName": "Circulation storage - delete indavidual staff slip from storage",
          "description": "Delete individual staff slip from storage"
        },
                {
          "permissionName": "circulation-storage.staff-slips.item.put",
          "displayName": "Circulation storage - modify indavidual staff slip in storage",
          "description": "Modify individual staff slip in storage"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.collection.get",
          "displayName": "Circulation storage - get cancellation reasons collection",
          "description": "Get cancellation reasons from storage"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.item.get",
          "displayName": "Circulation storage - get individual cancellation reason",
          "description": "Get individual cancellation reason by id"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.item.post",
          "displayName": "Circulation storage - create individual cancellation reason",
          "description": "Create individual cancellation reason"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.item.put",
          "displayName": "Circulation storage - put individual cancellation reason",
          "description": "Modify individual cancellation reason by id"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.collection.delete",
          "displayName": "Circulation storage - delete cancellation reasons",
          "description": "Delete entire cancellation reasons collection"
        },
                {
          "permissionName": "circulation-storage.cancellation-reasons.item.delete",
          "displayName": "Circulation storage - delete individual cancellation reason",
          "description": "Delete individual cancellation reason by id"
        },
                {
          "permissionName": "circulation-storage.patron-notice-policies.item.post",
          "displayName": "Circulation storage - post individual patron notice policy",
          "description": "Post individual patron notice policy"
        },
                {
          "permissionName": "circulation-storage.patron-notice-policies.item.put",
          "displayName": "Circulation storage - put individual patron notice policy",
          "description": "Put individual patron notice policy by id"
        },
                {
          "permissionName": "circulation-storage.patron-notice-policies.item.delete",
          "displayName": "Circulation storage - delete patron notice policy",
          "description": "Delete patron notice policy by id"
        },
                {
          "permissionName": "circulation-storage.patron-notice-policies.collection.get",
          "displayName": "Circulation storage - get patron notice policy collection",
          "description": "Get patron notice policy collection from storage"
        },
                {
          "permissionName": "circulation-storage.patron-notice-policies.item.get",
          "displayName": "Circulation storage - get individual patron notice policy",
          "description": "Get individual patron notice policy by id"
        },
                {
          "permissionName": "circulation-storage.request-preferences.item.post",
          "displayName": "Circulation storage - post individual request preference",
          "description": "Post individual request preference"
        },
                {
          "permissionName": "circulation-storage.request-preferences.item.put",
          "displayName": "Circulation storage - put individual request preference",
          "description": "Put individual request preference by id"
        },
                {
          "permissionName": "circulation-storage.request-preferences.item.delete",
          "displayName": "Circulation storage - delete request preference",
          "description": "Delete request preference by id"
        },
                {
          "permissionName": "circulation-storage.request-preferences.collection.get",
          "displayName": "Circulation storage - get request preference collection",
          "description": "Get request preference collection from storage"
        },
                {
          "permissionName": "circulation-storage.request-preferences.item.get",
          "displayName": "Circulation storage - get individual request preference",
          "description": "Get individual request preference by id"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.collection.get",
          "displayName": "Circulation storage - get scheduled notice collection",
          "description": "Get scheduled notice collection from storage"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.get",
          "displayName": "Circulation storage - get individual scheduled notice",
          "description": "Get individual scheduled notice by id"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.post",
          "displayName": "Circulation storage - post individual scheduled notice",
          "description": "Create individual scheduled notice"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.put",
          "displayName": "Circulation storage - put individual scheduled notice",
          "description": "Put individual scheduled notice by id"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.delete",
          "displayName": "Circulation storage - delete individual scheduled notice",
          "description": "Delete individual scheduled notice by id"
        },
                {
          "permissionName": "scheduled-notice-storage.scheduled-notices.collection.delete",
          "displayName": "Circulation storage - delete all scheduled notices",
          "description": "Delete all scheduled notices from storage"
        },
                {
          "permissionName": "patron-action-session-storage.patron-action-sessions.collection.get",
          "displayName": "Circulation storage - get patron action session collection",
          "description": "Get patron action session collection from storage"
        },
                {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.get",
          "displayName": "Circulation storage - get patron action session",
          "description": "Get individual patron action session by id"
        },
                {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.post",
          "displayName": "Circulation storage - post patron action session",
          "description": "Create individual patron action session"
        },
                {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.put",
          "displayName": "Circulation storage - put patron action session",
          "description": "Put patron action session by id"
        },
                {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.delete",
          "displayName": "Circulation storage - delete patron action session",
          "description": "Delete patron action session by id"
        },
                {
          "permissionName": "patron-action-session-storage.expired-session-patron-ids.collection.get",
          "displayName": "Circulation storage - get expired session patron ids collection",
          "description": "Get expired session patron ids collection from storage"
        },
                {
          "permissionName": "circulation-storage.circulation-settings.collection.get",
          "displayName": "Circulation storage - get circulation settings collection",
          "description": "Get circulation settings collection from storage"
        },
                {
          "permissionName": "circulation-storage.circulation-settings.item.get",
          "displayName": "Circulation storage - get circulation setting by id",
          "description": "Get circulation setting by id from storage"
        },
                {
          "permissionName": "circulation-storage.circulation-settings.item.post",
          "displayName": "Circulation storage - create circulation setting",
          "description": "Create circulation setting in storage"
        },
                {
          "permissionName": "circulation-storage.circulation-settings.item.put",
          "displayName": "Circulation storage - update circulation setting by id",
          "description": "Update circulation setting by id"
        },
                {
          "permissionName": "circulation-storage.circulation-settings.item.delete",
          "displayName": "Circulation storage - delete circulation setting by id",
          "description": "Delete circulation setting by id"
        },
                {
          "permissionName": "circulation-storage.all",
          "displayName": "Circulation storage module - all permissions",
          "description": "Entire set of permissions needed to use the circulation storage module",
          "subPermissions":           [
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.delete",
            "circulation-storage.loans.collection.delete",
            "circulation-storage.loans.anonymize.execute",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.circulation-rules.put",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.item.post",
            "circulation-storage.loan-policies.item.put",
            "circulation-storage.loan-policies.item.delete",
            "circulation-storage.loan-policies.collection.delete",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.delete",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.fixed-due-date-schedules.collection.delete",
            "circulation-storage.fixed-due-date-schedules.item.delete",
            "circulation-storage.fixed-due-date-schedules.item.put",
            "circulation-storage.fixed-due-date-schedules.item.post",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.staff-slips.item.delete",
            "circulation-storage.staff-slips.collection.delete",
            "circulation-storage.staff-slips.collection.get",
            "circulation-storage.staff-slips.item.post",
            "circulation-storage.staff-slips.item.put",
            "circulation-storage.staff-slips.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.cancellation-reasons.item.post",
            "circulation-storage.cancellation-reasons.item.put",
            "circulation-storage.cancellation-reasons.collection.delete",
            "circulation-storage.cancellation-reasons.item.delete",
            "circulation-storage.patron-notice-policies.item.post",
            "circulation-storage.patron-notice-policies.item.put",
            "circulation-storage.patron-notice-policies.item.delete",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-preferences.item.post",
            "circulation-storage.request-preferences.item.put",
            "circulation-storage.request-preferences.item.delete",
            "circulation-storage.request-preferences.collection.get",
            "circulation-storage.request-preferences.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.delete",
            "circulation-storage.request-policies.item.delete",
            "circulation-storage.request-policies.item.post",
            "circulation-storage.request-policies.item.put",
            "circulation-storage.request-batch.item.post",
            "scheduled-notice-storage.scheduled-notices.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "scheduled-notice-storage.scheduled-notices.item.put",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "anonymize-storage-loans.post",
            "patron-action-session-storage.patron-action-sessions.collection.get",
            "patron-action-session-storage.patron-action-sessions.item.get",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "patron-action-session-storage.patron-action-sessions.item.put",
            "patron-action-session-storage.patron-action-sessions.item.delete",
            "patron-action-session-storage.expired-session-patron-ids.collection.get",
            "check-in-storage.check-ins.collection.get",
            "check-in-storage.check-ins.item.post",
            "check-in-storage.check-ins.item.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.item.put",
            "actual-cost-record-storage.actual-cost-records.item.delete",
            "checkout-lock-storage.checkout-locks.item.post",
            "checkout-lock-storage.checkout-locks.item.delete",
            "checkout-lock-storage.checkout-locks.item.get",
            "checkout-lock-storage.checkout-locks.collection.get",
            "circulation-storage.circulation-settings.collection.get",
            "circulation-storage.circulation-settings.item.get",
            "circulation-storage.circulation-settings.item.post",
            "circulation-storage.circulation-settings.item.put",
            "circulation-storage.circulation-settings.item.delete",
            "print-events-storage.print-events-entry.item.post",
            "print-events-storage.print-events-status.item.post"
          ]
        },
                {
          "permissionName": "circulation-storage.request-policies.collection.get",
          "displayName": "Circulation storage - get request policy collection",
          "description": "Get request policy collection from storage"
        },
                {
          "permissionName": "circulation-storage.request-policies.collection.delete",
          "displayName": "Circulation storage - delete entire request policy collection",
          "description": "Delete entire request policy collection from storage"
        },
                {
          "permissionName": "circulation-storage.request-policies.item.get",
          "displayName": "Circulation storage - get individual request policy",
          "description": "Get individual request policy from storage"
        },
                {
          "permissionName": "circulation-storage.request-policies.item.post",
          "displayName": "Circulation storage - create individual request policy",
          "description": "Create individual request policy in storage"
        },
                {
          "permissionName": "circulation-storage.request-policies.item.put",
          "displayName": "Circulation storage - modify individual request policy",
          "description": "Modify request policy in storage"
        },
                {
          "permissionName": "circulation-storage.request-policies.item.delete",
          "displayName": "Circulation storage - delete individual request policy",
          "description": "Delete individual request policy from storage"
        },
                {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
          "displayName": "Circulation storage - post tlr feature toggle job",
          "description": "Create tlr feature toggle job"
        },
                {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
          "displayName": "Circulation storage - get tlr feature toggle job collection",
          "description": "Get tlr feature toggle job collection"
        },
                {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
          "displayName": "Circulation storage - get tlr feature toggle job",
          "description": "Get tlr feature toggle job"
        },
                {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
          "displayName": "Circulation storage - put tlr feature toggle job",
          "description": "Update tlr feature toggle job"
        },
                {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
          "displayName": "Circulation storage - delete tlr feature toggle job",
          "description": "Delete tlr feature toggle job"
        },
                {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.post",
          "displayName": "Circulation storage - post actual cost record",
          "description": "Create actual cost record"
        },
                {
          "permissionName": "actual-cost-record-storage.actual-cost-records.collection.get",
          "displayName": "Circulation storage - get actual cost record collection",
          "description": "Get actual cost record collection"
        },
                {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.get",
          "displayName": "Circulation storage - get actual cost record",
          "description": "Get actual cost record"
        },
                {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.put",
          "displayName": "Circulation storage - put actual cost record",
          "description": "Update actual cost record"
        },
                {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.delete",
          "displayName": "Circulation storage - delete actual cost record",
          "description": "Delete actual cost record"
        },
                {
          "permissionName": "checkout-lock-storage.checkout-locks.item.post",
          "displayName": "Circulation storage - create lock",
          "description": "create lock for the userId"
        },
                {
          "permissionName": "checkout-lock-storage.checkout-locks.item.delete",
          "displayName": "Circulation storage - delete lock",
          "description": "Delete lock for the userId"
        },
                {
          "permissionName": "checkout-lock-storage.checkout-locks.item.get",
          "displayName": "Circulation storage - get lock",
          "description": "get lock for the userId"
        },
                {
          "permissionName": "checkout-lock-storage.checkout-locks.collection.get",
          "displayName": "Circulation storage - get locks",
          "description": "get locks"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-circulation-storage:17.4.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 536870912,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
                    {
            "name": "ENV",
            "value": "folio"
          }
        ]
      }
    },
        {
      "id": "mod-search-5.0.2",
      "name": "Search Module",
      "provides":       [
                {
          "id": "indices",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/indices",
              "permissionsRequired": ["search.index.indices.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/mappings",
              "permissionsRequired": ["search.index.mappings.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/records",
              "permissionsRequired": ["search.index.records.collection.post"],
              "modulePermissions":               [
                "inventory-storage.inventory-view.instances.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/inventory/reindex",
              "permissionsRequired": ["search.index.inventory.reindex.post"],
              "modulePermissions":               [
                "inventory-storage.instance.reindex.post",
                "authority-storage.authority.reindex.post",
                "user-tenants.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.institutions.collection.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/search/index/settings",
              "permissionsRequired": ["search.index.settings.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/index/instance-records/reindex/status",
              "permissionsRequired": ["search.index.instance-records.reindex.status.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/instance-records/reindex/full",
              "permissionsRequired": ["search.index.instance-records.reindex.full.post"],
              "modulePermissions":               [
                "inventory-storage.reindex-records.publish.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.collection.get",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/instance-records/reindex/upload",
              "permissionsRequired": ["search.index.instance-records.reindex.upload.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/index/instance-records/reindex/merge/failed",
              "permissionsRequired": ["search.index.instance-records.reindex.merge.failed.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "search",
          "version": "1.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/search/instances",
              "permissionsRequired": ["search.instances.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/authorities",
              "permissionsRequired": ["search.authorities.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/linked-data/instances",
              "permissionsRequired": ["search.linked-data.instance.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/linked-data/works",
              "permissionsRequired": ["search.linked-data.work.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/linked-data/hubs",
              "permissionsRequired": ["search.linked-data.hub.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/{recordType}/facets",
              "permissionsRequired": ["search.facets.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/instances/ids",
              "permissionsRequired": ["search.instances.ids.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/holdings/ids",
              "permissionsRequired": ["search.holdings.ids.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "consortium-search",
          "version": "2.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/holdings",
              "permissionsRequired": ["consortium-search.holdings.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/items",
              "permissionsRequired": ["consortium-search.items.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/locations",
              "permissionsRequired": ["consortium-search.locations.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/campuses",
              "permissionsRequired": ["consortium-search.campuses.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/libraries",
              "permissionsRequired": ["consortium-search.libraries.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/institutions",
              "permissionsRequired": ["consortium-search.institutions.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/holding/{id}",
              "permissionsRequired": ["consortium-search.holdings.item.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/consortium/item/{id}",
              "permissionsRequired": ["consortium-search.items.item.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/consortium/batch/items",
              "permissionsRequired": ["consortium-search.items.batch.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/consortium/batch/holdings",
              "permissionsRequired": ["consortium-search.holdings.batch.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "resource-ids-streaming",
          "version": "0.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/search/resources/jobs/{jobId}/ids",
              "permissionsRequired": ["search.resources.ids.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/resources/jobs/{jobId}",
              "permissionsRequired": ["search.resources.ids.jobs.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/resources/jobs",
              "permissionsRequired": ["search.resources.ids.jobs.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "browse",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/call-numbers/{browseOptionId}/instances",
              "permissionsRequired": ["browse.call-numbers.instances.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/classification-numbers/{browseOptionId}/instances",
              "permissionsRequired": ["browse.classification-numbers.instances.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/subjects/instances",
              "permissionsRequired": ["browse.subjects.instances.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/contributors/instances",
              "permissionsRequired": ["browse.contributors.instances.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/authorities",
              "permissionsRequired": ["browse.authorities.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "browse-config",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/browse/config/{browseType}",
              "permissionsRequired": ["browse.config.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/browse/config/{browseType}/{browseConfigId}",
              "permissionsRequired": ["browse.config.item.put"],
              "modulePermissions":               [
                "user-tenants.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.call-number-types.collection.get"
              ]
            }
          ]
        },
                {
          "id": "search-config",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/search/config/languages",
              "permissionsRequired": ["search.config.languages.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/config/languages",
              "permissionsRequired": ["search.config.languages.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/search/config/languages/{id}",
              "permissionsRequired": ["search.config.languages.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/search/config/languages/{id}",
              "permissionsRequired": ["search.config.languages.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/search/config/features",
              "permissionsRequired": ["search.config.features.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/search/config/features",
              "permissionsRequired": ["search.config.features.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/search/config/features/{id}",
              "permissionsRequired": ["search.config.features.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/search/config/features/{id}",
              "permissionsRequired": ["search.config.features.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "user-tenants.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable",
                "inventory-storage.instance.reindex.post",
                "authority-storage.authority.reindex.post",
                "inventory-storage.inventory-view.instances.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "instance-authority-links.authorities.bulk.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.reindex-records.publish.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.collection.get"
              ]
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "optional":       [
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "inventory-reindex-records",
          "version": "1.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        }
      ],
      "requires":       [
                {
          "id": "instance-storage",
          "version": "10.3 11.0"
        },
                {
          "id": "login",
          "version": "7.0"
        },
                {
          "id": "permissions",
          "version": "5.3"
        },
                {
          "id": "users",
          "version": "15.3 16.0"
        },
                {
          "id": "instance-reindex",
          "version": "0.1"
        },
                {
          "id": "authority-reindex",
          "version": "0.1"
        },
                {
          "id": "alternative-title-types",
          "version": "1.0"
        },
                {
          "id": "identifier-types",
          "version": "1.0"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "classification-types",
          "version": "1.2"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "search.index.indices.item.post",
          "displayName": "Search - creates an index",
          "description": "Creates an index"
        },
                {
          "permissionName": "search.index.mappings.item.post",
          "displayName": "Search - updates mappings for the index",
          "description": "Updates mappings for the index"
        },
                {
          "permissionName": "search.index.records.collection.post",
          "displayName": "Search - saves resource to the search engine",
          "description": "Saves resource to the search engine"
        },
                {
          "permissionName": "search.index.settings.item.put",
          "displayName": "Search - updates settings for the index",
          "description": "Updates settings for the index"
        },
                {
          "permissionName": "search.index.instance-records.reindex.full.post",
          "displayName": "Search - starts inventory instance records full reindex operation",
          "description": "Starts inventory instance records reindex operation"
        },
                {
          "permissionName": "search.index.instance-records.reindex.upload.post",
          "displayName": "Search - starts inventory instance records reindex upload operation",
          "description": "Starts inventory instance records reindex upload operation"
        },
                {
          "permissionName": "search.index.instance-records.reindex.merge.failed.post",
          "displayName": "Search - starts inventory instance records reindex merge failed operation",
          "description": "Starts inventory instance records reindexing for failed merge ranges"
        },
                {
          "permissionName": "search.instances.collection.get",
          "displayName": "Search - searches instances by given query",
          "description": "Searches instances by given query"
        },
                {
          "permissionName": "search.authorities.collection.get",
          "displayName": "Search - searches authorities by given query",
          "description": "Searches authorities by given query"
        },
                {
          "permissionName": "search.linked-data.instance.collection.get",
          "displayName": "Search - searches linked data instances by given query",
          "description": "Searches linked data instances by given query"
        },
                {
          "permissionName": "search.linked-data.work.collection.get",
          "displayName": "Search - searches linked data works by given query",
          "description": "Searches linked data works by given query"
        },
                {
          "permissionName": "search.linked-data.hub.collection.get",
          "displayName": "Search - searches linked data hubs by given query",
          "description": "Searches linked data hubs by given query"
        },
                {
          "permissionName": "browse.call-numbers.instances.collection.get",
          "displayName": "Browse - provides collections of browse items for instance by call number",
          "description": "Browse instances by given query"
        },
                {
          "permissionName": "browse.classification-numbers.instances.collection.get",
          "displayName": "Browse - provides collections of browse by classification number",
          "description": "Browse by classification number"
        },
                {
          "permissionName": "browse.subjects.instances.collection.get",
          "displayName": "Browse - provides collections of browse items for instance by subjects",
          "description": "Browse instances by given query"
        },
                {
          "permissionName": "browse.contributors.instances.collection.get",
          "displayName": "Browse - provides collections of browse items for instance by contributors",
          "description": "Browse instances by given query"
        },
                {
          "permissionName": "browse.authorities.collection.get",
          "displayName": "Browse - provides collections of browse items for authorities",
          "description": "Browse authorities by given query"
        },
                {
          "permissionName": "search.config.languages.item.post",
          "displayName": "Search - adds a language support for multi-lang indexes",
          "description": "Adds a language support for multi-lang indexes"
        },
                {
          "permissionName": "search.config.languages.collection.get",
          "displayName": "Search - returns list of all supported languages for multi-lang indexes",
          "description": "Returns list of all supported languages for multi-lang indexes"
        },
                {
          "permissionName": "search.config.languages.item.put",
          "displayName": "Search - updates a supported language by id",
          "description": "Updates a supported language by id"
        },
                {
          "permissionName": "search.config.languages.item.delete",
          "displayName": "Search - removes a supported language by id",
          "description": "Removes a supported language by id"
        },
                {
          "permissionName": "search.index.inventory.reindex.post",
          "displayName": "Search - starts inventory reindex operation",
          "description": "Starts inventory reindex operation"
        },
                {
          "permissionName": "search.index.instance-records.reindex.status.get",
          "displayName": "Search - returns reindex status for entities",
          "description": "Returns reindex status for entities"
        },
                {
          "permissionName": "search.facets.collection.get",
          "displayName": "Search - returns facets for a query for given filter options by record type",
          "description": "Returns facets for a query for given filter options by record type",
          "replaces": ["search.instances.facets.collection.get"]
        },
                {
          "permissionName": "search.instances.ids.collection.get",
          "displayName": "Search - returns list of resource ids for a cql query",
          "description": "Returns list of resource ids for a cql query"
        },
                {
          "permissionName": "search.holdings.ids.collection.get",
          "displayName": "Search - returns a list of holding ids found for the CQL query by instances",
          "description": "Returns list of resource ids for a cql query"
        },
                {
          "permissionName": "search.resources.ids.collection.get",
          "displayName": "Search - returns a list of authority ids found for the CQL query",
          "description": "Returns list of resource ids for a cql query"
        },
                {
          "permissionName": "search.resources.ids.jobs.get",
          "displayName": "Job for streaming authority ids",
          "description": "Returns a job for streaming authority ids by the the CQL query"
        },
                {
          "permissionName": "search.resources.ids.jobs.post",
          "displayName": "Creates a job for streaming authority ids",
          "description": "Creates a job for streaming authority ids by the the CQL query"
        },
                {
          "permissionName": "search.config.features.collection.get",
          "displayName": "Search - returns list of tenant features configuration",
          "description": "Returns list of all specified features"
        },
                {
          "permissionName": "search.config.features.item.post",
          "displayName": "Search - adds a feature configuration",
          "description": "Adds feature configuration"
        },
                {
          "permissionName": "search.config.features.item.put",
          "displayName": "Search - updates a feature configuration",
          "description": "Updates feature configuration"
        },
                {
          "permissionName": "search.config.features.item.delete",
          "displayName": "Search - removes feature configuration",
          "description": "Removes feature configuration"
        },
                {
          "permissionName": "browse.config.collection.get",
          "displayName": "Browse - returns configurations for browse type",
          "description": "Returns configuration for browse type"
        },
                {
          "permissionName": "browse.config.item.put",
          "displayName": "Browse - updates configuration entry for browse type",
          "description": "Updates configuration entry for browse type"
        },
                {
          "permissionName": "consortium-search.holdings.collection.get",
          "displayName": "Consortium Search - fetch holdings records",
          "description": "Returns holdings records in consortium"
        },
                {
          "permissionName": "consortium-search.items.collection.get",
          "displayName": "Consortium Search - fetch items records",
          "description": "Returns items records in consortium"
        },
                {
          "permissionName": "consortium-search.holdings.batch.collection.get",
          "displayName": "Consortium Search - fetch holdings records by batch request",
          "description": "Returns holdings records in consortium"
        },
                {
          "permissionName": "consortium-search.items.batch.collection.get",
          "displayName": "Consortium Search - fetch items records by batch request",
          "description": "Returns items records in consortium"
        },
                {
          "permissionName": "consortium-search.holdings.item.get",
          "displayName": "Consortium Search - fetch holdings record",
          "description": "Returns holdings record in consortium"
        },
                {
          "permissionName": "consortium-search.items.item.get",
          "displayName": "Consortium Search - fetch item record",
          "description": "Returns item record in consortium"
        },
                {
          "permissionName": "consortium-search.locations.collection.get",
          "displayName": "Consortium Search - fetch locations records",
          "description": "Returns location records in consortium"
        },
                {
          "permissionName": "consortium-search.campuses.collection.get",
          "displayName": "Consortium Search - fetch campuses records",
          "description": "Returns campus records in consortium"
        },
                {
          "permissionName": "consortium-search.libraries.collection.get",
          "displayName": "Consortium Search - fetch libraries records",
          "description": "Returns library records in consortium"
        },
                {
          "permissionName": "consortium-search.institutions.collection.get",
          "displayName": "Consortium Search - fetch institutions records",
          "description": "Returns institution records in consortium"
        },
                {
          "permissionName": "search.index.instance-records.reindex.all",
          "displayName": "Search Instance Records Re-Index - All permissions",
          "description": "Entire set of permissions needed to manage  Instance Records Re-Index",
          "subPermissions":           [
            "search.index.instance-records.reindex.status.get",
            "search.index.instance-records.reindex.full.post",
            "search.index.instance-records.reindex.upload.post",
            "search.index.instance-records.reindex.failed.post"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "user-tenants.collection.get",
          "users.collection.get",
          "users.item.post",
          "login.item.post",
          "login.item.delete",
          "perms.users.get",
          "perms.users.item.post",
          "perms.users.assign.immutable",
          "perms.users.assign.mutable",
          "inventory-storage.instance.reindex.post",
          "authority-storage.authority.reindex.post",
          "inventory-storage.inventory-view.instances.collection.get",
          "inventory-storage.identifier-types.collection.get",
          "inventory-storage.alternative-title-types.collection.get",
          "instance-authority-links.authorities.bulk.post",
          "inventory-storage.locations.collection.get",
          "inventory-storage.location-units.campuses.collection.get",
          "inventory-storage.location-units.libraries.collection.get",
          "inventory-storage.location-units.institutions.collection.get",
          "inventory-storage.reindex-records.publish.post",
          "inventory-storage.instances.collection.get",
          "inventory-storage.items.collection.get",
          "inventory-storage.holdings.collection.get"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-search:5.0.2",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "ENV",
            "value": "folio",
            "description": "The logical name of the deployment, must be unique across all environments using the same shared Kafka/Elasticsearch clusters, `a-z (any case)`, `0-9`, `-`, `_` symbols only allowed"
          },
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
                    {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          },
                    {
            "name": "KAFKA_EVENTS_CONSUMER_PATTERN",
            "value": "(folio\\.)(.*\\.)inventory\\.(instance|holdings-record|item|bound-with)",
            "description": "Custom subscription pattern for Kafka consumers."
          },
                    {
            "name": "KAFKA_EVENTS_CONCURRENCY",
            "value": "2",
            "description": "Custom number of kafka concurrent threads for message consuming."
          },
                    {
            "name": "KAFKA_CONSUMER_EVENTS_MAX_POLL_RECORDS",
            "value": "200",
            "description": "Maximum number of records returned in a single call to poll() for 'instance|holdings-record|item|bound-with' events."
          },
                    {
            "name": "KAFKA_CONSUMER_EVENTS_MAX_POLL_INTERVAL_MS",
            "value": "600000",
            "description": "Maximum processing time allowed for consumer on 'instance|holdings-record|item|bound-with' events."
          },
                    {
            "name": "KAFKA_AUTHORITIES_CONSUMER_PATTERN",
            "value": "(folio\\.)(.*\\.)authorities\\.authority",
            "description": "Custom subscription pattern for Kafka authority message consumers."
          },
                    {
            "name": "KAFKA_AUTHORITIES_CONCURRENCY",
            "value": "1",
            "description": "Custom number of kafka concurrent threads for authority message consuming."
          },
                    {
            "name": "KAFKA_REINDEX_RANGE_INDEX_CONCURRENCY",
            "value": "1",
            "description": "Custom number of kafka concurrent threads for `search.reindex.range-index` message consuming."
          },
                    {
            "name": "KAFKA_REINDEX_RANGE_INDEX_TOPIC_PARTITIONS",
            "value": "16",
            "description": "Amount of partitions for `search.reindex.range-index` topic."
          },
                    {
            "name": "KAFKA_REINDEX_RANGE_INDEX_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `search.reindex.range-index` topic."
          },
                    {
            "name": "KAFKA_REINDEX_RECORDS_CONCURRENCY",
            "value": "2",
            "description": "Custom number of kafka concurrent threads for `inventory.reindex-records` message consuming."
          },
                    {
            "name": "KAFKA_CONSUMER_MAX_POLL_RECORDS",
            "value": "200",
            "description": "Maximum number of records returned in a single call to poll()."
          },
                    {
            "name": "KAFKA_RETRY_INTERVAL_MS",
            "value": "2000",
            "description": "Specifies time to wait before reattempting query."
          },
                    {
            "name": "KAFKA_RETRY_DELIVERY_ATTEMPTS",
            "value": "6",
            "description": "Specifies how many queries attempt to perform after the first one failed."
          },
                    {
            "name": "ELASTICSEARCH_URL",
            "value": "http://elasticsearch:9200",
            "description": "Elasticsearch URL"
          },
                    {
            "name": "ELASTICSEARCH_USERNAME",
            "value": "elastic",
            "description": "Elasticsearch username (not required for dev envs)"
          },
                    {
            "name": "ELASTICSEARCH_PASSWORD",
            "value": "s3cret",
            "description": "Elasticsearch password (not required for dev envs)"
          },
                    {
            "name": "ELASTICSEARCH_COMPRESSION_ENABLED",
            "value": "true",
            "description": "Specify if Elasticsearch request/response compression enabled"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres",
            "description": "Postgres hostname"
          },
                    {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
                    {
            "name": "DB_USERNAME",
            "value": "postgres",
            "description": "Postgres username"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "postgres",
            "description": "Postgres username password"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "INDEXING_DATA_FORMAT",
            "value": "smile",
            "description": "Format for passing data to elasticsearch (json/smile)"
          },
                    {
            "name": "INSTANCE_CHILDREN_INDEX_DELAY_MS",
            "value": "60000",
            "description": "Scheduler delay for indexing subjects/contributors/classifications"
          },
                    {
            "name": "INSTANCE_CHILDREN_INDEX_BATCH_SIZE",
            "value": "500",
            "description": "Batch size for indexing subjects/contributors/classifications"
          },
                    {
            "name": "INITIAL_LANGUAGES",
            "value": "eng",
            "description": "Comma separated list of languages for multilang fields"
          },
                    {
            "name": "MAX_SUPPORTED_LANGUAGES",
            "value": "5",
            "description": "Provides the maximum number of supported languages"
          },
                    {
            "name": "SYSTEM_USER_USERNAME",
            "value": "mod-search",
            "description": "Username for `mod-search` system user"
          },
                    {
            "name": "SYSTEM_USER_PASSWORD",
            "value": "",
            "description": "Password for `mod-search` system user (not required for dev envs)"
          },
                    {
            "name": "OKAPI_URL",
            "value": "",
            "description": "OKAPI URL used to login system user, required"
          },
                    {
            "name": "SEARCH_BY_ALL_FIELDS_ENABLED",
            "value": "false",
            "description": "Specifies if globally search by all field values must be enabled or not (tenant can override this setting)"
          },
                    {
            "name": "BROWSE_CN_INTERMEDIATE_VALUES_ENABLED",
            "value": "true",
            "description": "Specifies if globally intermediate values (nested instance items) must be populated or not (tenant can override this setting)"
          },
                    {
            "name": "BROWSE_CN_INTERMEDIATE_REMOVE_DUPLICATES",
            "value": "true",
            "description": "Specifies if globally intermediate duplicate values (fullCallNumber) should be removed or not (Active only with BROWSE_CN_INTERMEDIATE_VALUES_ENABLED)"
          },
                    {
            "name": "SCROLL_QUERY_SIZE",
            "value": "1000",
            "description": "The number of records to be loaded by each scroll query. 10_000 is a max value"
          },
                    {
            "name": "STREAM_ID_RETRY_INTERVAL_MS",
            "value": "1000",
            "description": "Specifies time to wait before reattempting query."
          },
                    {
            "name": "STREAM_ID_RETRY_ATTEMPTS",
            "value": "3",
            "description": "Specifies how many queries attempt to perform after the first one failed."
          },
                    {
            "name": "STREAM_ID_CORE_POOL_SIZE",
            "value": "2",
            "description": "The number of threads to keep in the pool, even if they are idle."
          },
                    {
            "name": "STREAM_ID_MAX_POOL_SIZE",
            "value": "2",
            "description": "The maximum number of threads to allow in the pool."
          },
                    {
            "name": "STREAM_ID_QUEUE_CAPACITY",
            "value": "500",
            "description": "The capacity of the queue."
          },
                    {
            "name": "CN_BROWSE_OPTIMIZATION_ENABLED",
            "value": "true",
            "description": "Defines if call-number browse optimization is enabled or not"
          },
                    {
            "name": "SEARCH_QUERY_TIMEOUT",
            "value": "25s",
            "description": "The maximum time to wait for search query response"
          },
                    {
            "name": "MAX_BROWSE_REQUEST_OFFSET",
            "value": "500",
            "description": "The maximum elasticsearch query offset for additional requests on browse around"
          },
                    {
            "name": "REINDEX_LOCATION_BATCH_SIZE",
            "value": "1000",
            "description": "Defines number of locations to retrieve per inventory http request on locations reindex process"
          },
                    {
            "name": "MAX_SEARCH_BATCH_REQUEST_IDS_COUNT",
            "value": "20_000",
            "description": "Defines maximum batch request IDs count for searching consolidated items/holdings in consortium"
          },
                    {
            "name": "REINDEX_MERGE_RANGE_SIZE",
            "value": "500",
            "description": "The range size that represents the number of merge entities to process during the Merge process of reindex"
          },
                    {
            "name": "REINDEX_UPLOAD_RANGE_SIZE",
            "value": "1_000",
            "description": "The range size that represents the number of upload entities to process during the Upload process of reindex"
          },
                    {
            "name": "REINDEX_UPLOAD_RANGE_LEVEL",
            "value": "3",
            "description": "The level of deepness of upload range generator affecting the number of ranges to be generated"
          },
                    {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_CORE_POOL_SIZE",
            "value": "3",
            "description": "The number of threads for publishing the merge ranges to keep in the pool, even if they are idle."
          },
                    {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_MAX_POOL_SIZE",
            "value": "6",
            "description": "The maximum number of threads for publishing the merge ranges to allow in the pool."
          },
                    {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_RETRY_INTERVAL_MS",
            "value": "1000",
            "description": "The retry interval in ms for reindex merge range request publishing."
          },
                    {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_RETRY_ATTEMPTS",
            "value": "5",
            "description": "The maximum number of retries for reindex merge range request publishing."
          }
        ]
      }
    },
        {
      "id": "mod-inventory-21.1.3",
      "name": "Inventory Module",
      "provides":       [
                {
          "id": "inventory",
          "version": "14.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/items",
              "permissionsRequired": ["inventory.items.collection.get"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/retrieve",
              "permissionsRequired": ["inventory.items.retrieve.collection.post"],
              "modulePermissions":               [
                "inventory-storage.items.retrieve.collection.post",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": ["inventory.items.item.get"],
              "modulePermissions":               [
                "inventory-storage.items.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-withdrawn",
              "permissionsRequired": ["inventory.items.item.mark-withdrawn.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-in-process",
              "permissionsRequired": ["inventory.items.item.mark-in-process.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-in-process-non-requestable",
              "permissionsRequired": ["inventory.items.item.mark-in-process-non-requestable.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-intellectual-item",
              "permissionsRequired": ["inventory.items.item.mark-intellectual-item.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-long-missing",
              "permissionsRequired": ["inventory.items.item.mark-long-missing.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-missing",
              "permissionsRequired": ["inventory.items.item.mark-missing.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-restricted",
              "permissionsRequired": ["inventory.items.item.mark-restricted.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-unavailable",
              "permissionsRequired": ["inventory.items.item.mark-unavailable.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/{id}/mark-unknown",
              "permissionsRequired": ["inventory.items.item.mark-unknown.post"],
              "modulePermissions":               [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items",
              "permissionsRequired": ["inventory.items.item.post"],
              "modulePermissions":               [
                "inventory-storage.items.item.post",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": ["inventory.items.item.put"],
              "modulePermissions":               [
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.put",
                "users.item.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": ["inventory.items.item.delete"],
              "modulePermissions": ["inventory-storage.items.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory/items",
              "permissionsRequired": ["inventory.items.collection.delete"],
              "modulePermissions": ["inventory-storage.items.collection.delete"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory/holdings/{id}",
              "permissionsRequired": ["inventory.holdings.item.put"],
              "modulePermissions":               [
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.put"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": ["inventory.instances.collection.get"],
              "modulePermissions":               [
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/items-by-holdings-id",
              "permissionsRequired": ["inventory.items-by-holdings-id.collection.get"],
              "modulePermissions":               [
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.bound-with-parts.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/tenant-items",
              "permissionsRequired": ["inventory.tenant-items.collection.get"],
              "modulePermissions": ["inventory-storage.items.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": ["inventory.instances.item.get"],
              "modulePermissions":               [
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": ["inventory.instances.item.post"],
              "modulePermissions":               [
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": ["inventory.instances.item.put"],
              "modulePermissions":               [
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.delete",
                "source-storage.records.delete",
                "source-storage.records.undelete.item.post",
                "source-storage.records.update",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": ["inventory.instances.item.delete"],
              "modulePermissions": ["inventory-storage.instances.item.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": ["inventory.instances.collection.delete"],
              "modulePermissions": ["inventory-storage.instances.collection.delete"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory/instances/{id}/mark-deleted",
              "permissionsRequired": [],
              "modulePermissions":               [
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.put",
                "source-storage.records.delete"
              ]
            }
          ]
        },
                {
          "id": "inventory-batch",
          "version": "3.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/inventory/instances/batch",
            "permissionsRequired": ["inventory.instances.batch.post"],
            "modulePermissions":             [
              "inventory-storage.instances.item.post",
              "inventory-storage.instances.item.get",
              "inventory-storage.instances.item.put",
              "inventory-storage.instances.item.delete",
              "inventory-storage.instances.batch.post",
              "inventory-storage.preceding-succeeding-titles.collection.get",
              "inventory-storage.preceding-succeeding-titles.item.post",
              "inventory-storage.preceding-succeeding-titles.item.put",
              "inventory-storage.preceding-succeeding-titles.item.delete",
              "inventory-storage.instance-relationships.collection.get",
              "inventory-storage.instance-relationships.item.post",
              "inventory-storage.instance-relationships.item.put",
              "inventory-storage.instance-relationships.item.delete",
              "user-tenants.collection.get"
            ]
          }]
        },
                {
          "id": "inventory-config",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/config/instances/blocked-fields",
              "permissionsRequired": ["inventory.config.instances.blocked-fields.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory/config/holdings/blocked-fields",
              "permissionsRequired": ["inventory.config.holdings.blocked-fields.get"],
              "modulePermissions": []
            }
          ]
        },
                {
          "id": "isbn-utils",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/isbn/convertTo13",
              "permissionsRequired": ["isbn-utils.convert-to-13.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/isbn/convertTo10",
              "permissionsRequired": ["isbn-utils.convert-to-10.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/isbn/validator",
              "permissionsRequired": ["isbn-utils.validator.get"],
              "modulePermissions": []
            }
          ]
        },
                {
          "id": "inventory-move",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/move",
              "permissionsRequired": ["inventory.items.move.item.post"],
              "modulePermissions":               [
                "inventory-storage.items.item.put",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/holdings/move",
              "permissionsRequired": ["inventory.holdings.move.item.post"],
              "modulePermissions":               [
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.item.get",
                "user-tenants.collection.get"
              ]
            }
          ]
        },
                {
          "id": "inventory-update-ownership",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/items/update-ownership",
              "permissionsRequired": ["inventory.items.update-ownership.item.post"],
              "modulePermissions":               [
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/inventory/holdings/update-ownership",
              "permissionsRequired": ["inventory.holdings.update-ownership.item.post"],
              "modulePermissions":               [
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "user-tenants.collection.get"
              ]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant"
            }
          ]
        }
      ],
      "requires":       [
                {
          "id": "holdings-sources",
          "version": "1.0"
        },
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "item-storage",
          "version": "10.2"
        },
                {
          "id": "instance-storage",
          "version": "11.1"
        },
                {
          "id": "instance-storage-batch-sync",
          "version": "3.0"
        },
                {
          "id": "holdings-storage",
          "version": "2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
                {
          "id": "material-types",
          "version": "2.0"
        },
                {
          "id": "loan-types",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "2.0 3.0"
        },
                {
          "id": "instance-types",
          "version": "1.0 2.0"
        },
                {
          "id": "instance-authority-links",
          "version": "2.0"
        },
                {
          "id": "identifier-types",
          "version": "1.0"
        },
                {
          "id": "contributor-name-types",
          "version": "1.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.1"
        },
                {
          "id": "request-storage",
          "version": "6.0"
        },
                {
          "id": "source-storage-records",
          "version": "3.4"
        },
                {
          "id": "bound-with-parts-storage",
          "version": "2.0"
        },
                {
          "id": "authority-storage",
          "version": "2.0"
        }
      ],
      "optional":       [
                {
          "id": "mapping-metadata-provider",
          "version": "1.1"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.2"
        },
                {
          "id": "order-lines",
          "version": "3.0"
        },
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "circulation-bff-ecs-request-external",
          "version": "1.1"
        },
                {
          "id": "circulation-bff-requests",
          "version": "1.1"
        },
                {
          "id": "staging-users",
          "version": "1.1"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "inventory.items.collection.get",
          "displayName": "Inventory - get item collection",
          "description": "Get item collection"
        },
                {
          "permissionName": "inventory.items.retrieve.collection.post",
          "displayName": "Inventory - retrieve item collection via post method",
          "description": "retrieve item collection"
        },
                {
          "permissionName": "inventory.tenant-items.collection.get",
          "displayName": "Inventory - get item collection from multiple tenants",
          "description": "Get item collection from multiple tenants"
        },
                {
          "permissionName": "inventory.items.collection.delete",
          "displayName": "Inventory - delete entire item collection",
          "description": "Delete entire item collection"
        },
                {
          "permissionName": "inventory.items.item.get",
          "displayName": "Inventory - get individual item",
          "description": "Get individual item"
        },
                {
          "permissionName": "inventory.items.item.mark-withdrawn.post",
          "displayName": "Inventory - mark an item as withdrawn",
          "description": "Mark an item as withdrawn"
        },
                {
          "permissionName": "inventory.items.move.item.post",
          "displayName": "Inventory - move items to another holdings record",
          "description": "Move items to another holdings record"
        },
                {
          "permissionName": "inventory.items.item.mark-in-process.post",
          "displayName": "Inventory - mark an item as in process",
          "description": "Mark an item as in process"
        },
                {
          "permissionName": "inventory.items.item.mark-in-process-non-requestable.post",
          "displayName": "Inventory - mark an item as in process (non-requestable)",
          "description": "Mark an item as in process (non-requestable)"
        },
                {
          "permissionName": "inventory.items.item.mark-intellectual-item.post",
          "displayName": "Inventory - mark an item as intellectual item",
          "description": "Mark an item as intellectual item"
        },
                {
          "permissionName": "inventory.items.item.mark-long-missing.post",
          "displayName": "Inventory - mark an item as long missing",
          "description": "Mark an item as long missing"
        },
                {
          "permissionName": "inventory.items.item.mark-missing.post",
          "displayName": "Inventory - mark an item as missing",
          "description": "Mark an item as missing"
        },
                {
          "permissionName": "inventory.items.item.mark-restricted.post",
          "displayName": "Inventory - mark an item as restricted",
          "description": "Mark an item as restricted"
        },
                {
          "permissionName": "inventory.items.item.mark-unavailable.post",
          "displayName": "Inventory - mark an item as unavailable",
          "description": "Mark an item as unavailable"
        },
                {
          "permissionName": "inventory.items.item.mark-unknown.post",
          "displayName": "Inventory - mark an item as unknown",
          "description": "Mark an item as unknown"
        },
                {
          "permissionName": "inventory.items.update-ownership.item.post",
          "displayName": "Inventory - update an item ownership",
          "description": "Update an item ownership"
        },
                {
          "permissionName": "inventory.items-by-holdings-id.collection.get",
          "displayName": "Inventory - get item collection by holdings id",
          "description": "Get item collection by holdings id"
        },
                {
          "permissionName": "inventory.holdings.move.item.post",
          "displayName": "Inventory - move holdings record to another instance",
          "description": "Move holdings record to another holdings record"
        },
                {
          "permissionName": "inventory.items.item.post",
          "displayName": "Inventory - create individual item",
          "description": "Create individual item"
        },
                {
          "permissionName": "inventory.items.item.put",
          "displayName": "Inventory - modify item",
          "description": "Modify item"
        },
                {
          "permissionName": "inventory.items.item.delete",
          "displayName": "Inventory - delete individual item",
          "description": "Delete individual item"
        },
                {
          "permissionName": "inventory.instances.collection.get",
          "displayName": "Inventory - get instance collection",
          "description": "Get instance collection"
        },
                {
          "permissionName": "inventory.instances.collection.delete",
          "displayName": "Inventory - delete entire instance collection",
          "description": "Delete entire instance collection"
        },
                {
          "permissionName": "inventory.holdings.item.put",
          "displayName": "Inventory - modify holdings",
          "description": "Modify individual instance"
        },
                {
          "permissionName": "inventory.holdings.update-ownership.item.post",
          "displayName": "Inventory - update holdings ownership",
          "description": "Update holdings record ownership"
        },
                {
          "permissionName": "inventory.instances.item.get",
          "displayName": "Inventory - get individual instance",
          "description": "Get individual instance"
        },
                {
          "permissionName": "inventory.instances.item.post",
          "displayName": "Inventory - create individual instance",
          "description": "Create individual instance"
        },
                {
          "permissionName": "inventory.instances.batch.post",
          "displayName": "Inventory - create batch of individual instance",
          "description": "Create batch of individual instance"
        },
                {
          "permissionName": "inventory.instances.item.put",
          "displayName": "Inventory - modify instance",
          "description": "Modify instance"
        },
                {
          "permissionName": "inventory.instances.item.delete",
          "displayName": "Inventory - delete individual instance",
          "description": "Delete individual instance"
        },
                {
          "permissionName": "inventory.config.instances.blocked-fields.get",
          "displayName": "Inventory - get configuration for blocked fields of instances",
          "description": "Get configuration for blocked fields of instances"
        },
                {
          "permissionName": "inventory.config.holdings.blocked-fields.get",
          "displayName": "Inventory - get configuration for blocked fields of holdings",
          "description": "Get configuration for blocked fields of holdings"
        },
                {
          "permissionName": "inventory.all",
          "displayName": "Inventory - all permissions",
          "description": "Entire set of permissions needed to use the inventory",
          "subPermissions":           [
            "inventory.items.collection.get",
            "inventory.items.retrieve.collection.post",
            "inventory.tenant-items.collection.get",
            "inventory.items.item.get",
            "inventory.items.item.post",
            "inventory.items.item.put",
            "inventory.items.item.delete",
            "inventory.items.collection.delete",
            "inventory.instances.collection.get",
            "inventory.holdings.item.put",
            "inventory.instances.item.get",
            "inventory.instances.item.post",
            "inventory.instances.batch.post",
            "inventory.instances.item.put",
            "inventory.instances.item.delete",
            "inventory.instances.collection.delete",
            "inventory.config.instances.blocked-fields.get",
            "inventory.config.holdings.blocked-fields.get",
            "inventory.items.item.mark-withdrawn.post",
            "inventory.items.item.mark-in-process.post",
            "inventory.items.item.mark-in-process-non-requestable.post",
            "inventory.items.item.mark-missing.post",
            "inventory.items.move.item.post",
            "inventory.holdings.move.item.post",
            "inventory.items.update-ownership.item.post",
            "inventory.holdings.update-ownership.item.post",
            "inventory.items-by-holdings-id.collection.get"
          ]
        },
                {
          "permissionName": "isbn-utils.convert-to-13.get",
          "displayName": "ISBN utils - convert to ISBN-13 format",
          "description": "Convert isbn code to ISBN-13 format"
        },
                {
          "permissionName": "isbn-utils.convert-to-10.get",
          "displayName": "ISBN utils - convert to ISBN-10 format",
          "description": "Convert isbn code to ISBN-10 format"
        },
                {
          "permissionName": "isbn-utils.validator.get",
          "displayName": "ISBN utils - validate ISBN code",
          "description": "Check that isbn code is valid"
        },
                {
          "permissionName": "isbn-utils.all",
          "displayName": "Isbn-utils - all permissions",
          "description": "Entire set of permissions needed to use the isbn-utils",
          "subPermissions":           [
            "isbn-utils.convert-to-13.get",
            "isbn-utils.convert-to-10.get",
            "isbn-utils.validator.get"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "user-tenants.collection.get",
          "mapping-metadata.item.get",
          "mapping-metadata.type.item.get",
          "converter-storage.jobprofilesnapshots.get",
          "source-storage.records.put",
          "source-storage.records.post",
          "source-storage.records.item.get",
          "source-storage.records.formatted.item.get",
          "source-storage.records.generation.item.put",
          "source-storage.records.matching.collection.post",
          "inventory-storage.items.item.post",
          "inventory-storage.items.item.put",
          "inventory-storage.items.item.get",
          "inventory-storage.items.collection.get",
          "inventory-storage.material-types.item.get",
          "inventory-storage.material-types.collection.get",
          "inventory-storage.loan-types.item.get",
          "inventory-storage.loan-types.collection.get",
          "inventory-storage.locations.item.get",
          "inventory-storage.locations.collection.get",
          "inventory-storage.holdings.item.get",
          "inventory-storage.holdings.item.post",
          "inventory-storage.holdings.item.put",
          "inventory-storage.holdings.collection.get",
          "inventory-storage.instances.item.get",
          "inventory-storage.instances.item.put",
          "inventory-storage.instances.item.post",
          "inventory-storage.instances.collection.get",
          "inventory-storage.preceding-succeeding-titles.item.post",
          "inventory-storage.preceding-succeeding-titles.collection.get",
          "inventory-storage.preceding-succeeding-titles.item.put",
          "inventory-storage.preceding-succeeding-titles.item.delete"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-inventory:21.1.3",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 715827883,
          "PortBindings": {"9403/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Dorg.folio.metadata.inventory.storage.type=okapi"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_IDLETIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          }
        ]
      }
    },
        {
      "id": "mod-circulation-24.4.3",
      "name": "Circulation Module",
      "provides":       [
                {
          "id": "requests-reports",
          "version": "0.8",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/circulation/requests-reports/hold-shelf-clearance/{id}",
            "permissionsRequired": ["circulation.requests.hold-shelf-clearance-report.get"],
            "modulePermissions": ["modperms.circulation.requests.hold-shelf-clearance-report.get"]
          }]
        },
                {
          "id": "inventory-reports",
          "version": "0.4",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/inventory-reports/items-in-transit",
            "permissionsRequired": ["circulation.inventory.items-in-transit-report.get"],
            "modulePermissions": ["modperms.inventory.items-in-transit-report.get"]
          }]
        },
                {
          "id": "pick-slips",
          "version": "0.4",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/circulation/pick-slips/{servicePointId}",
            "permissionsRequired": ["circulation.pick-slips.get"],
            "modulePermissions": ["modperms.circulation.pick-slips.get"]
          }]
        },
                {
          "id": "search-slips",
          "version": "0.1",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/circulation/search-slips/{servicePointId}",
            "permissionsRequired": ["circulation.search-slips.get"],
            "modulePermissions": ["modperms.circulation.search-slips.get"]
          }]
        },
                {
          "id": "request-move",
          "version": "0.7",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/requests/{id}/move",
            "permissionsRequired": ["circulation.requests.item.move.post"],
            "modulePermissions": ["modperms.circulation.requests.item.move.post"]
          }]
        },
                {
          "id": "loan-anonymization",
          "version": "0.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/loan-anonymization/by-user/{userId}",
            "permissionsRequired": ["circulation.loans.collection.anonymize.user.post"],
            "modulePermissions": ["modperms.circulation.loans.anonymize"]
          }]
        },
                {
          "id": "declare-item-lost",
          "version": "0.3",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/loans/{id}/declare-item-lost",
            "permissionsRequired": ["circulation.loans.declare-item-lost.post"],
            "modulePermissions": ["modperms.circulation.loans.declare-item-lost.post"]
          }]
        },
                {
          "id": "change-due-date",
          "version": "0.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/loans/{id}/change-due-date",
            "permissionsRequired": ["circulation.loans.change-due-date.post"],
            "modulePermissions":             [
              "perms.circulation.loans.change-due-date.post",
              "configuration.entries.collection.get"
            ]
          }]
        },
                {
          "id": "claim-item-returned",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/loans/{id}/claim-item-returned",
              "permissionsRequired": ["circulation.loans.claim-item-returned.post"],
              "modulePermissions": ["perms.circulation.loans.claim-item-returned.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/loans/{id}/declare-claimed-returned-item-as-missing",
              "permissionsRequired": ["circulation.loans.declare-claimed-returned-item-as-missing.post"],
              "modulePermissions": ["modperms.circulation.loans.declare-claimed-returned-item-as-missing.post"]
            }
          ]
        },
                {
          "id": "instance-items",
          "version": "0.1",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/circulation/items-by-instance",
            "permissionsRequired": ["circulation.items-by-instance.get"],
            "modulePermissions": ["search.instances.collection.get"]
          }]
        },
                {
          "id": "add-info",
          "version": "0.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/loans/{id}/add-info",
            "permissionsRequired": ["circulation.loans.add-info.post"],
            "modulePermissions": ["modperms.circulation.loans.add-info.post"]
          }]
        },
                {
          "id": "circulation",
          "version": "14.6",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/check-out-by-barcode",
              "permissionsRequired": ["circulation.check-out-by-barcode.post"],
              "modulePermissions": ["modperms.circulation.check-out-by-barcode.post"],
              "permissionsDesired":               [
                "circulation.override-patron-block.post",
                "circulation.override-item-limit-block.post",
                "circulation.override-item-not-loanable-block.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/check-out-by-barcode-dry-run",
              "permissionsRequired": ["circulation.check-out-by-barcode-dry-run.post"],
              "modulePermissions": ["modperms.circulation.check-out-by-barcode-dry-run.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/check-in-by-barcode",
              "permissionsRequired": ["circulation.check-in-by-barcode.post"],
              "modulePermissions": ["modperms.circulation.check-in-by-barcode.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/renew-by-barcode",
              "permissionsRequired": ["circulation.renew-by-barcode.post"],
              "modulePermissions": ["circulation.renew-loan.all"],
              "permissionsDesired":               [
                "circulation.override-patron-block.post",
                "circulation.override-renewal-block.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/renew-by-id",
              "permissionsRequired": ["circulation.renew-by-id.post"],
              "modulePermissions": ["circulation.renew-loan.all"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": ["circulation.loans.collection.get"],
              "modulePermissions": ["modperms.circulation.loans.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": ["circulation.loans.item.post"],
              "modulePermissions": ["modperms.circulation.loans.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": ["circulation.loans.collection.delete"],
              "modulePermissions": ["circulation-storage.loans.collection.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": ["circulation.loans.item.get"],
              "modulePermissions": ["modperms.circulation.loans.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": ["circulation.loans.item.put"],
              "modulePermissions":               [
                "modperms.circulation.loans.item.put",
                "overdue-fines-policies.item.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": ["circulation.loans.item.delete"],
              "modulePermissions": ["circulation-storage.loans.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": ["circulation.requests.collection.get"],
              "modulePermissions": ["modperms.circulation.requests.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": ["circulation.requests.item.post"],
              "permissionsDesired": ["circulation.override-patron-block.post"],
              "modulePermissions": ["modperms.circulation.requests.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": ["circulation.requests.collection.delete"],
              "modulePermissions": ["circulation-storage.requests.collection.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": ["circulation.requests.item.get"],
              "modulePermissions": ["modperms.circulation.requests.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": ["circulation.requests.item.put"],
              "modulePermissions": ["modperms.circulation.requests.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": ["circulation.requests.item.delete"],
              "modulePermissions": ["modperms.circulation.requests.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/requests/queue/item/{id}",
              "permissionsRequired": ["circulation.requests.queue-item.collection.get"],
              "modulePermissions": ["modperms.circulation.requests.queue.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/requests/queue/item/{id}/reorder",
              "permissionsRequired": ["circulation.requests.queue.item-reorder.collection.post"],
              "modulePermissions": ["modperms.circulation.requests.queue.reorder.collection.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/requests/queue/instance/{id}",
              "permissionsRequired": ["circulation.requests.queue-instance.collection.get"],
              "modulePermissions": ["modperms.circulation.requests.queue.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/requests/queue/instance/{id}/reorder",
              "permissionsRequired": ["circulation.requests.queue.instance-reorder.collection.post"],
              "modulePermissions": ["modperms.circulation.requests.queue.reorder.collection.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/requests/instances",
              "permissionsRequired": ["circulation.requests.instances.item.post"],
              "modulePermissions": ["modperms.circulation.requests.instances.item.post"]
            }
          ]
        },
                {
          "id": "circulation-rules",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules",
              "permissionsRequired": ["circulation.rules.get"],
              "modulePermissions": ["circulation-storage.circulation-rules.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation/rules",
              "permissionsRequired": ["circulation.rules.put"],
              "modulePermissions": ["circulation-storage.circulation-rules.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/loan-policy",
              "permissionsRequired": ["circulation.rules.loan-policy.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/loan-policy-all",
              "permissionsRequired": ["circulation.rules.loan-policy-all.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/overdue-fine-policy",
              "permissionsRequired": ["circulation.rules.overdue-fine-policy.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/overdue-fine-policy-all",
              "permissionsRequired": ["circulation.rules.overdue-fine-policy-all.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/lost-item-policy",
              "permissionsRequired": ["circulation.rules.lost-item-policy.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/lost-item-policy-all",
              "permissionsRequired": ["circulation.rules.lost-item-all.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/request-policy",
              "permissionsRequired": ["circulation.rules.request-policy.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/request-policy-all",
              "permissionsRequired": ["circulation.rules.request-policy-all.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/notice-policy",
              "permissionsRequired": ["circulation.rules.notice-policy.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/rules/notice-policy-all",
              "permissionsRequired": ["circulation.rules.notice-policy-all.get"],
              "modulePermissions":               [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ]
            }
          ]
        },
                {
          "id": "patron-action-session",
          "version": "0.2",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/end-patron-action-session",
            "permissionsRequired": ["circulation.end-patron-action-session.post"],
            "modulePermissions":             [
              "patron-action-session-storage.patron-action-sessions.item.get",
              "patron-action-session-storage.patron-action-sessions.collection.get",
              "circulation-storage.loans.collection.get",
              "circulation-storage.circulation-rules.get",
              "configuration.entries.item.get",
              "configuration.entries.collection.get",
              "circulation.internal.fetch-items.collection.get",
              "circulation-storage.loan-policies.collection.get",
              "users.item.get",
              "users.collection.get",
              "addresstypes.collection.get",
              "circulation.rules.notice-policy.get",
              "circulation-storage.patron-notice-policies.item.get",
              "patron-notice.post",
              "patron-action-session-storage.patron-action-sessions.item.delete",
              "pubsub.publish.post",
              "circulation-storage.loans-history.collection.get"
            ]
          }]
        },
                {
          "id": "allowed-service-points",
          "version": "1.1",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/circulation/requests/allowed-service-points",
            "permissionsRequired": ["circulation.requests.allowed-service-points.get"],
            "modulePermissions":             [
              "users.item.get",
              "users.collection.get",
              "circulation-storage.circulation-rules.get",
              "circulation.rules.request-policy.get",
              "circulation.rules.request-policy-all.get",
              "circulation-storage.request-policies.item.get",
              "circulation-storage.request-policies.collection.get",
              "inventory-storage.items.item.get",
              "inventory-storage.items.collection.get",
              "circulation.internal.fetch-items.collection.get",
              "inventory-storage.service-points.item.get",
              "inventory-storage.service-points.collection.get",
              "inventory-storage.holdings.item.get",
              "inventory-storage.holdings.collection.get",
              "inventory-storage.instances.item.get",
              "inventory-storage.instances.collection.get",
              "configuration.entries.item.get",
              "configuration.entries.collection.get",
              "mod-settings.entries.item.get",
              "mod-settings.entries.collection.get",
              "mod-settings.global.read.circulation"
            ]
          }]
        },
                {
          "id": "circulation-settings",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/settings",
              "permissionsRequired": ["circulation.settings.collection.get"],
              "modulePermissions": ["circulation-storage.circulation-settings.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": ["circulation.settings.item.get"],
              "modulePermissions": ["circulation-storage.circulation-settings.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": ["circulation.settings.item.put"],
              "modulePermissions": ["circulation-storage.circulation-settings.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/settings",
              "permissionsRequired": ["circulation.settings.item.post"],
              "modulePermissions": ["circulation-storage.circulation-settings.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": ["circulation.settings.item.delete"],
              "modulePermissions": ["circulation-storage.circulation-settings.item.delete"]
            }
          ]
        },
                {
          "id": "print-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/circulation/print-events-entry",
            "permissionsRequired": ["circulation.print-events-entry.item.post"],
            "modulePermissions":             [
              "print-events-storage.print-events-entry.item.post",
              "circulation-storage.circulation-settings.collection.get"
            ]
          }]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/notice-session-expiration-by-timeout",
              "modulePermissions":               [
                "patron-action-session-storage.expired-session-patron-ids.collection.get",
                "patron-action-session-storage.patron-action-sessions.item.get",
                "patron-action-session-storage.patron-action-sessions.collection.get",
                "circulation-storage.loans.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loan-policies.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.patron-notice-policies.item.get",
                "patron-notice.post",
                "patron-action-session-storage.patron-action-sessions.item.delete",
                "configuration.entries.collection.get",
                "pubsub.publish.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "3"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/actual-cost-expiration-by-timeout",
              "modulePermissions":               [
                "circulation-storage.loans.item.put",
                "inventory-storage.items.item.put",
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "accounts.item.get",
                "accounts.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "pubsub.publish.post"
              ],
              "unit": "minute",
              "delay": "20"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/loan-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "accounts.item.get",
                "accounts.collection.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "5"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/due-date-not-real-time-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/request-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.requests.item.get",
                "circulation-storage.requests.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "usergroups.collection.get",
                "usergroups.item.get",
                "configuration.entries.collection.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/fee-fine-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/overdue-fine-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "patron-action-session-storage.patron-action-sessions.item.get",
                "patron-action-session-storage.patron-action-sessions.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loans-history.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/fee-fine-not-real-time-scheduled-notices-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "2"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/scheduled-anonymize-processing",
              "modulePermissions":               [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "circulation-storage.request-policies.item.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "circulation-storage.patron-notice-policies.item.get",
                "circulation.rules.loan-policy.get",
                "circulation.rules.request-policy.get",
                "circulation.rules.notice-policy.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "proxiesfor.collection.get",
                "configuration.entries.collection.get",
                "scheduled-notice-storage.scheduled-notices.collection.delete",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "patron-notice.post",
                "anonymize-storage-loans.post",
                "accounts.collection.get",
                "feefineactions.collection.get",
                "pubsub.publish.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "60"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/scheduled-age-to-lost",
              "modulePermissions":               [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.patron-notice-policies.collection.get",
                "circulation-storage.patron-notice-policies.item.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "pubsub.publish.post",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "30"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/scheduled-age-to-lost-fee-charging",
              "modulePermissions":               [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "owners.collection.get",
                "feefines.collection.get",
                "accounts.item.post",
                "feefineactions.item.post",
                "pubsub.publish.post",
                "users.item.get",
                "users.collection.get",
                "usergroups.collection.get",
                "usergroups.item.get",
                "addresstypes.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.patron-notice-policies.item.get",
                "circulation-storage.patron-notice-policies.collection.get",
                "circulation.rules.notice-policy.get",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "actual-cost-record-storage.actual-cost-records.item.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "unit": "minute",
              "delay": "35"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/scheduled-digital-reminders-processing",
              "modulePermissions":               [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "overdue-fines-policies.item.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "owners.collection.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "accounts.item.get",
                "accounts.collection.get",
                "accounts.item.post",
                "feefineactions.item.post",
                "circulation-storage.loans-history.collection.get",
                "calendar.endpoint.calendars.surroundingOpenings.get",
                "calendar.endpoint.calendars.allOpenings.get"
              ],
              "schedule":               {
                "cron": "1 0 * * *",
                "zone": "CET"
              }
            }
          ]
        },
                {
          "id": "circulation-event-handlers",
          "version": "0.2",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/handlers/loan-related-fee-fine-closed",
              "permissionsRequired": ["circulation.handlers.loan-related-fee-fine-closed.post"],
              "modulePermissions":               [
                "modperms.circulation.handlers.loan-related-fee-fine-closed.post",
                "pubsub.publish.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/circulation/handlers/fee-fine-balance-changed",
              "permissionsRequired": ["circulation.handlers.fee-fine-balance-changed.post"],
              "modulePermissions": ["modperms.circulation.handlers.fee-fine-balance-changed.post"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "1.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post",
                "circulation-storage.circulation-rules.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/_/tenant"
            }
          ]
        }
      ],
      "requires":       [
                {
          "id": "loan-storage",
          "version": "7.3"
        },
                {
          "id": "circulation-rules-storage",
          "version": "1.0"
        },
                {
          "id": "item-storage",
          "version": "8.7 9.0 10.0"
        },
                {
          "id": "instance-storage",
          "version": "4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0"
        },
                {
          "id": "holdings-storage",
          "version": "1.3 2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
                {
          "id": "request-storage",
          "version": "6.2"
        },
                {
          "id": "request-storage-batch",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "14.2 15.0 16.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "material-types",
          "version": "2.0"
        },
                {
          "id": "loan-policy-storage",
          "version": "1.2 2.0"
        },
                {
          "id": "request-policy-storage",
          "version": "1.0"
        },
                {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0"
        },
                {
          "id": "service-points",
          "version": "3.0"
        },
                {
          "id": "calendar",
          "version": "5.0"
        },
                {
          "id": "patron-notice-policy-storage",
          "version": "0.11"
        },
                {
          "id": "patron-notice",
          "version": "1.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "cancellation-reason-storage",
          "version": "1.1"
        },
                {
          "id": "loan-types",
          "version": "2.2"
        },
                {
          "id": "scheduled-notice-storage",
          "version": "0.6"
        },
                {
          "id": "feesfines",
          "version": "19.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "patron-action-session-storage",
          "version": "0.3"
        },
                {
          "id": "check-in-storage",
          "version": "0.2"
        },
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
                {
          "id": "pubsub-publish",
          "version": "0.1"
        },
                {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
                {
          "id": "notes",
          "version": "4.0"
        },
                {
          "id": "actual-cost-record-storage",
          "version": "0.6"
        },
                {
          "id": "settings",
          "version": "1.0"
        },
                {
          "id": "circulation-settings-storage",
          "version": "1.0"
        },
                {
          "id": "print-events-storage",
          "version": "1.0"
        },
                {
          "id": "actual-cost-fee-fine",
          "version": "0.3"
        },
                {
          "id": "anonymize-storage-loans",
          "version": "0.1"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "template-engine",
          "version": "2.2"
        }
      ],
      "optional": [      {
        "id": "circulation-item",
        "version": "1.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "circulation.print-events-entry.item.post",
          "displayName": "circulation - create print events",
          "description": "create print event logs"
        },
                {
          "permissionName": "circulation.requests.queue.item-reorder.collection.post",
          "displayName": "circulation - reorder queue for an item",
          "description": "change request positions in queue for an item",
          "replaces": ["circulation.requests.queue.reorder.collection.post"]
        },
                {
          "permissionName": "circulation.requests.queue.instance-reorder.collection.post",
          "displayName": "circulation - reorder queue for an instance",
          "description": "change request positions in queue for an instance"
        },
                {
          "permissionName": "circulation.check-out-by-barcode.post",
          "displayName": "circulation - check out item by barcode",
          "description": "check out an item using barcodes for item and loanee"
        },
                {
          "permissionName": "circulation.check-out-by-barcode-dry-run.post",
          "displayName": "circulation - check out item by barcode dry run",
          "description": "dry run of check out an item using barcodes for item and user"
        },
                {
          "permissionName": "circulation.check-in-by-barcode.post",
          "displayName": "circulation - checkin loan by barcode",
          "description": "checkin a loan using barcodes for item and loanee"
        },
                {
          "permissionName": "circulation.renew-by-barcode.post",
          "displayName": "circulation - renew loan by barcode",
          "description": "renew a loan using barcodes for item and loanee"
        },
                {
          "permissionName": "circulation.renew-by-id.post",
          "displayName": "circulation - renew loan using id",
          "description": "renew a loan using IDs for item and loanee"
        },
                {
          "permissionName": "circulation.loans.collection.get",
          "displayName": "circulation - get loan collection",
          "description": "get loan collection"
        },
                {
          "permissionName": "circulation.loans.collection.delete",
          "displayName": "circulation - delete entire loan collection",
          "description": "delete entire loan collection"
        },
                {
          "permissionName": "circulation.loans.item.get",
          "displayName": "circulation - get individual loan",
          "description": "get individual loan"
        },
                {
          "permissionName": "circulation.loans.item.post",
          "displayName": "circulation - create individual loan",
          "description": "create individual loan"
        },
                {
          "permissionName": "circulation.loans.item.put",
          "displayName": "circulation - modify loan",
          "description": "modify individual loan"
        },
                {
          "permissionName": "circulation.loans.collection.anonymize.user.post",
          "displayName": "circulation - anonymize loans",
          "description": "anonymize loans"
        },
                {
          "permissionName": "circulation.loans.item.delete",
          "displayName": "circulation - delete individual loan",
          "description": "delete individual loan"
        },
                {
          "permissionName": "circulation.loans.declare-item-lost.post",
          "displayName": "circulation - declare the loaned item lost",
          "description": "declares the loaned item lost"
        },
                {
          "permissionName": "circulation.loans.change-due-date.post",
          "displayName": "circulation - change loan due date",
          "description": "changes the due date of the loan"
        },
                {
          "permissionName": "circulation.loans.add-info.post",
          "displayName": "circulation - add patron or staff info",
          "description": "sets action and action comment"
        },
                {
          "permissionName": "circulation.loans.claim-item-returned.post",
          "displayName": "circulation - declare the loaned item as claimed returned",
          "description": "declares the loaned item as claimed returned"
        },
                {
          "permissionName": "circulation.loans.declare-claimed-returned-item-as-missing.post",
          "displayName": "circulation -  declare the claimed returned loaned item as missing",
          "description": "declare the claimed returned loaned item as missing"
        },
                {
          "permissionName": "circulation.rules.get",
          "displayName": "Circulation - get circulation rules",
          "description": "Get circulation rules"
        },
                {
          "permissionName": "circulation.rules.put",
          "displayName": "Circulation - modify circulation rules",
          "description": "Modify circulation rules"
        },
                {
          "permissionName": "circulation.rules.loan-policy.get",
          "displayName": "Circulation - use circulation rules to get matching loan policy",
          "description": "Apply circulation rules to get matching loan policy"
        },
                {
          "permissionName": "circulation.rules.loan-policy-all.get",
          "displayName": "Circulation - use circulation rules to get all matching loan policies",
          "description": "Apply circulation rules to get all matching loan policies"
        },
                {
          "permissionName": "circulation.rules.request-policy.get",
          "displayName": "Circulation - use circulation rules to get matching request policy",
          "description": "Apply circulation rules to get matching request policy"
        },
                {
          "permissionName": "circulation.rules.request-policy-all.get",
          "displayName": "Circulation - use circulation rules to get all matching request policies",
          "description": "Apply circulation rules to get all matching request policies"
        },
                {
          "permissionName": "circulation.rules.notice-policy.get",
          "displayName": "Circulation - use circulation rules to get matching notice policy",
          "description": "Apply circulation rules to get matching notice policy"
        },
                {
          "permissionName": "circulation.rules.notice-policy-all.get",
          "displayName": "Circulation - use circulation rules to get all matching notice policies",
          "description": "Apply circulation rules to get all matching notice policies"
        },
                {
          "permissionName": "circulation.rules.overdue-fine-policy-all.get",
          "displayName": "Circulation - use circulation rules to get all matching overdue fine policies",
          "description": "Apply circulation rules to get all matching overdue fine policies"
        },
                {
          "permissionName": "circulation.rules.lost-item-all.get",
          "displayName": "Circulation - use circulation rules to get all matching lost item policies",
          "description": "Apply circulation rules to get all matching lost item policies"
        },
                {
          "permissionName": "circulation.rules.overdue-fine-policy.get",
          "displayName": "Circulation - use circulation rules to get matching overdue fine policy",
          "description": "Apply circulation rules to get matching overdue fine policy"
        },
                {
          "permissionName": "circulation.rules.lost-item-policy.get",
          "displayName": "Circulation - use circulation rules to get matching lost item policy",
          "description": "Apply circulation rules to get matching lost item policy"
        },
                {
          "permissionName": "circulation.requests.collection.get",
          "displayName": "circulation - get request collection",
          "description": "get request collection"
        },
                {
          "permissionName": "circulation.requests.collection.delete",
          "displayName": "circulation - delete entire request collection",
          "description": "delete entire request collection"
        },
                {
          "permissionName": "circulation.requests.item.get",
          "displayName": "circulation - get individual request",
          "description": "get individual request"
        },
                {
          "permissionName": "circulation.requests.item.post",
          "displayName": "circulation - create individual requests",
          "description": "create individual request"
        },
                {
          "permissionName": "circulation.requests.item.put",
          "displayName": "circulation - modify request",
          "description": "modify individual request"
        },
                {
          "permissionName": "circulation.requests.item.delete",
          "displayName": "circulation - delete individual request",
          "description": "delete individual request"
        },
                {
          "permissionName": "circulation.requests.item.move.post",
          "displayName": "circulation - move individual requests to another item",
          "description": "move individual request to another item"
        },
                {
          "permissionName": "circulation.requests.queue-instance.collection.get",
          "displayName": "circulation - request queue for an instance",
          "description": "get request queue for an instance",
          "replaces": ["circulation.requests.queue.collection.get"]
        },
                {
          "permissionName": "circulation.requests.queue-item.collection.get",
          "displayName": "circulation - request queue for an item",
          "description": "get request queue for an item"
        },
                {
          "permissionName": "circulation.requests.instances.item.post",
          "displayName": "circulation - create instance level request",
          "description": "create a request given an instance"
        },
                {
          "permissionName": "circulation.requests.hold-shelf-clearance-report.get",
          "displayName": "circulation - request hold shelf clearance report",
          "description": "get all hold shelf clearance requests to generating a report"
        },
                {
          "permissionName": "circulation.inventory.items-in-transit-report.get",
          "displayName": "circulation - items in transit report",
          "description": "get all items in transit to generating a report"
        },
                {
          "permissionName": "circulation.pick-slips.get",
          "displayName": "circulation - pick slips",
          "description": "get items for pick slips generation"
        },
                {
          "permissionName": "circulation.search-slips.get",
          "displayName": "circulation - search slips",
          "description": "get items for search slips generation"
        },
                {
          "permissionName": "circulation.end-patron-action-session.post",
          "displayName": "circulation - end patron action session",
          "description": "end patron action session"
        },
                {
          "permissionName": "circulation.override-renewal-block.post",
          "displayName": "circulation - override renewal block",
          "description": "renewal block override",
          "replaces": ["circulation.override-renewal-block"]
        },
                {
          "permissionName": "circulation.override-item-limit-block.post",
          "displayName": "circulation - override item limit block",
          "description": "item limit block override",
          "replaces": ["circulation.override-item-limit-block"]
        },
                {
          "permissionName": "circulation.override-item-not-loanable-block.post",
          "displayName": "circulation - override item not loanable block",
          "description": "item not loanable block override",
          "replaces": ["circulation.override-item-not-loanable-block.post"]
        },
                {
          "permissionName": "circulation.override-patron-block.post",
          "displayName": "circulation - override patron block",
          "description": "patron block override",
          "replaces": ["circulation.override-patron-block"]
        },
                {
          "permissionName": "circulation.requests.allowed-service-points.get",
          "displayName": "circulation - get allowed pickup service points for request",
          "description": "get allowed pickup service points for request"
        },
                {
          "permissionName": "circulation.items-by-instance.get",
          "displayName": "circulation - get items by instance",
          "description": "get items by instance"
        },
                {
          "permissionName": "circulation.settings.collection.get",
          "displayName": "circulation - get circulation settings",
          "description": "get a collection of circulation settings"
        },
                {
          "permissionName": "circulation.settings.item.get",
          "displayName": "circulation - get an individual circulation setting",
          "description": "get an individual circulation setting by ID"
        },
                {
          "permissionName": "circulation.settings.item.put",
          "displayName": "circulation - update circulation setting",
          "description": "update circulation setting by ID"
        },
                {
          "permissionName": "circulation.settings.item.post",
          "displayName": "circulation - create circulation setting",
          "description": "create a new circulation setting"
        },
                {
          "permissionName": "circulation.settings.item.delete",
          "displayName": "circulation - delete circulation setting",
          "description": "delete circulation setting by ID"
        },
                {
          "permissionName": "mod-settings.global.read.mod-circulation",
          "displayName": "mod-circulation settings - read",
          "description": "To read mod-circulation settings from mod-settings"
        },
                {
          "permissionName": "mod-settings.global.write.mod-circulation",
          "displayName": "mod-circulation settings - write",
          "description": "To create and edit mod-circulation settings in mod-settings"
        },
                {
          "permissionName": "mod-settings.global.read.circulation",
          "displayName": "circulation functionality settings - read",
          "description": "To read circulation functionality settings from mod-settings"
        },
                {
          "permissionName": "mod-settings.global.write.circulation",
          "displayName": "circulation functionality settings - write",
          "description": "To create and edit circulation functionality settings in mod-settings"
        },
                {
          "permissionName": "circulation.all",
          "displayName": "circulation - all permissions",
          "description": "Entire set of permissions needed to use the circulation",
          "subPermissions":           [
            "circulation.check-out-by-barcode.post",
            "circulation.check-in-by-barcode.post",
            "circulation.renew-by-barcode.post",
            "circulation.renew-by-id.post",
            "circulation.loans.collection.get",
            "circulation.loans.item.get",
            "circulation.loans.item.post",
            "circulation.loans.item.put",
            "circulation.loans.item.delete",
            "circulation.loans.collection.delete",
            "circulation.loans.change-due-date.post",
            "circulation.loans.add-info.post",
            "circulation.loans.claim-item-returned.post",
            "circulation.loans.declare-claimed-returned-item-as-missing.post",
            "circulation.rules.put",
            "circulation.rules.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.loan-policy-all.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.request-policy-all.get",
            "circulation.rules.notice-policy.get",
            "circulation.rules.notice-policy-all.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation.requests.item.post",
            "circulation.requests.item.put",
            "circulation.requests.item.delete",
            "circulation.requests.item.move.post",
            "circulation.requests.collection.delete",
            "circulation.requests.queue-instance.collection.get",
            "circulation.requests.queue-item.collection.get",
            "circulation.requests.queue.reorder.collection.post",
            "circulation.requests.instances.item.post",
            "circulation.requests.hold-shelf-clearance-report.get",
            "circulation.requests.allowed-service-points.get",
            "circulation.inventory.items-in-transit-report.get",
            "circulation.pick-slips.get",
            "circulation.search-slips.get",
            "circulation.handlers.loan-related-fee-fine-closed.post",
            "circulation.handlers.fee-fine-balance-changed.post",
            "circulation.items-by-instance.get"
          ]
        },
                {
          "permissionName": "modperms.circulation.requests.hold-shelf-clearance-report.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "users.collection.get",
            "users.item.get",
            "addresstypes.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.handlers.loan-related-fee-fine-closed.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "accounts.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.item.put",
            "actual-cost-record-storage.actual-cost-records.item.delete"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.handlers.fee-fine-balance-changed.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "owners.collection.get",
            "feefines.collection.get",
            "feefines.item.get",
            "accounts.item.get",
            "accounts.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "feefineactions.item.get",
            "feefineactions.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.item.move.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.notice-policy.get",
            "circulation.internal.apply-rules.execute",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "configuration.entries.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "calendar.endpoint.dates.get",
            "pubsub.publish.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.check-out-by-barcode.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.overdue-fine-policy.get",
            "circulation.rules.lost-item-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "configuration.entries.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "pubsub.publish.post",
            "checkout-lock-storage.checkout-locks.item.post",
            "checkout-lock-storage.checkout-locks.item.delete",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.global.read.mod-circulation",
            "mod-settings.global.read.circulation",
            "manualblocks.item.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.check-out-by-barcode-dry-run.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.overdue-fine-policy.get",
            "circulation.rules.lost-item-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.global.read.mod-circulation",
            "mod-settings.global.read.circulation",
            "manualblocks.item.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.check-in-by-barcode.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation.rules.notice-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "addresstypes.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "feefines.collection.get",
            "feefines.item.post",
            "feefineactions.collection.get",
            "feefineactions.item.post",
            "owners.collection.get",
            "check-in-storage.check-ins.item.post",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.item.get",
            "accounts.item.put",
            "accounts.collection.get",
            "accounts.item.post",
            "pubsub.publish.post",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "feesfines.accounts.refund.post",
            "feesfines.accounts-bulk.refund.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "configuration.entries.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post",
            "departments.item.get",
            "departments.collection.get",
            "circulation-storage.loans-history.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
                {
          "permissionName": "circulation.renew-loan.all",
          "displayName": "Renew a loan",
          "description": "Permissions needed to renew a loan",
          "subPermissions":           [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "patron-notice.post",
            "feefines.collection.get",
            "feefines.item.post",
            "feefineactions.collection.get",
            "feefineactions.item.post",
            "feefineactions.item.get",
            "owners.collection.get",
            "accounts.item.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "pubsub.publish.post",
            "patron-blocks.automated-patron-blocks.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.item.get",
            "manualblocks.collection.get",
            "manualblocks.item.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false,
          "replaces": ["circulation.renew-loan"]
        },
                {
          "permissionName": "perms.circulation.loans.anonymize.all",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "configuration.entries.collection.get",
            "circulation.rules.notice-policy.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "patron-notice.post",
            "anonymize-storage-loans.post",
            "feefineactions.collection.get",
            "pubsub.publish.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false,
          "replaces": ["modperms.circulation.loans.anonymize"]
        },
                {
          "permissionName": "modperms.circulation.loans.item.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.loans.collection.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.internal.fetch-items.collection.get",
            "users.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "accounts.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "feefineactions.collection.get",
            "feefineactions.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.loans.item.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.internal.fetch-items.collection.get",
            "accounts.collection.get",
            "accounts.item.get",
            "feefineactions.collection.get",
            "feefineactions.item.get",
            "users.collection.get",
            "users.item.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "addresstypes.collection.get",
            "overdue-fines-policies.collection.get",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "lost-item-fees-policies.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.collection.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.item.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.notice-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.internal.fetch-items.collection.get",
            "inventory-storage.items.item.put",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "manualblocks.collection.get",
            "pubsub.publish.post",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation-storage.loans-history.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.item.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.item.delete",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "circulation-storage.requests.item.delete",
            "circulation-storage.request-batch.item.post"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.item.put",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "pubsub.publish.post",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.queue.collection.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.queue.reorder.collection.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.requests.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "pubsub.publish.post",
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.requests.instances.item.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "pubsub.publish.post",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.loans.declare-item-lost.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "owners.collection.get",
            "feefines.collection.get",
            "accounts.item.post",
            "users.item.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "feefineactions.item.post",
            "pubsub.publish.post",
            "note.types.collection.get",
            "notes.item.post",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post"
          ],
          "visible": false
        },
                {
          "permissionName": "perms.circulation.loans.change-due-date.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation.rules.loan-policy.get",
            "circulation.rules.notice-policy.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.patron-notice-policies.item.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "users.item.get",
            "addresstypes.collection.get",
            "pubsub.publish.post",
            "patron-notice.post",
            "circulation-storage.loans-history.collection.get",
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.loans.add-info.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
                {
          "permissionName": "perms.circulation.loans.claim-item-returned.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "notes.collection.get",
            "notes.item.post",
            "note.types.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false,
          "replaces": ["modperms.circulation.loans.claim-item-returned.post"]
        },
                {
          "permissionName": "modperms.circulation.loans.declare-claimed-returned-item-as-missing.post",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "notes.item.post",
            "note.types.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.loans.item.put",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "proxiesfor.collection.get",
            "proxiesfor.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "pubsub.publish.post",
            "configuration.entries.collection.get",
            "patron-notice.post",
            "circulation-storage.loans-history.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.inventory.items-in-transit-report.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.pick-slips.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.item.get",
            "addresstypes.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "modperms.circulation.search-slips.get",
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.item.get",
            "addresstypes.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
                {
          "permissionName": "circulation.internal.fetch-items.collection.get",
          "displayName": "Fetch item(s)",
          "description": "Internal permission set for fetching item(s)",
          "subPermissions":           [
            "inventory-storage.items.item.get",
            "circulation-item.collection.get",
            "circulation-item.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.collection.get"
          ],
          "visible": false,
          "replaces": ["circulation.internal.fetch-items"]
        },
                {
          "permissionName": "circulation.internal.apply-rules.execute",
          "displayName": "Apply circulation rules",
          "description": "Internal permission set for applying circulation rules",
          "subPermissions":           [
            "circulation.rules.loan-policy.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation.rules.request-policy.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation.rules.notice-policy.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.patron-notice-policies.collection.get"
          ],
          "visible": false,
          "replaces": ["circulation.internal.apply-rules"]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-circulation:24.4.3",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"9801/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "SCHEDULED_ANONYMIZATION_NUMBER_OF_LOANS_TO_CHECK",
            "value": "50000"
          },
                    {
            "name": "ENABLE_FLOATING_COLLECTIONS",
            "value": "true"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
                    {
            "name": "ENV",
            "value": "folio"
          }
        ]
      }
    },
        {
      "id": "mod-feesfines-19.3.2",
      "name": "feesfines",
      "requires":       [
                {
          "id": "patron-notice",
          "version": "1.0"
        },
                {
          "id": "holdings-storage",
          "version": "4.2 5.0 6.0 7.0 8.0"
        },
                {
          "id": "item-storage",
          "version": "8.4 9.0 10.0"
        },
                {
          "id": "instance-storage",
          "version": "7.4 8.0 9.0 10.0 11.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "15.1 16.0"
        },
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
                {
          "id": "pubsub-publish",
          "version": "0.1"
        },
                {
          "id": "actual-cost-record-storage",
          "version": "0.7"
        },
                {
          "id": "loan-types",
          "version": "2.3"
        }
      ],
      "provides":       [
                {
          "id": "feesfines",
          "version": "19.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/feefines",
              "permissionsRequired": ["feefines.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": ["feefines.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/feefines",
              "permissionsRequired": ["feefines.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": ["feefines.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": ["feefines.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/owners",
              "permissionsRequired": ["owners.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": ["owners.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/owners",
              "permissionsRequired": ["owners.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": ["owners.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": ["owners.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/accounts",
              "permissionsRequired": ["accounts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": ["accounts.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts",
              "permissionsRequired": ["accounts.item.post"],
              "modulePermissions":               [
                "patron-notice.post",
                "pubsub.publish.post"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": ["accounts.item.put"],
              "modulePermissions":               [
                "patron-notice.post",
                "pubsub.publish.post"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": ["accounts.item.delete"],
              "modulePermissions": ["pubsub.publish.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/check-pay",
              "permissionsRequired": ["feesfines.accounts.check-pay.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/check-waive",
              "permissionsRequired": ["feesfines.accounts.check-waive.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/check-transfer",
              "permissionsRequired": ["feesfines.accounts.check-transfer.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/check-refund",
              "permissionsRequired": ["feesfines.accounts.check-refund.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/pay",
              "permissionsRequired": ["feesfines.accounts.pay.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/waive",
              "permissionsRequired": ["feesfines.accounts.waive.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/transfer",
              "permissionsRequired": ["feesfines.accounts.transfer.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/cancel",
              "permissionsRequired": ["feesfines.accounts.cancel.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts/{id}/refund",
              "permissionsRequired": ["feesfines.accounts.refund.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/check-pay",
              "permissionsRequired": ["feesfines.accounts-bulk.check-pay.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/check-transfer",
              "permissionsRequired": ["feesfines.accounts-bulk.check-transfer.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/check-refund",
              "permissionsRequired": ["feesfines.accounts-bulk.check-refund.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/check-waive",
              "permissionsRequired": ["feesfines.accounts-bulk.check-waive.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/pay",
              "permissionsRequired": ["feesfines.accounts-bulk.pay.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/waive",
              "permissionsRequired": ["feesfines.accounts-bulk.waive.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/transfer",
              "permissionsRequired": ["feesfines.accounts-bulk.transfer.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/cancel",
              "permissionsRequired": ["feesfines.accounts-bulk.cancel.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/accounts-bulk/refund",
              "permissionsRequired": ["feesfines.accounts-bulk.refund.post"],
              "modulePermissions":               [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/feefineactions",
              "permissionsRequired": ["feefineactions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": ["feefineactions.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/feefineactions",
              "permissionsRequired": ["feefineactions.item.post"],
              "modulePermissions":               [
                "modperms.feesfines.patron-notices.post",
                "pubsub.publish.post"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": ["feefineactions.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": ["feefineactions.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/payments",
              "permissionsRequired": ["payments.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": ["payments.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/payments",
              "permissionsRequired": ["payments.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": ["payments.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": ["payments.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/waives",
              "permissionsRequired": ["waives.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": ["waives.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/waives",
              "permissionsRequired": ["waives.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": ["waives.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": ["waives.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/refunds",
              "permissionsRequired": ["refunds.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": ["refunds.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/refunds",
              "permissionsRequired": ["refunds.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": ["refunds.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": ["refunds.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/transfers",
              "permissionsRequired": ["transfers.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": ["transfers.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/transfers",
              "permissionsRequired": ["transfers.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": ["transfers.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": ["transfers.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/comments",
              "permissionsRequired": ["comments.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": ["comments.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/comments",
              "permissionsRequired": ["comments.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": ["comments.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": ["comments.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/transfer-criterias",
              "permissionsRequired": ["transfer-criterias.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": ["transfer-criterias.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/transfer-criterias",
              "permissionsRequired": ["transfer-criterias.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": ["transfer-criterias.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": ["transfer-criterias.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/manualblocks",
              "permissionsRequired": ["manualblocks.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": ["manualblocks.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/manualblocks",
              "permissionsRequired": ["manualblocks.item.post"],
              "modulePermissions": ["pubsub.publish.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": ["manualblocks.item.put"],
              "modulePermissions": ["pubsub.publish.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": ["manualblocks.item.delete"],
              "modulePermissions": ["pubsub.publish.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/overdue-fines-policies",
              "permissionsRequired": ["overdue-fines-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": ["overdue-fines-policies.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/overdue-fines-policies",
              "permissionsRequired": ["overdue-fines-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": ["overdue-fines-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": ["overdue-fines-policies.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/lost-item-fees-policies",
              "permissionsRequired": ["lost-item-fees-policies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": ["lost-item-fees-policies.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/lost-item-fees-policies",
              "permissionsRequired": ["lost-item-fees-policies.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": ["lost-item-fees-policies.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": ["lost-item-fees-policies.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/manual-block-templates",
              "permissionsRequired": ["manual-block-templates.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": ["manual-block-templates.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/manual-block-templates",
              "permissionsRequired": ["manual-block-templates.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": ["manual-block-templates.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": ["manual-block-templates.item.delete"]
            }
          ]
        },
                {
          "id": "actual-cost-fee-fine",
          "version": "0.3",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/actual-cost-fee-fine/cancel",
              "permissionsRequired": ["actual-cost-fee-fine-cancel.post"],
              "modulePermissions":               [
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "pubsub.publish.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/actual-cost-fee-fine/bill",
              "permissionsRequired": ["actual-cost-fee-fine-bill.post"],
              "modulePermissions":               [
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "users.item.get",
                "users.collection.get",
                "pubsub.publish.post"
              ]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "feefine-reports",
          "version": "2.3",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/feefine-reports/refund",
              "permissionsRequired": ["feefine-reports.refund.post"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "users.item.get",
                "usergroups.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/feefine-reports/cash-drawer-reconciliation",
              "permissionsRequired": ["feesfines.feefine-reports.cash-drawer-reconciliation.post"],
              "modulePermissions": ["configuration.entries.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/feefine-reports/cash-drawer-reconciliation/sources",
              "permissionsRequired": ["feesfines.feefine-reports.cash-drawer-reconciliation-source.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/feefine-reports/financial-transactions-detail",
              "permissionsRequired": ["feefine-reports.financial-transactions-detail.post"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get",
                "users.item.get",
                "users.collection.get",
                "usergroups.item.get",
                "usergroups.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get"
              ]
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "feefines.collection.get",
          "displayName": "feefines collection get",
          "description": "Get a collection of feefines records"
        },
                {
          "permissionName": "feefines.item.get",
          "displayName": "feefines item get",
          "description": "Read an individual record in the Feefine module"
        },
                {
          "permissionName": "feefines.item.post",
          "displayName": "feefines item post",
          "description": "Create new records in the Feefine module"
        },
                {
          "permissionName": "feefines.item.put",
          "displayName": "feefines item put",
          "description": "Edit existing records in the Feefine module"
        },
                {
          "permissionName": "feefines.item.delete",
          "displayName": "feefines item delete",
          "description": "Delete records from the Feefine module"
        },
                {
          "permissionName": "owners.collection.get",
          "displayName": "owners collection get",
          "description": "Get a list of owner records"
        },
                {
          "permissionName": "owners.item.get",
          "displayName": "owners item get",
          "description": "Get a single owner item"
        },
                {
          "permissionName": "owners.item.post",
          "displayName": "owners item post",
          "description": "Create new Owners"
        },
                {
          "permissionName": "owners.item.put",
          "displayName": "owners item put",
          "description": "Edit existing Owners"
        },
                {
          "permissionName": "owners.item.delete",
          "displayName": "owners item delete",
          "description": "Delete Owners"
        },
                {
          "permissionName": "accounts.collection.get",
          "displayName": "accounts collection get",
          "description": "Get a list of account records"
        },
                {
          "permissionName": "accounts.item.get",
          "displayName": "accounts item get",
          "description": "Get a single account record"
        },
                {
          "permissionName": "accounts.item.post",
          "displayName": "accounts item post",
          "description": "Create a new account record"
        },
                {
          "permissionName": "accounts.item.put",
          "displayName": "accounts item put",
          "description": "Edit an account record"
        },
                {
          "permissionName": "accounts.item.delete",
          "displayName": "accounts item delete",
          "description": "Delete an account record"
        },
                {
          "permissionName": "feesfines.accounts.check-pay.post",
          "displayName": "accounts payment check post",
          "description": "Checks if payment is allowed",
          "replaces": ["accounts.check-pay.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.check-pay.post",
          "displayName": "accounts bulk payment check post",
          "description": "Checks if payment is allowed as bulk"
        },
                {
          "permissionName": "feesfines.accounts.check-waive.post",
          "displayName": "accounts waiver check post",
          "description": "Checks if waiver is allowed",
          "replaces": ["accounts.check-waive.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.check-waive.post",
          "displayName": "accounts bulk waiver check post",
          "description": "Checks if waiver is allowed as bulk"
        },
                {
          "permissionName": "feesfines.accounts.check-transfer.post",
          "displayName": "accounts transfer check post",
          "description": "Checks if transfer is allowed",
          "replaces": ["accounts.check-transfer.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.check-transfer.post",
          "displayName": "accounts bulk transfer check post",
          "description": "Checks if transfer is allowed as bulk"
        },
                {
          "permissionName": "feesfines.accounts.check-refund.post",
          "displayName": "accounts refund check post",
          "description": "Checks if refund is allowed",
          "replaces": ["accounts.check-refund.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.check-refund.post",
          "displayName": "accounts bulk refund check post",
          "description": "Checks if refund is allowed as bulk"
        },
                {
          "permissionName": "feesfines.accounts.pay.post",
          "displayName": "accounts payment post",
          "description": "Makes payment for an account",
          "replaces": ["accounts.pay.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.pay.post",
          "displayName": "accounts bulk payment post",
          "description": "Makes payment for an account bulk"
        },
                {
          "permissionName": "feesfines.accounts.waive.post",
          "displayName": "accounts waiver post",
          "description": "Waives an account",
          "replaces": ["accounts.waive.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.waive.post",
          "displayName": "accounts bulk waiver post",
          "description": "Waives an account bulk"
        },
                {
          "permissionName": "feesfines.accounts.transfer.post",
          "displayName": "accounts transfer post",
          "description": "Transfers an account",
          "replaces": ["accounts.transfer.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.transfer.post",
          "displayName": "accounts bulk transfer post",
          "description": "Transfers an account bulk"
        },
                {
          "permissionName": "feesfines.accounts.cancel.post",
          "displayName": "accounts cancel post",
          "description": "Cancels an account",
          "replaces": ["accounts.cancel.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.cancel.post",
          "displayName": "accounts bulk cancel post",
          "description": "Cancels an account bulk"
        },
                {
          "permissionName": "feesfines.accounts.refund.post",
          "displayName": "accounts refund post",
          "description": "Refunds an account",
          "replaces": ["accounts.refund.post"]
        },
                {
          "permissionName": "feesfines.accounts-bulk.refund.post",
          "displayName": "accounts bulk refund post",
          "description": "Refunds an account bulk"
        },
                {
          "permissionName": "feefineactions.collection.get",
          "displayName": "feefineactions collection get",
          "description": "Get a list of feefineaction records"
        },
                {
          "permissionName": "feefineactions.item.get",
          "displayName": "feefineactions item get",
          "description": "Get a single feefineaction record"
        },
                {
          "permissionName": "feefineactions.item.post",
          "displayName": "feefineactions item post",
          "description": "Create a new feefineaction record"
        },
                {
          "permissionName": "feefineactions.item.put",
          "displayName": "feefineactions item put",
          "description": "Edit an feefineaction record"
        },
                {
          "permissionName": "feefineactions.item.delete",
          "displayName": "feefineactions item delete",
          "description": "Delete an feefineaction record"
        },
                {
          "permissionName": "payments.collection.get",
          "displayName": "payments collection get",
          "description": "Get a list of payment records"
        },
                {
          "permissionName": "payments.item.get",
          "displayName": "payments item get",
          "description": "Get a single payment record"
        },
                {
          "permissionName": "payments.item.post",
          "displayName": "payments item post",
          "description": "Create a new payment record"
        },
                {
          "permissionName": "accounts.pay.check.post",
          "displayName": "accounts payment check post",
          "description": "Checks if payment is valid"
        },
                {
          "permissionName": "payments.item.put",
          "displayName": "payments item put",
          "description": "Edit an payment record"
        },
                {
          "permissionName": "payments.item.delete",
          "displayName": "payments item delete",
          "description": "Delete an payment record"
        },
                {
          "permissionName": "waives.collection.get",
          "displayName": "waives collection get",
          "description": "Get a list of waive records"
        },
                {
          "permissionName": "waives.item.get",
          "displayName": "waives item get",
          "description": "Get a single waive record"
        },
                {
          "permissionName": "waives.item.post",
          "displayName": "waives item post",
          "description": "Create a new waive record"
        },
                {
          "permissionName": "waives.item.put",
          "displayName": "waives item put",
          "description": "Edit an waive record"
        },
                {
          "permissionName": "waives.item.delete",
          "displayName": "waives item delete",
          "description": "Delete an waive record"
        },
                {
          "permissionName": "refunds.collection.get",
          "displayName": "refunds collection get",
          "description": "Get a list of refund records"
        },
                {
          "permissionName": "refunds.item.get",
          "displayName": "refunds item get",
          "description": "Get a single refund record"
        },
                {
          "permissionName": "refunds.item.post",
          "displayName": "refunds item post",
          "description": "Create a new refund record"
        },
                {
          "permissionName": "refunds.item.put",
          "displayName": "refunds item put",
          "description": "Edit an refund record"
        },
                {
          "permissionName": "refunds.item.delete",
          "displayName": "refunds item delete",
          "description": "Delete an refund record"
        },
                {
          "permissionName": "transfers.collection.get",
          "displayName": "transfers collection get",
          "description": "Get a list of transfer records"
        },
                {
          "permissionName": "transfers.item.get",
          "displayName": "transfers item get",
          "description": "Get a single transfer record"
        },
                {
          "permissionName": "transfers.item.post",
          "displayName": "transfers item post",
          "description": "Create a new transfer record"
        },
                {
          "permissionName": "transfers.item.put",
          "displayName": "transfers item put",
          "description": "Edit an transfer record"
        },
                {
          "permissionName": "transfers.item.delete",
          "displayName": "transfers item delete",
          "description": "Delete an transfer record"
        },
                {
          "permissionName": "comments.collection.get",
          "displayName": "comments collection get",
          "description": "Get a list of comment records"
        },
                {
          "permissionName": "comments.item.get",
          "displayName": "comments item get",
          "description": "Get a single comment record"
        },
                {
          "permissionName": "comments.item.post",
          "displayName": "comments item post",
          "description": "Create a new comment record"
        },
                {
          "permissionName": "comments.item.put",
          "displayName": "comments item put",
          "description": "Edit an comment record"
        },
                {
          "permissionName": "comments.item.delete",
          "displayName": "comments item delete",
          "description": "Delete an comment record"
        },
                {
          "permissionName": "transfer-criterias.collection.get",
          "displayName": "transfer criteria collection get",
          "description": "Get a list of transfer criteria records"
        },
                {
          "permissionName": "transfer-criterias.item.get",
          "displayName": "transfer criteria item get",
          "description": "Get a single transfer criteria record"
        },
                {
          "permissionName": "transfer-criterias.item.post",
          "displayName": "transfer criteria item post",
          "description": "Create a new transfer criteria record"
        },
                {
          "permissionName": "transfer-criterias.item.put",
          "displayName": "transfer criteria item put",
          "description": "Edit an transfer criteria record"
        },
                {
          "permissionName": "transfer-criterias.item.delete",
          "displayName": "transfer criteria item delete",
          "description": "Delete an transfer criteria record"
        },
                {
          "permissionName": "manualblocks.collection.get",
          "displayName": "manualblocks collection get",
          "description": "Get a list of manualblock records"
        },
                {
          "permissionName": "manualblocks.item.get",
          "displayName": "manualblocks item get",
          "description": "Get a single manualblock record"
        },
                {
          "permissionName": "manualblocks.item.post",
          "displayName": "manualblocks item post",
          "description": "Create a new manualblock record"
        },
                {
          "permissionName": "manualblocks.item.put",
          "displayName": "manualblocks item put",
          "description": "Edit an manualblock record"
        },
                {
          "permissionName": "manualblocks.item.delete",
          "displayName": "manualblocks item delete",
          "description": "Delete an manualblock record"
        },
                {
          "permissionName": "overdue-fines-policies.collection.get",
          "displayName": "Overdue-fines-policies collection get",
          "description": "Get a list of overdue-fines-policies records"
        },
                {
          "permissionName": "overdue-fines-policies.item.get",
          "displayName": "Overdue-fines-policies item get",
          "description": "Get a single overdue-fines-policies record"
        },
                {
          "permissionName": "overdue-fines-policies.item.post",
          "displayName": "Overdue-fines-policies item post",
          "description": "Create a new overdue-fines-policies record"
        },
                {
          "permissionName": "overdue-fines-policies.item.put",
          "displayName": "Overdue-fines-policies item put",
          "description": "Edit an overdue-fines-policies record"
        },
                {
          "permissionName": "overdue-fines-policies.item.delete",
          "displayName": "Overdue-fines-policies item delete",
          "description": "Delete an overdue-fines-policies record"
        },
                {
          "permissionName": "lost-item-fees-policies.collection.get",
          "displayName": "Lost-item-fees-policies collection get",
          "description": "Get a list of lost-item-fees-policies records"
        },
                {
          "permissionName": "lost-item-fees-policies.item.get",
          "displayName": "Lost-item-fees-policies item get",
          "description": "Get a single lost-item-fees-policies record"
        },
                {
          "permissionName": "lost-item-fees-policies.item.post",
          "displayName": "Lost-item-fees-policies item post",
          "description": "Create a new lost-item-fees-policies record"
        },
                {
          "permissionName": "lost-item-fees-policies.item.put",
          "displayName": "Lost-item-fees-policies item put",
          "description": "Edit an lost-item-fees-policies record"
        },
                {
          "permissionName": "lost-item-fees-policies.item.delete",
          "displayName": "Lost-item-fees-policies item delete",
          "description": "Delete an lost-item-fees-policies record"
        },
                {
          "permissionName": "manual-block-templates.collection.get",
          "displayName": "manual-block-template collection get",
          "description": "Get a list of manual-block templates"
        },
                {
          "permissionName": "manual-block-templates.item.get",
          "displayName": "manual-block-template item get",
          "description": "Get a single manual-block template"
        },
                {
          "permissionName": "manual-block-templates.item.post",
          "displayName": "manual-block-template item post",
          "description": "Create a new manual-block template"
        },
                {
          "permissionName": "manual-block-templates.item.put",
          "displayName": "manual-block-template item put",
          "description": "Edit an manual-block template"
        },
                {
          "permissionName": "manual-block-templates.item.delete",
          "displayName": "manual-block-template item delete",
          "description": "Delete an manual-block template"
        },
                {
          "permissionName": "modperms.feesfines.patron-notices.post",
          "displayName": "module permissions for sending patron notices",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions":           [
            "patron-notice.post",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "users.item.get",
            "users.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "feefine-reports.refund.post",
          "displayName": "module permissions for loading refund report",
          "description": "Load a refund report"
        },
                {
          "permissionName": "feesfines.feefine-reports.cash-drawer-reconciliation.post",
          "displayName": "module permissions for loading cash drawer reconciliation report",
          "description": "Load a cash drawer reconciliation report",
          "replaces": ["feefine-reports.cash-drawer-reconciliation.post"]
        },
                {
          "permissionName": "feesfines.feefine-reports.cash-drawer-reconciliation-source.post",
          "displayName": "module permissions for loading cash drawer reconciliation source report",
          "description": "Load a cash drawer reconciliation source report"
        },
                {
          "permissionName": "feefine-reports.financial-transactions-detail.post",
          "displayName": "module permissions for loading financial transactions detail report",
          "description": "Load a financial transactions detail report"
        },
                {
          "permissionName": "actual-cost-fee-fine-cancel.post",
          "displayName": "module permissions for canceling actual cost fee/fine record",
          "description": "Cancel actual cost fee/fine record"
        },
                {
          "permissionName": "actual-cost-fee-fine-bill.post",
          "displayName": "Actual cost fee/fine - bill",
          "description": "Bill actual cost fee/fine"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-feesfines:19.3.2",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-patron-blocks-1.12.1",
      "name": "Patron Blocks Module",
      "requires":       [
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
                {
          "id": "loan-storage",
          "version": "7.0"
        },
                {
          "id": "users",
          "version": "15.1 16.0"
        }
      ],
      "provides":       [
                {
          "id": "automated-patron-blocks",
          "version": "0.1",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/automated-patron-blocks/{userId}",
            "permissionsRequired": ["patron-blocks.automated-patron-blocks.collection.get"],
            "modulePermissions":             [
              "pubsub.event-types.post",
              "pubsub.publishers.post",
              "pubsub.subscribers.post",
              "users.item.get"
            ]
          }]
        },
                {
          "id": "user-summary",
          "version": "0.1",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/user-summary/{userId}",
            "permissionsRequired": ["patron-blocks.user-summary.item.get"]
          }]
        },
                {
          "id": "patron-blocks-event-handlers",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/fee-fine-balance-changed",
              "permissionsRequired": ["patron-blocks.handlers.fee-fine-balance-changed.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/item-checked-out",
              "permissionsRequired": ["patron-blocks.handlers.item-checked-out.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/item-checked-in",
              "permissionsRequired": ["patron-blocks.handlers.item-checked-in.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/item-declared-lost",
              "permissionsRequired": ["patron-blocks.handlers.item-declared-lost.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/item-aged-to-lost",
              "permissionsRequired": ["patron-blocks.handlers.item-aged-to-lost.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/item-claimed-returned",
              "permissionsRequired": ["patron-blocks.handlers.item-claimed-returned.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/loan-due-date-changed",
              "permissionsRequired": ["patron-blocks.handlers.loan-due-date-changed.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/handlers/loan-closed",
              "permissionsRequired": ["patron-blocks.handlers.loan-closed.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/automated-patron-blocks/synchronization/job",
              "permissionsRequired": ["patron-blocks.synchronization.job.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/automated-patron-blocks/synchronization/job/{syncJobId}",
              "permissionsRequired": ["patron-blocks.synchronization.job.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "patron-block-conditions",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-block-conditions",
              "permissionsRequired": ["patron-blocks.patron-block-conditions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-block-conditions/{id}",
              "permissionsRequired": ["patron-blocks.patron-block-conditions.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/patron-block-conditions/{id}",
              "permissionsRequired": ["patron-blocks.patron-block-conditions.item.put"]
            }
          ]
        },
                {
          "id": "patron-block-limits",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-block-limits",
              "permissionsRequired": ["patron-blocks.patron-block-limits.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": ["patron-blocks.patron-block-limits.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/patron-block-limits",
              "permissionsRequired": ["patron-blocks.patron-block-limits.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": ["patron-blocks.patron-block-limits.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": ["patron-blocks.patron-block-limits.item.delete"]
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/automated-patron-blocks/synchronization/start",
            "modulePermissions":             [
              "patron-blocks.synchronization-run.post",
              "circulation-storage.loans.collection.get",
              "circulation-storage.loans.item.get",
              "accounts.collection.get",
              "accounts.item.get"
            ],
            "unit": "minute",
            "delay": "1"
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "patron-blocks.patron-block-conditions.collection.get",
          "displayName": "Patron block conditions - get patron block condition collection",
          "description": "Get patron block condition collection",
          "replaces": ["patron-block-conditions.collection.get"]
        },
                {
          "permissionName": "patron-blocks.patron-block-conditions.item.get",
          "displayName": "Patron block conditions - get patron block condition",
          "description": "Get patron block condition by id",
          "replaces": ["patron-block-conditions.item.get"]
        },
                {
          "permissionName": "patron-blocks.patron-block-conditions.item.put",
          "displayName": "Patron block conditions - put patron block condition",
          "description": "Put patron block condition by id",
          "replaces": ["patron-block-conditions.item.put"]
        },
                {
          "permissionName": "patron-blocks.patron-block-limits.collection.get",
          "displayName": "Patron block limits - get patron block limit collection",
          "description": "Get patron block limit collection",
          "replaces": ["patron-block-limits.collection.get"]
        },
                {
          "permissionName": "patron-blocks.patron-block-limits.item.get",
          "displayName": "Patron block limits - get patron block limit",
          "description": "Get patron block limit by id",
          "replaces": ["patron-block-limits.item.get"]
        },
                {
          "permissionName": "patron-blocks.patron-block-limits.item.post",
          "displayName": "Patron block limits - post patron block limit",
          "description": "Create patron block limit",
          "replaces": ["patron-block-limits.item.post"]
        },
                {
          "permissionName": "patron-blocks.patron-block-limits.item.put",
          "displayName": "Patron block limits - put patron block limit",
          "description": "Put patron block limit by id",
          "replaces": ["patron-block-limits.item.put"]
        },
                {
          "permissionName": "patron-blocks.patron-block-limits.item.delete",
          "displayName": "Patron block limits - delete patron block limit",
          "description": "Delete patron block limit by id",
          "replaces": ["patron-block-limits.item.delete"]
        },
                {
          "permissionName": "patron-blocks.automated-patron-blocks.collection.get",
          "displayName": "Patron blocks - get blocks for patron",
          "description": "Get automated patron blocks by user ID",
          "replaces": ["automated-patron-blocks.collection.get"]
        },
                {
          "permissionName": "patron-blocks.user-summary.item.get",
          "displayName": "User summary - get UserSummary object",
          "description": "Get UserSummary object by user ID",
          "replaces": ["user-summary.item.get"]
        },
                {
          "permissionName": "patron-blocks.synchronization.job.post",
          "displayName": "Synchronization job - post Synchronization job",
          "description": "Post Synchronization job"
        },
                {
          "permissionName": "patron-blocks.synchronization.job.get",
          "displayName": "Synchronization job - get Synchronization job by ID",
          "description": "Get Synchronization job",
          "replaces": ["patron-blocks.synchronization.job.get"]
        },
                {
          "permissionName": "patron-blocks.handlers.fee-fine-balance-changed.post",
          "displayName": "Patron blocks - post fee fine balance changed event",
          "description": "Post fee fine balance changed event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-checked-out.post",
          "displayName": "Patron blocks - post item checked out event",
          "description": "Post item checked out event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-checked-in.post",
          "displayName": "Patron blocks - post item checked in event",
          "description": "Post item checked in event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-declared-lost.post",
          "displayName": "Patron blocks - post item declared lost event",
          "description": "Post item declared lost event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-aged-to-lost.post",
          "displayName": "Patron blocks - post item aged to lost event",
          "description": "Post item aged to lost event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-claimed-returned.post",
          "displayName": "Patron blocks - post item claimed returned event",
          "description": "Post item claimed returned event"
        },
                {
          "permissionName": "patron-blocks.handlers.loan-due-date-changed.post",
          "displayName": "Patron blocks - post loan due date changed event",
          "description": "Post loan due date changed event"
        },
                {
          "permissionName": "patron-blocks.handlers.loan-closed.post",
          "displayName": "Patron blocks - post loan closed event",
          "description": "Post loan closed event"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-patron-blocks:1.12.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-entities-links-4.0.2",
      "name": "Entities Links",
      "requires":       [
                {
          "id": "login",
          "version": "7.0"
        },
                {
          "id": "permissions",
          "version": "5.3"
        },
                {
          "id": "users",
          "version": "16.0"
        },
                {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
                {
          "id": "instance-storage",
          "version": "10.0 11.0"
        },
                {
          "id": "mapping-rules-provider",
          "version": "2.0"
        },
                {
          "id": "settings",
          "version": "1.0"
        },
                {
          "id": "source-storage-batch",
          "version": "1.3"
        }
      ],
      "optional":       [
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "specification-storage",
          "version": "1.0"
        }
      ],
      "provides":       [
                {
          "id": "instance-authority-links",
          "version": "2.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/links/instances/{instanceId}",
              "permissionsRequired": ["instance-authority-links.instances.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/links/instances/{instanceId}",
              "permissionsRequired": ["instance-authority-links.instances.collection.put"],
              "modulePermissions":               [
                "source-storage.parsed-records.fetch.collection.post",
                "search.authorities.collection.get",
                "mapping-metadata.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.put",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/links/authorities/bulk/count",
              "permissionsRequired": ["instance-authority-links.authorities.bulk.post"]
            }
          ]
        },
                {
          "id": "instance-authority-linking-rules",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/linking-rules/instance-authority",
              "permissionsRequired": ["instance-authority.linking-rules.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/linking-rules/instance-authority/{linkId}",
              "permissionsRequired": ["instance-authority.linking-rules.item.get"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/linking-rules/instance-authority/{linkId}",
              "permissionsRequired": ["instance-authority.linking-rules.item.patch"]
            }
          ]
        },
                {
          "id": "instance-authority-links-statistics",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/links/stats/authority",
              "permissionsRequired": ["instance-authority-links.authority-statistics.collection.get"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/links/stats/instance",
              "permissionsRequired": ["instance-authority-links.instance-statistics.collection.get"],
              "modulePermissions": ["inventory-storage.instances.collection.get"]
            }
          ]
        },
                {
          "id": "instance-authority-links-suggestions",
          "version": "1.2",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/links-suggestions/marc",
            "permissionsRequired": ["instance-authority-links.suggestions.post"],
            "modulePermissions":             [
              "source-storage.parsed-records.fetch.collection.post",
              "user-tenants.collection.get"
            ]
          }]
        },
                {
          "id": "authority-storage",
          "version": "2.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-storage/authorities",
              "permissionsRequired": ["inventory-storage.authorities.collection.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": ["inventory-storage.authorities.item.get"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-storage/authorities",
              "permissionsRequired": ["inventory-storage.authorities.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-storage/authorities/bulk",
              "permissionsRequired": ["inventory-storage.authorities.bulk.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": ["inventory-storage.authorities.item.put"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": ["inventory-storage.authorities.item.delete"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "authority-note-types",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-note-types",
              "permissionsRequired": ["inventory-storage.authority-note-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": ["inventory-storage.authority-note-types.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-note-types",
              "permissionsRequired": ["inventory-storage.authority-note-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": ["inventory-storage.authority-note-types.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": ["inventory-storage.authority-note-types.item.delete"]
            }
          ]
        },
                {
          "id": "authority-source-files",
          "version": "2.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-source-files",
              "permissionsRequired": ["inventory-storage.authority-source-files.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": ["inventory-storage.authority-source-files.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-source-files",
              "permissionsRequired": ["inventory-storage.authority-source-files.item.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": ["inventory-storage.authority-source-files.item.patch"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": ["inventory-storage.authority-source-files.item.delete"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-source-files/{id}/hrid",
              "permissionsRequired": ["inventory-storage.authority-source-files.hrid.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "modulePermissions":               [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": []
            }
          ]
        },
                {
          "id": "authority-reindex",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/authority-storage/reindex",
              "permissionsRequired": ["authority-storage.authority.reindex.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-storage/reindex",
              "permissionsRequired": ["authority-storage.authority.reindex.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/authority-storage/reindex/{id}",
              "permissionsRequired": ["authority-storage.authority.reindex.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/authority-storage/reindex/{id}",
              "permissionsRequired": ["authority-storage.authority.reindex.item.delete"]
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/authority-storage/expire/authorities",
            "unit": "day",
            "delay": "1",
            "modulePermissions":             [
              "mod-settings.entries.collection.get",
              "mod-settings.global.read.authority-storage",
              "user-tenants.collection.get"
            ]
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "mod-settings.global.write.authority-storage",
          "displayName": "Entities links settings - Create configuration",
          "description": "To create new configuration in mod settings"
        },
                {
          "permissionName": "mod-settings.global.read.authority-storage",
          "displayName": "Entities links settings - Read configuration",
          "description": "To read the configuration from mod settings."
        },
                {
          "permissionName": "instance-authority-links.instances.collection.get",
          "displayName": "Entities Links - get instance-authority links",
          "description": "Get instance-authority links collection"
        },
                {
          "permissionName": "instance-authority-links.instances.collection.put",
          "displayName": "Entities Links - update instance-authority links",
          "description": "Update instance-authority links collection"
        },
                {
          "permissionName": "instance-authority-links.authorities.bulk.post",
          "displayName": "Entities Links - count instance-authority links for each authority",
          "description": "Count instance-authority links for each authority"
        },
                {
          "permissionName": "instance-authority.linking-rules.collection.get",
          "displayName": "Entities Links - get instance-authority linking rules",
          "description": "Get instance-authority linking rules"
        },
                {
          "permissionName": "instance-authority.linking-rules.item.get",
          "displayName": "Entities Links - get instance-authority linking rule",
          "description": "Get instance-authority linking rule"
        },
                {
          "permissionName": "instance-authority.linking-rules.item.patch",
          "displayName": "Entities Links - patch instance-authority linking rule",
          "description": "Patch instance-authority linking rule"
        },
                {
          "permissionName": "instance-authority-links.authority-statistics.collection.get",
          "displayName": "Entities Authority Links Statistics - get instance-authority links statistics",
          "description": "Get instance-authority links statistics"
        },
                {
          "permissionName": "instance-authority-links.instance-statistics.collection.get",
          "displayName": "Entities Instance Links Statistics - get instance-authority links statistics",
          "description": "Get instance-authority links (Instance) statistics"
        },
                {
          "permissionName": "instance-authority-links.suggestions.post",
          "displayName": "Marc Links Suggestions - retrieve links suggestions for marc record",
          "description": "Retrieve instance-authority links suggestions"
        },
                {
          "permissionName": "instance-authority-links.instances.all",
          "displayName": "Entities Links - all instance-authority links permissions",
          "description": "Entire set of permissions needed to use instance-links operations",
          "subPermissions":           [
            "instance-authority-links.instances.collection.get",
            "instance-authority-links.instances.collection.put",
            "instance-authority-links.authorities.bulk.post",
            "instance-authority.linking-rules.collection.get",
            "instance-authority.linking-rules.item.get",
            "instance-authority.linking-rules.item.patch",
            "instance-authority-links.authority-statistics.collection.get",
            "instance-authority-links.instance-statistics.collection.get",
            "instance-authority-links.suggestions.post"
          ]
        },
                {
          "permissionName": "inventory-storage.authorities.collection.get",
          "displayName": "inventory storage - get authority collection",
          "description": "get authority collection from the storage"
        },
                {
          "permissionName": "inventory-storage.authorities.item.get",
          "displayName": "inventory storage - get individual authority record",
          "description": "get individual authority record from the storage"
        },
                {
          "permissionName": "inventory-storage.authorities.item.post",
          "displayName": "inventory storage - create individual authority record",
          "description": "create individual authority record in the storage"
        },
                {
          "permissionName": "inventory-storage.authorities.bulk.post",
          "displayName": "inventory storage - create authority records in bulk",
          "description": "create authority records in bulk"
        },
                {
          "permissionName": "inventory-storage.authorities.item.put",
          "displayName": "inventory storage - modify authority record",
          "description": "modify authority record in the storage"
        },
                {
          "permissionName": "inventory-storage.authorities.item.delete",
          "displayName": "inventory storage - delete individual authority record",
          "description": "delete individual authority record from the storage"
        },
                {
          "permissionName": "authority-storage.authority.reindex.item.delete",
          "displayName": "inventory storage - cancel reindex job",
          "description": "cancel a running reindexing job"
        },
                {
          "permissionName": "authority-storage.authority.reindex.item.get",
          "displayName": "inventory storage - get reindex job by id",
          "description": "get reindex job by id"
        },
                {
          "permissionName": "authority-storage.authority.reindex.post",
          "displayName": "inventory storage - submit reindex authority job",
          "description": "submit reindex authority job"
        },
                {
          "permissionName": "authority-storage.authority.reindex.collection.get",
          "displayName": "inventory storage - get reindex authority jobs",
          "description": "get reindex authority jobs"
        },
                {
          "permissionName": "inventory-storage.authorities.all",
          "displayName": "inventory storage module - all authorities permissions",
          "description": "Entire set of permissions needed to use authorities in the inventory storage module",
          "subPermissions":           [
            "inventory-storage.authorities.collection.get",
            "inventory-storage.authorities.item.get",
            "inventory-storage.authorities.item.post",
            "inventory-storage.authorities.bulk.post",
            "inventory-storage.authorities.item.put",
            "inventory-storage.authorities.item.delete",
            "authority-storage.authority.reindex.post",
            "authority-storage.authority.reindex.item.get",
            "authority-storage.authority.reindex.item.delete",
            "authority-storage.authority.reindex.collection.get"
          ]
        },
                {
          "permissionName": "inventory-storage.authority-note-types.collection.get",
          "displayName": "inventory storage - get authority-note-type collection",
          "description": "get authority-note-type collection from storage"
        },
                {
          "permissionName": "inventory-storage.authority-note-types.item.get",
          "displayName": "inventory storage - get individual authority-note-type",
          "description": "get individual authority-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.authority-note-types.item.post",
          "displayName": "inventory storage - create individual authority-note-type",
          "description": "create individual authority-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.authority-note-types.item.put",
          "displayName": "inventory storage - modify authority-note-type",
          "description": "modify authority-note-type in storage"
        },
                {
          "permissionName": "inventory-storage.authority-note-types.item.delete",
          "displayName": "inventory storage - delete individual authority-note-type",
          "description": "delete individual authority-note-type from storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.collection.get",
          "displayName": "inventory storage - get authority-source-file collection",
          "description": "get authority-source-file collection from storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.item.get",
          "displayName": "inventory storage - get individual authority-source-file",
          "description": "get individual authority-source-file from storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.item.post",
          "displayName": "inventory storage - create individual authority-source-file",
          "description": "create individual authority-source-file in storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.item.patch",
          "displayName": "inventory storage - patch authority-source-file",
          "description": "patch authority-source-file in storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.item.delete",
          "displayName": "inventory storage - delete individual authority-source-file",
          "description": "delete individual authority-source-file from storage"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.hrid.post",
          "displayName": "inventory storage - get next HRID for authority-source-file",
          "description": "get next HRID for authority-source-file"
        },
                {
          "permissionName": "inventory-storage.authority-source-files.all",
          "displayName": "all authority source files permissions",
          "description": "Entire set of permissions needed to use authority source files",
          "subPermissions":           [
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "inventory-storage.authority-source-files.item.post",
            "inventory-storage.authority-source-files.item.patch",
            "inventory-storage.authority-source-files.item.delete",
            "inventory-storage.authority-source-files.hrid.post"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "inventory-storage.instances.item.get",
          "inventory-storage.instances.item.put",
          "mapping-metadata.type.item.get",
          "mapping-rules.get",
          "source-storage.source-records.item.get",
          "users.collection.get",
          "user-tenants.collection.get",
          "source-storage.parsed-records.fetch.collection.post"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-entities-links:4.0.2",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
                    {
            "name": "ENV",
            "value": "folio",
            "description": "The logical name of the deployment, must be unique across all environments using the same shared Kafka/Elasticsearch clusters, `a-z (any case)`, `0-9`, `-`, `_` symbols only allowed"
          },
                    {
            "name": "DB_HOST",
            "value": "localhost",
            "description": "Postgres hostname"
          },
                    {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin",
            "description": "Postgres username"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin",
            "description": "Postgres username password"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "10",
            "description": "This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections"
          },
                    {
            "name": "DB_MINIMUM_IDLE",
            "value": "10",
            "description": "This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool"
          },
                    {
            "name": "DB_CONNECTION_TIMEOUT",
            "value": "30000",
            "description": "This property controls the maximum number of milliseconds that a client will wait for a connection from the pool"
          },
                    {
            "name": "DB_IDLE_TIMEOUT",
            "value": "600000",
            "description": "This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when `DB_MINIMUM_IDLE` is defined to be less than `DB_MAXPOOLSIZE`"
          },
                    {
            "name": "DB_KEEPALIVE_TIME",
            "value": "0",
            "description": "This property controls how frequently HikariCP will attempt to keep a connection alive, in order to prevent it from being timed out by the database or network infrastructure (0 - disabled)"
          },
                    {
            "name": "DB_MAX_LIFETIME",
            "value": "1800000",
            "description": "This property controls the maximum lifetime of a connection in the pool"
          },
                    {
            "name": "DB_VALIDATION_TIMEOUT",
            "value": "5000",
            "description": "This property controls the maximum amount of time that a connection will be tested for aliveness. This value must be less than the `DB_CONNECTION_TIMEOUT`"
          },
                    {
            "name": "DB_INITIALIZATION_FAIL_TIMEOUT",
            "value": "30000",
            "description": "This property controls whether the pool will \"fail fast\" if the pool cannot be seeded with an initial connection successfully"
          },
                    {
            "name": "DB_LEAK_DETECTION_THRESHOLD",
            "value": "30000",
            "description": "This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak (0 - disabled)"
          },
                    {
            "name": "OKAPI_URL",
            "value": "okapi",
            "description": "Okapi URL"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
                    {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          },
                    {
            "name": "KAFKA_CONSUMER_MAX_POLL_RECORDS",
            "value": "50",
            "description": "Maximum number of records returned in a single call to poll()."
          },
                    {
            "name": "KAFKA_AUTHORITY_SOURCE_FILE_TOPIC_PARTITIONS",
            "value": "1",
            "description": "Amount of partitions for `authority-authority-source-file` topic."
          },
                    {
            "name": "KAFKA_AUTHORITY_SOURCE_FILE_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `authority-authority-source-file` topic."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_PARTITIONS",
            "value": "10",
            "description": "Amount of partitions for `links.instance-authority` topic."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `links.instance-authority` topic."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_PARTITIONS",
            "value": "10",
            "description": "Amount of partitions for `links.instance-authority-stats` topic."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `links.instance-authority-stats` topic."
          },
                    {
            "name": "KAFKA_AUTHORITIES_CONSUMER_CONCURRENCY",
            "value": "1",
            "description": "Number of kafka concurrent threads for `inventory.authority` message consuming."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_CONSUMER_CONCURRENCY",
            "value": "1",
            "description": "Number of kafka concurrent threads for `links.instance-authority-stats` message consuming."
          },
                    {
            "name": "KAFKA_INSTANCE_AUTHORITY_CHANGE_PARTITIONS",
            "value": "100",
            "description": "Number of instance-authority links `links.instance-authority` event contains while processing authority link source change."
          },
                    {
            "name": "INSTANCE_STORAGE_QUERY_BATCH_SIZE",
            "value": "50",
            "description": "Number of instances to retrieve from inventory storage per one request (Max 90 - based on maximum URI length)"
          },
                    {
            "name": "AUTHORITY_ARCHIVES_EXPIRATION_PERIOD",
            "value": "7",
            "description": "The retention period in days for keeping the deleted authorities in authority_archive DB table"
          },
                    {
            "name": "S3_URL",
            "value": "http://localhost:9000/",
            "description": "S3 compatible service url"
          },
                    {
            "name": "S3_REGION",
            "value": "",
            "description": "S3 compatible service region"
          },
                    {
            "name": "S3_BUCKET",
            "value": "marc-migrations",
            "description": "S3 compatible service bucket"
          },
                    {
            "name": "S3_ACCESS_KEY_ID",
            "value": "",
            "description": "S3 compatible service access key"
          },
                    {
            "name": "S3_SECRET_ACCESS_KEY",
            "value": "",
            "description": "S3 compatible service secret key"
          },
                    {
            "name": "S3_IS_AWS",
            "value": "true",
            "description": "Specify if AWS S3 is used as files storage"
          },
                    {
            "name": "S3_RETRY_COUNT",
            "value": "3",
            "description": "Specify number of retries if S3 client return any kind of error"
          },
                    {
            "name": "S3_RETRY_DELAY_MS",
            "value": "500",
            "description": "Specify millisecond delay between retries if S3 client return any kind of error"
          }
        ]
      }
    },
        {
      "id": "mod-source-record-manager-3.10.2",
      "name": "Source Record Manager Module",
      "requires":       [
                {
          "id": "instance-date-types",
          "version": "1.0"
        },
                {
          "id": "subject-sources",
          "version": "1.0"
        },
                {
          "id": "subject-types",
          "version": "1.0"
        },
                {
          "id": "source-storage-snapshots",
          "version": "2.1"
        },
                {
          "id": "source-storage-records",
          "version": "3.3"
        },
                {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
                {
          "id": "classification-types",
          "version": "1.2"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "instance-formats",
          "version": "2.0"
        },
                {
          "id": "contributor-name-types",
          "version": "1.2"
        },
                {
          "id": "contributor-types",
          "version": "2.0"
        },
                {
          "id": "instance-note-types",
          "version": "1.0"
        },
                {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2"
        },
                {
          "id": "alternative-title-types",
          "version": "1.0"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.5"
        },
                {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
                {
          "id": "source-storage-batch",
          "version": "1.3"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "holdings-types",
          "version": "1.0"
        },
                {
          "id": "holdings-note-types",
          "version": "1.0"
        },
                {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
                {
          "id": "instance-statuses",
          "version": "1.0"
        },
                {
          "id": "item-damaged-statuses",
          "version": "1.0"
        },
                {
          "id": "item-note-types",
          "version": "1.0"
        },
                {
          "id": "ill-policies",
          "version": "1.0"
        },
                {
          "id": "loan-types",
          "version": "2.2"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
                {
          "id": "statistical-codes",
          "version": "1.0"
        },
                {
          "id": "statistical-code-types",
          "version": "1.0"
        },
                {
          "id": "field-protection-settings",
          "version": "1.2"
        }
      ],
      "provides":       [
                {
          "id": "source-manager-job-executions",
          "version": "3.4",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobExecutions",
              "permissionsRequired": ["metadata-provider.jobExecutions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/journalRecords/{jobExecutionId}",
              "permissionsRequired": ["metadata-provider.journalRecords.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobExecutions/jobProfiles",
              "permissionsRequired": ["metadata-provider.jobExecutions.jobProfiles.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/change-manager/jobExecutions",
              "permissionsRequired": ["change-manager.jobexecutions.post"],
              "modulePermissions":               [
                "source-storage.snapshots.post",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/change-manager/jobExecutions",
              "permissionsRequired": ["change-manager.jobexecutions.delete"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/change-manager/jobExecutions/{id}",
              "permissionsRequired": ["change-manager.jobExecutions.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/change-manager/jobExecutions/{id}",
              "permissionsRequired": ["change-manager.jobExecutions.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/change-manager/jobExecutions/{id}/children",
              "permissionsRequired": ["change-manager.jobExecutions.children.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/change-manager/jobExecutions/{id}/status",
              "permissionsRequired": ["change-manager.jobExecutions.status.item.put"],
              "modulePermissions": ["source-storage.snapshots.put"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/change-manager/jobExecutions/{id}/jobProfile",
              "permissionsRequired": ["change-manager.jobExecutions.jobProfile.item.put"],
              "modulePermissions":               [
                "converter-storage.jobprofilesnapshots.post",
                "converter-storage.jobprofile.item.get"
              ]
            }
          ]
        },
                {
          "id": "source-manager-records",
          "version": "2.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/change-manager/jobExecutions/{id}/records",
              "permissionsRequired": ["change-manager.records.post"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.delete",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "mapping-metadata.item.get",
                "orders.po-lines.collection.get",
                "source-storage.records.collection.get",
                "source-storage.records.item.get",
                "source-storage.snapshots.item.get",
                "source-storage.snapshots.collection.get",
                "source-storage.snapshots.post",
                "source-storage.snapshots.put",
                "source-storage.verified.records",
                "users.collection.get",
                "orders-storage.order-invoice-relationships.item.post",
                "finance.exchange-rate.item.get",
                "finance.expense-classes.collection.get",
                "finance.funds.budget.item.get",
                "finance.funds.item.get",
                "finance.fiscal-years.item.get",
                "finance.ledgers.collection.get",
                "finance.transactions.batch.execute",
                "finance.transactions.collection.get",
                "finance-storage.budgets.collection.get",
                "finance-storage.budget-expense-classes.collection.get",
                "finance-storage.fiscal-years.item.get",
                "modperms.orders.item.post",
                "modperms.orders.item.put",
                "orders-storage.titles.item.get",
                "orders-storage.purchase-orders.item.get",
                "orders-storage.po-line-number.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.po-lines.item.post",
                "orders-storage.alerts.item.post",
                "orders-storage.reporting-codes.item.post",
                "orders-storage.configuration.prefixes.collection.get",
                "orders-storage.configuration.suffixes.collection.get",
                "acquisitions-units-storage.units.collection.get",
                "acquisitions-units-storage.memberships.collection.get",
                "isbn-utils.convert-to-13.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "user-tenants.collection.get",
                "source-storage.records.matching.collection.post",
                "source-storage.records.formatted.item.get",
                "source-storage.records.generation.item.put",
                "source-storage.records.post",
                "source-storage.records.put"
              ],
              "permissionsDesired":               [
                "invoices.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.manage",
                "orders.item.approve",
                "orders.item.reopen",
                "orders.item.unopen"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/change-manager/jobExecutions/{id}/records",
              "permissionsRequired": ["change-manager.records.delete"],
              "modulePermissions":               [
                "source-storage.snapshots.put",
                "source-storage.snapshots.delete"
              ]
            }
          ]
        },
                {
          "id": "source-manager-parsed-records",
          "version": "3.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/change-manager/parsedRecords",
              "permissionsRequired": ["change-manager.parsedrecords.get"],
              "modulePermissions": ["source-storage.source-records.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/change-manager/parsedRecords/{id}",
              "permissionsRequired": ["change-manager.parsedrecords.put"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.authorities.item.delete",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "mapping-metadata.item.get",
                "mapping-metadata.type.item.get",
                "source-storage.snapshots.put",
                "source-storage.verified.records",
                "users.collection.get",
                "orders.po-lines.collection.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "source-storage.records.post",
                "source-storage.records.put"
              ]
            }
          ]
        },
                {
          "id": "metadata-provider-job-execution-logs",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobLogEntries/{jobExecutionId}",
              "permissionsRequired": ["metadata-provider.jobLogEntries.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobLogEntries/{jobExecutionId}/records/{recordId}",
              "permissionsRequired": ["metadata-provider.jobLogEntries.records.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobSummary/{jobExecutionId}",
              "permissionsRequired": ["metadata-provider.jobSummary.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/jobExecutions/users",
              "permissionsRequired": ["metadata-provider.jobExecutions.users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/metadata-provider/incomingRecords/{recordId}",
              "permissionsRequired": ["metadata-provider.incomingrecords.get"]
            }
          ]
        },
                {
          "id": "mapping-rules-provider",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/mapping-rules/{recordType}",
              "permissionsRequired": ["mapping-rules.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/mapping-rules/{recordType}",
              "permissionsRequired": ["mapping-rules.update"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/mapping-rules/{recordType}/restore",
              "permissionsRequired": ["mapping-rules.restore"]
            }
          ]
        },
                {
          "id": "mapping-metadata-provider",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/mapping-metadata/{jobExecutionId}",
              "permissionsRequired": ["mapping-metadata.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/mapping-metadata/type/{recordType}",
              "permissionsRequired": ["mapping-metadata.type.item.get"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.collection.get",
                "instance-authority.linking-rules.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get"
              ]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas",
            "permissionsRequired": []
          }]
        }
      ],
      "optional":       [
                {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        },
                {
          "id": "authority-note-types",
          "version": "1.0"
        },
                {
          "id": "authority-source-files",
          "version": "2.2"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "metadata-provider.jobExecutions.collection.get",
          "displayName": "Metadata Provider - get jobExecutions",
          "description": "Get JobExecutions",
          "replaces": ["metadata-provider.jobexecutions.get"]
        },
                {
          "permissionName": "metadata-provider.jobExecutions.users.collection.get",
          "displayName": "Metadata Provider - get unique users for job JobExecutions",
          "description": "Get Users for JobExecutions",
          "replaces": ["metadata-provider.jobexecutions.get"]
        },
                {
          "permissionName": "metadata-provider.jobExecutions.jobProfiles.collection.get",
          "displayName": "Metadata Provider - get JobProfiles for JobExecutions",
          "description": "Get JobProfiles for JobExecutions",
          "replaces": ["metadata-provider.jobexecutions.get"]
        },
                {
          "permissionName": "metadata-provider.jobLogEntries.collection.get",
          "displayName": "Metadata Provider - get journal records",
          "description": "Get JournalRecordCollection",
          "replaces": ["metadata-provider.logs.get"]
        },
                {
          "permissionName": "metadata-provider.jobLogEntries.records.item.get",
          "displayName": "Metadata Provider - get record processing logs",
          "description": "Get JobExecutionLogDto",
          "replaces": ["metadata-provider.logs.get"]
        },
                {
          "permissionName": "metadata-provider.journalRecords.collection.get",
          "displayName": "Metadata Provider - get jobExecution logs",
          "description": "Get RecordProcessingLogDto",
          "replaces": ["metadata-provider.logs.get"]
        },
                {
          "permissionName": "metadata-provider.jobSummary.item.get",
          "displayName": "Metadata Provider - get summary result",
          "description": "Get JobExecutionSummaryDto",
          "replaces": ["metadata-provider.logs.get"]
        },
                {
          "permissionName": "metadata-provider.incomingrecords.get",
          "displayName": "Metadata Provider - get incoming record",
          "description": "Get IncomingRecord"
        },
                {
          "permissionName": "change-manager.jobexecutions.post",
          "displayName": "Change Manager - create jobExecutions",
          "description": "Post JobExecution"
        },
                {
          "permissionName": "change-manager.jobexecutions.delete",
          "displayName": "Change Manager - delete jobExecutions",
          "description": "Batch Delete JobExecutions"
        },
                {
          "permissionName": "change-manager.jobExecutions.item.put",
          "displayName": "Change Manager - update jobExecution",
          "description": "Update JobExecution",
          "replaces": ["change-manager.jobexecutions.put"]
        },
                {
          "permissionName": "change-manager.jobExecutions.status.item.put",
          "displayName": "Change Manager - update jobExecutions status",
          "description": "Update JobExecution Status",
          "replaces": ["change-manager.jobexecutions.put"]
        },
                {
          "permissionName": "change-manager.jobExecutions.jobProfile.item.put",
          "displayName": "Change Manager - set jobProfile for jobExecution",
          "description": "Set JobProfile for JobExecution",
          "replaces": ["change-manager.jobexecutions.put"]
        },
                {
          "permissionName": "change-manager.jobExecutions.item.get",
          "displayName": "Change Manager - get jobExecutions by id",
          "description": "Get JobExecution by id",
          "replaces": ["change-manager.jobexecutions.get"]
        },
                {
          "permissionName": "change-manager.jobExecutions.children.collection.get",
          "displayName": "Change Manager - get children JobExecutions by parent id",
          "description": "Get children JobExecutions by parent id",
          "replaces": ["change-manager.jobexecutions.get"]
        },
                {
          "permissionName": "change-manager.records.post",
          "displayName": "Change Manager - post chunk of raw records",
          "description": "Post chunk of raw records"
        },
                {
          "permissionName": "change-manager.records.delete",
          "displayName": "Change Manager - delete jobExecution and all associated records from SRS",
          "description": "Delete JobExecution and all associated records from SRS"
        },
                {
          "permissionName": "change-manager.parsedrecords.get",
          "displayName": "Change Manager - get parsed records by externalId",
          "description": "Get parsed record"
        },
                {
          "permissionName": "change-manager.parsedrecords.put",
          "displayName": "Change Manager - update parsed record by id",
          "description": "Update parsed record"
        },
                {
          "permissionName": "mapping-rules.get",
          "displayName": "Mapping Rules provider - get default rules by tenant id",
          "description": "Get mapping rules for tenant"
        },
                {
          "permissionName": "mapping-rules.update",
          "displayName": "Mapping Rules provider - update default rules by tenant id",
          "description": "Update mapping rules for tenant"
        },
                {
          "permissionName": "mapping-rules.restore",
          "displayName": "Mapping Rules provider - restore default rules by tenant id",
          "description": "Restore existing mapping rules to default for tenant"
        },
                {
          "permissionName": "mapping-metadata.item.get",
          "displayName": "Mapping metadata provider - get mapping metadata",
          "description": "Get mapping metadata",
          "replaces": ["mapping-metadata.get"]
        },
                {
          "permissionName": "mapping-metadata.type.item.get",
          "displayName": "Mapping metadata provider - get mapping metadata type",
          "description": "Get mapping metadata type",
          "replaces": ["mapping-metadata.get"]
        },
                {
          "permissionName": "source-records-manager.all",
          "displayName": "Source Record Manager - all permissions",
          "description": "Entire set of permissions needed to manage jobExecutions",
          "subPermissions":           [
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.incomingrecords.get",
            "change-manager.jobexecutions.post",
            "change-manager.jobExecutions.jobProfile.item.put",
            "change-manager.jobExecutions.status.item.put",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "change-manager.jobExecutions.item.put",
            "change-manager.records.post",
            "change-manager.records.delete",
            "change-manager.parsedrecords.get",
            "change-manager.parsedrecords.put",
            "mapping-rules.get",
            "mapping-rules.update",
            "mapping-rules.restore",
            "mapping-metadata.item.get",
            "mapping-metadata.type.item.get"
          ],
          "visible": false
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "source-storage.snapshots.put",
          "users.collection.get",
          "inventory-storage.identifier-types.collection.get",
          "inventory-storage.classification-types.collection.get",
          "inventory-storage.instance-types.collection.get",
          "inventory-storage.electronic-access-relationships.collection.get",
          "inventory-storage.instance-formats.collection.get",
          "inventory-storage.contributor-types.collection.get",
          "inventory-storage.contributor-name-types.collection.get",
          "inventory-storage.instance-note-types.collection.get",
          "inventory-storage.alternative-title-types.collection.get",
          "inventory-storage.modes-of-issuance.collection.get",
          "inventory-storage.item-damaged-statuses.collection.get",
          "inventory-storage.instance-statuses.collection.get",
          "inventory-storage.nature-of-content-terms.collection.get",
          "inventory-storage.instance-relationship-types.collection.get",
          "inventory-storage.holdings-types.collection.get",
          "inventory-storage.holdings-note-types.collection.get",
          "inventory-storage.holdings-sources.collection.get",
          "inventory-storage.ill-policies.collection.get",
          "inventory-storage.call-number-types.collection.get",
          "inventory-storage.statistical-codes.collection.get",
          "inventory-storage.statistical-code-types.collection.get",
          "inventory-storage.item-note-types.collection.get",
          "inventory-storage.authority-note-types.collection.get",
          "inventory-storage.authority-source-files.collection.get",
          "inventory-storage.material-types.item.get",
          "inventory-storage.material-types.collection.get",
          "inventory-storage.loan-types.item.get",
          "inventory-storage.loan-types.collection.get",
          "inventory-storage.locations.item.get",
          "inventory-storage.locations.collection.get",
          "inventory-storage.subject-types.collection.get",
          "inventory-storage.subject-sources.collection.get",
          "inventory-storage.instance-date-types.collection.get",
          "converter-storage.field-protection-settings.collection.get",
          "configuration.entries.collection.get",
          "instance-authority.linking-rules.collection.get",
          "source-storage.snapshots.post"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-source-record-manager:3.10.2",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0  -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "15"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
                    {
            "name": "DB_RECONNECTINTERVAL",
            "value": "1000"
          }
        ]
      }
    },
        {
      "id": "mod-di-converter-storage-2.4.1",
      "replaces": ["mod-data-import-converter-storage"],
      "name": "Data Import Converter Storage",
      "requires": [      {
        "id": "users",
        "version": "16.3"
      }],
      "provides":       [
                {
          "id": "data-import-converter-storage",
          "version": "1.5",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/jobProfiles",
              "permissionsRequired": ["converter-storage.jobprofile.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/jobProfiles",
              "permissionsRequired": ["converter-storage.jobprofile.post"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": ["converter-storage.jobprofile.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": ["converter-storage.jobprofile.put"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": ["converter-storage.jobprofile.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/matchProfiles",
              "permissionsRequired": ["converter-storage.matchprofile.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/matchProfiles",
              "permissionsRequired": ["converter-storage.matchprofile.post"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": ["converter-storage.matchprofile.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": ["converter-storage.matchprofile.put"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": ["converter-storage.matchprofile.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/actionProfiles",
              "permissionsRequired": ["converter-storage.actionprofile.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/actionProfiles",
              "permissionsRequired": ["converter-storage.actionprofile.post"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": ["converter-storage.actionprofile.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": ["converter-storage.actionprofile.put"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": ["converter-storage.actionprofile.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/mappingProfiles",
              "permissionsRequired": ["converter-storage.mappingprofile.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/mappingProfiles",
              "permissionsRequired": ["converter-storage.mappingprofile.post"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": ["converter-storage.mappingprofile.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": ["converter-storage.mappingprofile.put"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": ["converter-storage.mappingprofile.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/profileAssociations",
              "permissionsRequired": ["converter-storage.profileassociations.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/profileAssociations",
              "permissionsRequired": ["converter-storage.profileassociation.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": ["converter-storage.profileassociations.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": ["converter-storage.profileassociation.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": ["converter-storage.profileassociation.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/profileAssociations/{masterId}/details",
              "permissionsRequired": ["converter-storage.profileassociations.details.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/profileAssociations/{detailId}/masters",
              "permissionsRequired": ["converter-storage.profileassociations.masters.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/jobProfileSnapshots/{id}",
              "permissionsRequired": ["converter-storage.jobprofilesnapshots.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/jobProfileSnapshots/{id}",
              "permissionsRequired": ["converter-storage.jobprofilesnapshots.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/entityTypes",
              "permissionsRequired": ["converter-storage.entitytypes.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import-profiles/profileSnapshots/{profileId}",
              "permissionsRequired": ["converter-storage.profileSnapshots.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import-profiles/profileSnapshots",
              "permissionsRequired": ["converter-storage.profileSnapshots.post"]
            }
          ]
        },
                {
          "id": "converter-storage-forms-configs",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/converter-storage/forms/configs",
              "permissionsRequired": ["converter-storage.forms-configs.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/converter-storage/forms/configs",
              "permissionsRequired": ["converter-storage.forms-configs.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": ["converter-storage.forms-configs.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": ["converter-storage.forms-configs.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": ["converter-storage.forms-configs.delete"]
            }
          ]
        },
                {
          "id": "field-protection-settings",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/field-protection-settings/marc",
              "permissionsRequired": ["converter-storage.field-protection-settings.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/field-protection-settings/marc",
              "permissionsRequired": ["converter-storage.field-protection-settings.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": ["converter-storage.field-protection-settings.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": ["converter-storage.field-protection-settings.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": ["converter-storage.field-protection-settings.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "converter-storage.jobprofile.item.get",
          "displayName": "Data Import Converter Storage - get Job Profile",
          "description": "Get Job Profile",
          "replaces": ["converter-storage.jobprofile.get"]
        },
                {
          "permissionName": "converter-storage.jobprofile.collection.get",
          "displayName": "Data Import Converter Storage - get Job Profiles",
          "description": "Get Job Profiles",
          "replaces": ["converter-storage.jobprofile.get"]
        },
                {
          "permissionName": "converter-storage.jobprofile.post",
          "displayName": "Data Import Converter Storage - create Job Profile",
          "description": "Post Job Profile"
        },
                {
          "permissionName": "converter-storage.jobprofile.put",
          "displayName": "Data Import Converter Storage - update Job Profile",
          "description": "Put Job Profile"
        },
                {
          "permissionName": "converter-storage.jobprofile.delete",
          "displayName": "Data Import Converter Storage - delete Job Profile",
          "description": "Delete Job Profile"
        },
                {
          "permissionName": "converter-storage.matchprofile.item.get",
          "displayName": "Data Import Converter Storage - get Match Profile",
          "description": "Get Match Profile",
          "replaces": ["converter-storage.matchprofile.get"]
        },
                {
          "permissionName": "converter-storage.matchprofile.collection.get",
          "displayName": "Data Import Converter Storage - get Match Profiles",
          "description": "Get Match Profiles",
          "replaces": ["converter-storage.matchprofile.get"]
        },
                {
          "permissionName": "converter-storage.matchprofile.post",
          "displayName": "Data Import Converter Storage - create Match Profile",
          "description": "Post Match Profile"
        },
                {
          "permissionName": "converter-storage.matchprofile.put",
          "displayName": "Data Import Converter Storage - update Match Profile",
          "description": "Put Match Profile"
        },
                {
          "permissionName": "converter-storage.matchprofile.delete",
          "displayName": "Data Import Converter Storage - delete Match Profile",
          "description": "Delete Match Profile"
        },
                {
          "permissionName": "converter-storage.actionprofile.item.get",
          "displayName": "Data Import Converter Storage - get Action Profile",
          "description": "Get Action Profile",
          "replaces": ["converter-storage.actionprofile.get"]
        },
                {
          "permissionName": "converter-storage.actionprofile.collection.get",
          "displayName": "Data Import Converter Storage - get Action Profiles",
          "description": "Get Action Profiles",
          "replaces": ["converter-storage.actionprofile.get"]
        },
                {
          "permissionName": "converter-storage.actionprofile.post",
          "displayName": "Data Import Converter Storage - create Action Profile",
          "description": "Post Action Profile"
        },
                {
          "permissionName": "converter-storage.actionprofile.put",
          "displayName": "Data Import Converter Storage - update Action Profile",
          "description": "Put Action Profile"
        },
                {
          "permissionName": "converter-storage.actionprofile.delete",
          "displayName": "Data Import Converter Storage - delete Action Profile",
          "description": "Delete Action Profile"
        },
                {
          "permissionName": "converter-storage.mappingprofile.item.get",
          "displayName": "Data Import Converter Storage - get Mapping Profile(",
          "description": "Get Mapping Profile",
          "replaces": ["converter-storage.mappingprofile.get"]
        },
                {
          "permissionName": "converter-storage.mappingprofile.collection.get",
          "displayName": "Data Import Converter Storage - get Mapping Profiles",
          "description": "Get Mapping Profiles",
          "replaces": ["converter-storage.mappingprofile.get"]
        },
                {
          "permissionName": "converter-storage.mappingprofile.post",
          "displayName": "Data Import Converter Storage - create Mapping Profile",
          "description": "Post Mapping Profile"
        },
                {
          "permissionName": "converter-storage.mappingprofile.put",
          "displayName": "Data Import Converter Storage - update Mapping Profile",
          "description": "Put Mapping Profile"
        },
                {
          "permissionName": "converter-storage.mappingprofile.delete",
          "displayName": "Data Import Converter Storage - delete Mapping Profile",
          "description": "Delete Mapping Profile"
        },
                {
          "permissionName": "converter-storage.entitytypes.get",
          "displayName": "Data Import Converter Storage - get Entity types",
          "description": "Get collection of entity types"
        },
                {
          "permissionName": "converter-storage.profileassociation.post",
          "displayName": "Data Import Converter Storage - create Profile Association",
          "description": "Post Profile Association"
        },
                {
          "permissionName": "converter-storage.profileassociations.item.get",
          "displayName": "Data Import Converter Storage - get Profile Association",
          "description": "Get Profile Association",
          "replaces": ["converter-storage.profileassociation.get"]
        },
                {
          "permissionName": "converter-storage.profileassociations.collection.get",
          "displayName": "Data Import Converter Storage - get Profile Associations",
          "description": "Get Profile Associations",
          "replaces": ["converter-storage.profileassociation.get"]
        },
                {
          "permissionName": "converter-storage.profileassociations.details.item.get",
          "displayName": "Data Import Converter Storage - get Details Profiles by Master Profile id",
          "description": "Get Details Profile",
          "replaces": ["converter-storage.profileassociation.get"]
        },
                {
          "permissionName": "converter-storage.profileassociations.masters.item.get",
          "displayName": "Data Import Converter Storage - get Masters Profiles by Detail Profile id",
          "description": "Get Masters Profile",
          "replaces": ["converter-storage.profileassociation.get"]
        },
                {
          "permissionName": "converter-storage.profileassociation.put",
          "displayName": "Data Import Converter Storage - update Profile Association",
          "description": "Put Profile Association"
        },
                {
          "permissionName": "converter-storage.profileassociation.delete",
          "displayName": "Data Import Converter Storage - delete Profile Association",
          "description": "Delete Profile Association"
        },
                {
          "permissionName": "converter-storage.jobprofilesnapshots.get",
          "displayName": "Data Import Converter Storage - get Job Profile Snapshot",
          "description": "Get Job Profile Snapshot"
        },
                {
          "permissionName": "converter-storage.jobprofilesnapshots.post",
          "displayName": "Data Import Converter Storage - create Job Profile Snapshot",
          "description": "Post Job Profile Snapshot"
        },
                {
          "permissionName": "converter-storage.profileSnapshots.get",
          "displayName": "Data Import Converter Storage - get Profile Snapshot",
          "description": "Get Profile Snapshot"
        },
                {
          "permissionName": "converter-storage.profileSnapshots.post",
          "displayName": "Data Import Converter Storage - create Profile Snapshot",
          "description": "Post Profile Snapshot"
        },
                {
          "permissionName": "converter-storage.forms-configs.item.get",
          "displayName": "Data Import Converter Storage - get Form Config",
          "description": "Get Form Config",
          "replaces": ["converter-storage.forms-configs.get"]
        },
                {
          "permissionName": "converter-storage.forms-configs.collection.get",
          "displayName": "Data Import Converter Storage - get Form Configs",
          "description": "Get Form Configs",
          "replaces": ["converter-storage.forms-configs.get"]
        },
                {
          "permissionName": "converter-storage.forms-configs.post",
          "displayName": "Data Import Converter Storage - create Form Config",
          "description": "Post Form Config"
        },
                {
          "permissionName": "converter-storage.forms-configs.put",
          "displayName": "Data Import Converter Storage - update Form Config",
          "description": "Put Form Config"
        },
                {
          "permissionName": "converter-storage.forms-configs.delete",
          "displayName": "Data Import Converter Storage - delete Form Config",
          "description": "Delete Form Config"
        },
                {
          "permissionName": "converter-storage.field-protection-settings.item.get",
          "displayName": "Data Import Converter Storage - get field protection settings",
          "description": "Get Field Protection Settings",
          "replaces": ["converter-storage.field-protection-settings.get"]
        },
                {
          "permissionName": "converter-storage.field-protection-settings.collection.get",
          "displayName": "Data Import Converter Storage - get field protection settings collection",
          "description": "Get Field Protection Settings collection",
          "replaces": ["converter-storage.field-protection-settings.get"]
        },
                {
          "permissionName": "converter-storage.field-protection-settings.post",
          "displayName": "Data Import Converter Storage - save field protection setting",
          "description": "Post Field Protection Setting"
        },
                {
          "permissionName": "converter-storage.field-protection-settings.put",
          "displayName": "Data Import Converter Storage - update field protection setting",
          "description": "Put Field Protection Setting"
        },
                {
          "permissionName": "converter-storage.field-protection-settings.delete",
          "displayName": "Data Import Converter Storage - delete field protection setting",
          "description": "Delete Field Protection Setting"
        },
                {
          "permissionName": "converter-storage.all",
          "displayName": "Data Import Converter Storage - all permissions",
          "description": "Entire set of permissions needed to manage Profiles",
          "subPermissions":           [
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofile.post",
            "converter-storage.jobprofile.put",
            "converter-storage.jobprofile.delete",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.matchprofile.post",
            "converter-storage.matchprofile.put",
            "converter-storage.matchprofile.delete",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.actionprofile.post",
            "converter-storage.actionprofile.put",
            "converter-storage.actionprofile.delete",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.mappingprofile.post",
            "converter-storage.mappingprofile.put",
            "converter-storage.mappingprofile.delete",
            "converter-storage.profileassociation.post",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileassociation.put",
            "converter-storage.profileassociation.delete",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.jobprofilesnapshots.post",
            "converter-storage.entitytypes.get",
            "converter-storage.profileSnapshots.get",
            "converter-storage.profileSnapshots.post",
            "converter-storage.forms-configs.item.get",
            "converter-storage.forms-configs.collection.get",
            "converter-storage.forms-configs.post",
            "converter-storage.forms-configs.put",
            "converter-storage.forms-configs.delete",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.field-protection-settings.post",
            "converter-storage.field-protection-settings.put",
            "converter-storage.field-protection-settings.delete"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-di-converter-storage:2.4.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-patron-6.3.1",
      "name": "Patron Services Module",
      "provides": [      {
        "id": "patron",
        "version": "6.3",
        "handlers":         [
                    {
            "methods": ["POST"],
            "pathPattern": "/patron",
            "permissionsRequired": ["patron.item.post"],
            "modulePermissions": ["staging-users.item.post"]
          },
                    {
            "methods": ["PUT"],
            "pathPattern": "/patron/{externalSystemId}",
            "permissionsRequired": ["patron.item.put"],
            "modulePermissions": ["staging-users.item.put"]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/patron/registration-status/{identifier}",
            "permissionsRequired": ["patron.registration-status.item.get"],
            "modulePermissions":             [
              "users.item.get",
              "users.collection.get"
            ]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/patron/account",
            "permissionsRequired": ["patron.account.collection.get"],
            "modulePermissions": ["users.collection.get"]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/patron/account/{accountId}",
            "permissionsRequired": ["patron.account.item.get"],
            "modulePermissions":             [
              "configuration.entries.item.get",
              "configuration.entries.collection.get",
              "users.item.get",
              "circulation.loans.collection.get",
              "circulation.requests.collection.get",
              "accounts.collection.get",
              "inventory.items.item.get",
              "inventory.instances.item.get",
              "inventory.instances.collection.get",
              "feefines.item.get"
            ]
          },
                    {
            "methods": ["PUT"],
            "pathPattern": "/patron/account/by-email/{email}",
            "permissionsRequired": ["patron.account-by-email.item.put"],
            "modulePermissions": ["users.item.put"]
          },
                    {
            "methods": ["POST"],
            "pathPattern": "/patron/account/{accountId}/item/{itemId}/renew",
            "permissionsRequired": ["patron.renew.item.post"],
            "modulePermissions": ["circulation.renew-by-id.post"]
          },
                    {
            "methods": ["POST"],
            "pathPattern": "/patron/account/{accountId}/item/{itemId}/hold",
            "permissionsRequired": ["patron.account.item-hold.item.post"],
            "modulePermissions":             [
              "circulation.requests.item.post",
              "inventory.items.item.get",
              "inventory-storage.holdings.item.get",
              "users.item.get",
              "circulation.rules.request-policy.get",
              "circulation-storage.request-policies.item.get",
              "circulation-bff.ecs-request-external.item.post"
            ]
          },
                    {
            "methods": ["POST"],
            "pathPattern": "/patron/account/{accountId}/instance/{instanceId}/hold",
            "permissionsRequired": ["patron.account.instance-hold.item.post"],
            "modulePermissions":             [
              "circulation.requests.instances.item.post",
              "circulation-bff.ecs-request-external.item.post"
            ]
          },
                    {
            "methods": ["POST"],
            "pathPattern": "/patron/account/{accountId}/hold/{holdId}/cancel",
            "permissionsRequired": ["patron.account.hold-cancel.item.post"],
            "modulePermissions":             [
              "circulation.requests.item.put",
              "circulation.requests.item.get"
            ]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/patron/account/{accountId}/instance/{instanceId}/allowed-service-points",
            "permissionsRequired": ["patron.account.instance-allowed-service-points.item.get"],
            "modulePermissions": ["circulation.requests.allowed-service-points.get"]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/patron/account/{accountId}/item/{itemId}/allowed-service-points",
            "permissionsRequired": ["patron.account.item-allowed-service-points.item.get"],
            "modulePermissions": ["circulation.requests.allowed-service-points.get"]
          }
        ]
      }],
      "requires":       [
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "circulation",
          "version": "14.0"
        },
                {
          "id": "feesfines",
          "version": "14.0 15.0 16.0 17.0 18.0 19.0"
        },
                {
          "id": "inventory",
          "version": "5.2 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "staging-users",
          "version": "1.1"
        },
                {
          "id": "holdings-storage",
          "version": "8.0"
        }
      ],
      "optional":       [
                {
          "id": "tlr-settings",
          "version": "1.0"
        },
                {
          "id": "circulation-settings-storage",
          "version": "1.0"
        },
                {
          "id": "circulation-bff-ecs-request-external",
          "version": "1.1"
        },
                {
          "id": "circulation-bff-requests",
          "version": "1.1"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "patron.item.post",
          "displayName": "staging-users post",
          "description": "Post a staging user records",
          "replaces": ["patron.staging-users.item.post"]
        },
                {
          "permissionName": "patron.item.put",
          "displayName": "staging-users put",
          "description": "Put a staging user records"
        },
                {
          "permissionName": "patron.account.item.get",
          "displayName": "patron - get account details",
          "description": "Get user account details"
        },
                {
          "permissionName": "patron.account.collection.get",
          "displayName": "patron - get account collection details",
          "description": "Get user account collection details"
        },
                {
          "permissionName": "patron.renew.item.post",
          "displayName": "patron - renew a loan",
          "description": "Renew a loan for this patron"
        },
                {
          "permissionName": "patron.account.item-hold.item.post",
          "displayName": "patron - create a hold",
          "description": "Creates a hold on the specified item for this patron",
          "replaces": ["patron.hold.item.post"]
        },
                {
          "permissionName": "patron.account.instance-hold.item.post",
          "displayName": "patron - create an instance level hold",
          "description": "Creates a hold on an item from the specified instance for this patron",
          "replaces": ["patron.hold.instance.item.post"]
        },
                {
          "permissionName": "patron.account.hold-cancel.item.post",
          "displayName": "patron - remove a hold",
          "description": "Removes the specified hold",
          "replaces": ["patron.hold.cancel.item.post"]
        },
                {
          "permissionName": "patron.account.instance-allowed-service-points.item.get",
          "displayName": "patron - get a list of allowed service points for a hold",
          "description": "Get a list of allowed service points for a hold",
          "replaces": ["patron.hold.allowed-service-points.get"]
        },
                {
          "permissionName": "patron.account.item-allowed-service-points.item.get",
          "displayName": "patron - get a list of allowed service points for a hold",
          "description": "Get a list of allowed service points for a hold",
          "replaces": ["patron.hold.allowed-service-points.get"]
        },
                {
          "permissionName": "patron.account-by-email.item.put",
          "displayName": "update account by email",
          "description": "Update account based on emailId"
        },
                {
          "permissionName": "patron.registration-status.item.get",
          "displayName": "Get patron details",
          "description": "Get patron details by emailId or externalSystemId"
        },
                {
          "permissionName": "patron.all",
          "displayName": "patron - all permissions",
          "description": "Entire set of permissions needed to use patron",
          "subPermissions":           [
            "patron.account.item.get",
            "patron.account.item.put",
            "patron.account-by-email.item.put",
            "patron.account.collection.get",
            "patron.account-renew.item.post",
            "patron.account.item-hold.item.post",
            "patron.account.instance-hold.item.post",
            "patron.account.hold-cancel.item.post",
            "patron.account.item-allowed-service-points.item.get",
            "patron.account.instance-allowed-service-points.item.get",
            "patron.registration-status.item.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-patron:6.3.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-data-export-5.2.1",
      "name": "Data Export Module",
      "requires":       [
                {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
                {
          "id": "users",
          "version": "15.3 16.0"
        },
                {
          "id": "instance-storage",
          "version": "7.7 8.0 9.0 10.0 11.0"
        },
                {
          "id": "holdings-storage",
          "version": "4.5 5.0 6.0 7.0 8.0"
        },
                {
          "id": "item-storage",
          "version": "8.9 9.0 10.0"
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "contributor-name-types",
          "version": "1.2"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "instance-formats",
          "version": "2.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
                {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
                {
          "id": "holdings-note-types",
          "version": "1.0"
        },
                {
          "id": "item-note-types",
          "version": "1.0"
        },
                {
          "id": "alternative-title-types",
          "version": "1.0"
        },
                {
          "id": "authority-storage",
          "version": "2.2"
        },
                {
          "id": "loan-types",
          "version": "2.3"
        },
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "source-storage-stream",
          "version": "1.2"
        },
                {
          "id": "resource-ids-streaming",
          "version": "0.3"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "inventory-record-bulk",
          "version": "1.0"
        },
                {
          "id": "search",
          "version": "0.6 1.0"
        },
                {
          "id": "consortium-search",
          "version": "2.1"
        },
                {
          "id": "permissions",
          "version": "5.6"
        }
      ],
      "optional":       [
                {
          "id": "consortia",
          "version": "1.1"
        },
                {
          "id": "permissions-users",
          "version": "1.0"
        },
                {
          "id": "users-keycloak",
          "version": "1.0"
        }
      ],
      "provides":       [
                {
          "id": "data-export",
          "version": "5.3",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/export",
              "permissionsRequired": ["data-export.export.post"],
              "modulePermissions":               [
                "users.item.get",
                "source-storage.stream.marc-record-identifiers.collection.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get",
                "configuration.entries.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "user-tenants.collection.get",
                "search.resources.ids.jobs.post",
                "search.resources.ids.collection.get",
                "search.resources.ids.jobs.get",
                "consortium-search.holdings.collection.get",
                "consortia.user-tenants.collection.get",
                "consortium-search.holdings.item.get",
                "perms.users.get",
                "permissions.users.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/quick-export",
              "permissionsRequired": ["data-export.quick.export.post"],
              "modulePermissions":               [
                "users.item.get",
                "source-storage.sourceRecords.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get",
                "configuration.entries.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "user-tenants.collection.get",
                "consortium-search.holdings.collection.get",
                "consortia.user-tenants.collection.get",
                "consortium-search.holdings.item.get",
                "perms.users.get",
                "permissions.users.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/file-definitions/{fileDefinitionId}",
              "permissionsRequired": ["data-export.file-definitions.item.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/file-definitions",
              "permissionsRequired": ["data-export.file-definitions.item.post"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/file-definitions/{fileDefinitionId}/upload",
              "permissionsRequired": ["data-export.file-definitions.upload.post"],
              "modulePermissions":               [
                "inventory-storage.record-bulk.ids.get",
                "search.instances.ids.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/job-executions",
              "permissionsRequired": ["data-export.job-executions.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-export/job-executions/{id}",
              "permissionsRequired": ["data-export.job-executions.item.delete"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/job-executions/{jobId}/download/{fileId}",
              "permissionsRequired": ["data-export.job-executions.items.download.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/job-profiles",
              "permissionsRequired": ["data-export.job-profiles.item.post"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/job-profiles",
              "permissionsRequired": ["data-export.job-profiles.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": ["data-export.job-profiles.item.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": ["data-export.job-profiles.item.put"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": ["data-export.job-profiles.item.delete"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/mapping-profiles",
              "permissionsRequired": ["data-export.mapping-profiles.item.post"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/mapping-profiles",
              "permissionsRequired": ["data-export.mapping-profiles.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": ["data-export.mapping-profiles.item.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": ["data-export.mapping-profiles.item.put"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": ["data-export.mapping-profiles.item.delete"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/transformation-fields",
              "permissionsRequired": ["data-export.transformation-fields.collection.get"],
              "modulePermissions":               [
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/expire-jobs",
              "permissionsRequired": ["data-export.expire-jobs.post"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/logs",
              "permissionsRequired": ["data-export.logs.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/clean-up-files",
              "permissionsRequired": ["data-export.clean-up-files.post"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/configuration",
              "permissionsRequired": ["data-export.configuration.post"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/export-all",
              "permissionsRequired": ["data-export.export.all"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/related-users",
              "permissionsRequired": ["data-export.related-users.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/export-deleted",
              "permissionsRequired": ["data-export.export-deleted.post"],
              "modulePermissions": ["user-tenants.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/export-authority-deleted",
              "permissionsRequired": ["data-export.export-authority-deleted.post"],
              "modulePermissions":               [
                "inventory-storage.authorities.collection.get",
                "user-tenants.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export/download-record/{recordId}",
              "permissionsRequired": ["data-export.download-record.item.get"],
              "modulePermissions": []
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "okapi.proxy.self.timers.patch"
              ]
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/expire-jobs",
              "modulePermissions": [],
              "unit": "hour",
              "delay": "6"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export/clean-up-files",
              "modulePermissions": [],
              "unit": "hour",
              "delay": "24"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "data-export.export.post",
          "displayName": "Starts export process",
          "description": "Entry point to start export for the given file definition using job profile"
        },
                {
          "permissionName": "data-export.quick.export.post",
          "displayName": "Starts quick export process from inventory",
          "description": "Entry point to start quick export process from inventory"
        },
                {
          "permissionName": "data-export.file-definitions.item.get",
          "displayName": "Data Export - get file definition by id",
          "description": "Entry point to get File Definition by id"
        },
                {
          "permissionName": "data-export.job-executions.collection.get",
          "displayName": "Data Export - get job execution collection by query",
          "description": "Entry point to get Job Executions by query"
        },
                {
          "permissionName": "data-export.job-executions.item.delete",
          "displayName": "Data Export - delete job execution by Id",
          "description": "Permission to delete Job Executions by Id"
        },
                {
          "permissionName": "data-export.file-definitions.upload.post",
          "displayName": "Data Export - upload file",
          "description": "Entry point to upload file"
        },
                {
          "permissionName": "data-export.file-definitions.item.post",
          "displayName": "Data Export - create new file definition",
          "description": "Entry point to post File Definition"
        },
                {
          "permissionName": "data-export.job-executions.items.download.get",
          "displayName": "Data Export - get download link for job and a file",
          "description": "Entry point to get link to download exported files"
        },
                {
          "permissionName": "data-export.job-profiles.item.post",
          "displayName": "Data Export - create new job profile",
          "description": "Entry point to post Job Profile"
        },
                {
          "permissionName": "data-export.job-profiles.collection.get",
          "displayName": "Data Export - get job profiles collection by query",
          "description": "Entry point to get Job Profiles by query"
        },
                {
          "permissionName": "data-export.job-profiles.item.get",
          "displayName": "Data Export - get job profile by id",
          "description": "Entry point to get Job Profiles by id"
        },
                {
          "permissionName": "data-export.job-profiles.item.put",
          "displayName": "Data Export - update existing job profile by id",
          "description": "Entry point to update Job Profile"
        },
                {
          "permissionName": "data-export.job-profiles.item.delete",
          "displayName": "Data Export - delete job profile by id",
          "description": "Entry point to delete Job Profile by id"
        },
                {
          "permissionName": "data-export.mapping-profiles.item.post",
          "displayName": "Data Export - create new mapping profile",
          "description": "Entry point to post Mapping Profile"
        },
                {
          "permissionName": "data-export.mapping-profiles.item.get",
          "displayName": "Data Export - get mapping profile by id",
          "description": "Entry point to get Mapping Profiles by id"
        },
                {
          "permissionName": "data-export.mapping-profiles.item.put",
          "displayName": "Data Export - update existing mapping profile by id",
          "description": "Entry point to update Mapping Profile"
        },
                {
          "permissionName": "data-export.mapping-profiles.item.delete",
          "displayName": "Data Export - delete mapping profile by id",
          "description": "Entry point to delete Mapping Profile by id"
        },
                {
          "permissionName": "data-export.mapping-profiles.collection.get",
          "displayName": "Data Export - create get mapping profiles collection",
          "description": "Entry point to get Mapping Profiles collection"
        },
                {
          "permissionName": "data-export.transformation-fields.collection.get",
          "displayName": "Data Export - get mapping transformation fields collection",
          "description": "Entry point to get mapping transformation fields for the fields"
        },
                {
          "permissionName": "data-export.expire-jobs.post",
          "displayName": "Data Export - call to expire hung jobs",
          "description": "Entry point to stop freezing job executions"
        },
                {
          "permissionName": "data-export.logs.collection.get",
          "displayName": "Data Export - get error logs collection",
          "description": "Entry point to get error logs by job execution id"
        },
                {
          "permissionName": "data-export.clean-up-files.post",
          "displayName": "Data Export - call to clean up file definitions and related files",
          "description": "Entry point to start clean up process of file definitions and related files"
        },
                {
          "permissionName": "data-export.configuration.post",
          "displayName": "Data Export - add or update data export configuration",
          "description": "Entry point to add or update configuration using key/value pair"
        },
                {
          "permissionName": "data-export.export.all",
          "displayName": "Data Export - export all records",
          "description": "Entry point to export all records of the specific type"
        },
                {
          "permissionName": "data-export.related-users.collection.get",
          "displayName": "Data Export - related users",
          "description": "To return only users which executed export"
        },
                {
          "permissionName": "data-export.export-deleted.post",
          "displayName": "Data Export - deleted MARC IDs",
          "description": "To return deleted MARC IDs"
        },
                {
          "permissionName": "data-export.export-authority-deleted.post",
          "displayName": "Data Export - deleted authorities",
          "description": "To return deleted authorities"
        },
                {
          "permissionName": "data-export.download-record.item.get",
          "displayName": "Data Export - download record",
          "description": "Entry point to download single record file in the specified format"
        },
                {
          "permissionName": "data-export.all",
          "displayName": "Data Export - all permissions",
          "description": "Entire set of permissions needed to use the Data Export",
          "subPermissions":           [
            "data-export.export.post",
            "data-export.file-definitions.item.get",
            "data-export.file-definitions.item.post",
            "data-export.file-definitions.upload.post",
            "data-export.job-executions.collection.get",
            "data-export.job-executions.item.delete",
            "data-export.job-executions.items.download.get",
            "data-export.job-profiles.item.post",
            "data-export.job-profiles.collection.get",
            "data-export.job-profiles.item.get",
            "data-export.job-profiles.item.put",
            "data-export.job-profiles.item.delete",
            "data-export.mapping-profiles.item.post",
            "data-export.mapping-profiles.collection.get",
            "data-export.mapping-profiles.item.get",
            "data-export.mapping-profiles.item.put",
            "data-export.mapping-profiles.item.delete",
            "data-export.transformation-fields.collection.get",
            "data-export.expire-jobs.post",
            "data-export.logs.collection.get",
            "data-export.clean-up-files.post",
            "data-export.quick.export.post",
            "data-export.configuration.post",
            "data-export.export.all",
            "data-export.related-users.collection.get",
            "data-export.export-deleted.post",
            "data-export.export-authority-deleted.post",
            "data-export.download-record.item.get",
            "perms.users.get",
            "permissions.users.item.get"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "${artifactId}:${version}",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 542293850,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "10"
          }
        ]
      }
    },
        {
      "id": "mod-data-export-spring-3.5.0",
      "name": "Data Export Spring Module",
      "requires":       [
                {
          "id": "login",
          "version": "7.0"
        },
                {
          "id": "authtoken",
          "version": "2.0"
        },
                {
          "id": "permissions",
          "version": "5.3"
        },
                {
          "id": "users",
          "version": "15.3 16.0"
        },
                {
          "id": "inventory",
          "version": "14.0"
        },
                {
          "id": "circulation-logs",
          "version": "1.2"
        },
                {
          "id": "orders",
          "version": "12.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "finance.expense-classes",
          "version": "3.0"
        },
                {
          "id": "bulk-edit",
          "version": "4.1"
        }
      ],
      "provides":       [
                {
          "id": "data-export-spring",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export-spring/jobs",
              "permissionsRequired": ["data-export.job.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export-spring/jobs/{id}",
              "permissionsRequired": ["data-export.job.item.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export-spring/jobs",
              "permissionsRequired": ["data-export.job.item.post"],
              "modulePermissions":               [
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "circulation-logs.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "configuration.entries.item.delete",
                "data-export.job.collection.get",
                "data-export.config.collection.get",
                "feefineactions.collection.get",
                "finance.expense-classes.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.identifier-types.item.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.service-points.collection.get",
                "organizations-storage.organizations.item.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.purchase-orders.collection.get",
                "orders-storage.pieces.collection.get",
                "orders-storage.titles.item.get",
                "transfers.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export-spring/jobs/{id}/download",
              "permissionsRequired": ["data-export.job.item.download"],
              "modulePermissions": ["refresh-presigned-url.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export-spring/jobs/{id}/resend",
              "permissionsRequired": ["data-export.job.item.resend"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export-spring/configs",
              "permissionsRequired": ["data-export.config.collection.get"],
              "modulePermissions": ["configuration.entries.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": ["data-export.config.item.get"],
              "modulePermissions": ["configuration.entries.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export-spring/configs",
              "permissionsRequired": ["data-export.config.item.post"],
              "modulePermissions": ["configuration.entries.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": ["data-export.config.item.put"],
              "modulePermissions": ["configuration.entries.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": ["data-export.config.item.delete"],
              "modulePermissions": ["configuration.entries.item.delete"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-export-spring/jobs/send",
              "permissionsRequired": ["data-export.job.send.item.execute"],
              "modulePermissions":               [
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "circulation-logs.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "configuration.entries.item.delete",
                "data-export.job.collection.get",
                "data-export.config.collection.get",
                "feefineactions.collection.get",
                "finance.expense-classes.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.identifier-types.item.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.service-points.collection.get",
                "organizations-storage.organizations.item.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.purchase-orders.collection.get",
                "orders-storage.pieces.collection.get",
                "orders-storage.titles.item.get",
                "transfers.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put"
              ]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.item.post",
                "perms.users.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "perms.users.assign.immutable",
                "data-export.job.collection.get",
                "data-export.config.collection.get"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "modulePermissions": []
            }
          ]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas",
            "modulePermissions": []
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "data-export.config.collection.get",
          "displayName": "Get data export configurations",
          "description": "Get data export configurations"
        },
                {
          "permissionName": "data-export.job.item.resend",
          "displayName": "Resend EDIFACT export",
          "description": "Resend EDIFACT export"
        },
                {
          "permissionName": "data-export.config.item.get",
          "displayName": "Get data export configuration by id",
          "description": "Get data export configuration by id"
        },
                {
          "permissionName": "data-export.job.item.download",
          "displayName": "Download exported file by job id",
          "description": "Download exported file by job id"
        },
                {
          "permissionName": "data-export.config.item.post",
          "displayName": "Create a data export configuration",
          "description": "Create a data export configuration"
        },
                {
          "permissionName": "data-export.config.item.put",
          "displayName": "Change a data export configuration",
          "description": "Change a data export configuration"
        },
                {
          "permissionName": "data-export.config.item.delete",
          "displayName": "Delete data export configuration by id",
          "description": "Delete data export configuration by id"
        },
                {
          "permissionName": "data-export.job.item.post",
          "displayName": "Create/update a data export job",
          "description": "Create/update a data export job"
        },
                {
          "permissionName": "data-export.job.item.get",
          "displayName": "get a data export job",
          "description": "Get a data export job"
        },
                {
          "permissionName": "data-export.job.collection.get",
          "displayName": "get data export jobs",
          "description": "Get data export jobs"
        },
                {
          "permissionName": "data-export.job.send.item.execute",
          "displayName": "send job to kafka",
          "description": "Send job to Kafka",
          "replaces": ["data-export.job.item.send"]
        },
                {
          "permissionName": "data-export.config.all",
          "displayName": "data export configurations - all permissions",
          "description": "All permissions for data export configurations",
          "subPermissions":           [
            "data-export.config.collection.get",
            "data-export.config.item.get",
            "data-export.config.item.post",
            "data-export.config.item.put",
            "data-export.config.item.delete"
          ]
        },
                {
          "permissionName": "data-export.job.all",
          "displayName": "data export jobs - all permissions",
          "description": "All permissions for data export jobs",
          "subPermissions":           [
            "data-export.job.item.post",
            "data-export.job.item.get",
            "data-export.job.collection.get",
            "data-export.job.item.download",
            "data-export.job.item.resend",
            "data-export.job.send.item.execute"
          ]
        },
                {
          "permissionName": "data-export.edifact.orders.create",
          "displayName": "Edifact export create permission",
          "description": "Edifact export create permission",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "data-export.job.item.post",
            "finance.expense-classes.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "organizations-storage.organizations.item.get",
            "orders-storage.po-lines.collection.get",
            "orders-storage.purchase-orders.collection.get",
            "orders-storage.pieces.collection.get"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "data-export.job.item.post",
          "data-export.job.send.item.execute",
          "feesfines.accounts.transfer.post",
          "feesfines.accounts-bulk.transfer.post",
          "accounts.collection.get",
          "circulation-logs.collection.get",
          "configuration.entries.collection.get",
          "configuration.entries.item.get",
          "configuration.entries.item.post",
          "configuration.entries.item.put",
          "configuration.entries.item.delete",
          "data-export.job.collection.get",
          "data-export.config.collection.get",
          "feefineactions.collection.get",
          "finance.expense-classes.item.get",
          "inventory-storage.holdings.item.get",
          "inventory-storage.identifier-types.item.get",
          "inventory-storage.locations.item.get",
          "inventory-storage.material-types.item.get",
          "inventory-storage.service-points.collection.get",
          "organizations-storage.organizations.item.get",
          "orders-storage.po-lines.collection.get",
          "orders-storage.purchase-orders.collection.get",
          "orders-storage.pieces.collection.get",
          "orders-storage.titles.item.get",
          "transfers.collection.get",
          "users.collection.get",
          "users.item.post",
          "users.item.put"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-data-export-spring:3.5.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 542293850,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "OKAPI_URL",
            "value": "http://okapi:9130"
          },
                    {
            "name": "ENV",
            "value": "folio"
          }
        ]
      }
    },
        {
      "id": "mod-data-export-worker-3.4.3",
      "name": "Data Export Worker Module",
      "requires":       [
                {
          "id": "users",
          "version": "15.4 16.0"
        },
                {
          "id": "inventory",
          "version": "13.0 14.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "feesfines",
          "version": "18.0 19.1"
        },
                {
          "id": "holdings-storage",
          "version": "7.0 8.0"
        },
                {
          "id": "instance-storage",
          "version": "10.0 11.0"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "erm",
          "version": "7.0"
        },
                {
          "id": "audit",
          "version": "1.1"
        },
                {
          "id": "item-damaged-statuses",
          "version": "1.0"
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.1"
        },
                {
          "id": "instance-authority-links-statistics",
          "version": "2.0"
        },
                {
          "id": "finance-storage.expense-classes",
          "version": "3.0"
        },
                {
          "id": "holdings-note-types",
          "version": "1.0"
        },
                {
          "id": "holdings-sources",
          "version": "1.0"
        },
                {
          "id": "holdings-types",
          "version": "1.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "ill-policies",
          "version": "1.0"
        },
                {
          "id": "item-note-types",
          "version": "1.0"
        },
                {
          "id": "eholdings",
          "version": "4.0"
        },
                {
          "id": "loan-types",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.1"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "notes",
          "version": "4.0"
        },
                {
          "id": "orders-storage.purchase-orders",
          "version": "8.0"
        },
                {
          "id": "orders-storage.po-lines",
          "version": "12.1"
        },
                {
          "id": "orders-storage.pieces",
          "version": "5.0"
        },
                {
          "id": "organizations-storage.organizations",
          "version": "3.3"
        },
                {
          "id": "organizations.organizations",
          "version": "1.2"
        },
                {
          "id": "order-lines",
          "version": "3.2"
        },
                {
          "id": "search",
          "version": "1.3"
        },
                {
          "id": "service-points",
          "version": "3.3"
        },
                {
          "id": "statistical-codes",
          "version": "1.0"
        },
                {
          "id": "statistical-code-types",
          "version": "1.0"
        },
                {
          "id": "instance-note-types",
          "version": "1.0"
        },
                {
          "id": "permissions",
          "version": "5.7"
        },
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "instance-formats",
          "version": "2.0"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
                {
          "id": "consortium-search",
          "version": "2.1"
        },
                {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
                {
          "id": "circulation-logs",
          "version": "1.2"
        },
                {
          "id": "instance-statuses",
          "version": "1.0"
        }
      ],
      "optional":       [
                {
          "id": "data-export-spring",
          "version": "2.0"
        },
                {
          "id": "users-keycloak",
          "version": "1.0"
        },
                {
          "id": "permissions-users",
          "version": "1.0"
        },
                {
          "id": "consortia",
          "version": "1.1"
        },
                {
          "id": "custom-fields",
          "version": "3.0"
        },
                {
          "id": "okapi",
          "version": "1.9"
        }
      ],
      "provides":       [
                {
          "id": "bulk-edit",
          "version": "4.3",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/bulk-edit/{id}/upload",
              "permissionsRequired": ["bulk-edit.item.post"],
              "modulePermissions":               [
                "addresstypes.collection.get",
                "addresstypes.item.get",
                "data-export.job.item.get",
                "departments.collection.get",
                "departments.item.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.call-number-types.item.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.electronic-access-relationships.item.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-note-types.item.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-sources.item.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings-types.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.ill-policies.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-damaged-statuses.item.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.item-note-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.service-points.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.statistical-codes.item.get",
                "inventory.items.collection.get",
                "inventory.items.item.get",
                "okapi.proxy.tenants.modules.list",
                "proxiesfor.item.get",
                "user-settings.custom-fields.collection.get",
                "usergroups.collection.get",
                "usergroups.item.get",
                "users.collection.get",
                "users.item.get",
                "inventory-storage.instance-statuses.item.get",
                "inventory-storage.modes-of-issuance.item.get",
                "inventory-storage.instance-types.item.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.nature-of-content-terms.item.get",
                "inventory-storage.instance-formats.item.get",
                "inventory-storage.instance-note-types.item.get",
                "source-storage.source-records.collection.get",
                "user-tenants.collection.get",
                "consortium-search.holdings.collection.get",
                "consortium-search.holdings.batch.collection.get",
                "consortium-search.items.batch.collection.get",
                "consortium-search.items.collection.get",
                "consortia.user-tenants.collection.get",
                "perms.users.get",
                "permissions.users.item.get",
                "inventory-storage.statistical-code-types.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/bulk-edit/{id}/start",
              "permissionsRequired": ["bulk-edit.start.item.post"],
              "modulePermissions":               [
                "users.collection.get",
                "users.item.get",
                "users.item.put",
                "usergroups.item.get",
                "addresstypes.item.get",
                "proxiesfor.item.get",
                "departments.item.get",
                "usergroups.collection.get",
                "addresstypes.collection.get",
                "inventory.items.item.get",
                "inventory.items.collection.get",
                "inventory.items.item.put",
                "inventory-storage.call-number-types.item.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.item-damaged-statuses.item.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.electronic-access-relationships.item.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.item-note-types.item.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get",
                "inventory-storage.statistical-codes.item.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings-types.item.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.call-number-types.item.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-note-types.item.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.ill-policies.item.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-sources.item.get",
                "inventory-storage.holdings.item.put",
                "perms.users.get",
                "permissions.users.item.get",
                "inventory-storage.statistical-code-types.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/bulk-edit/{jobId}/errors",
              "permissionsRequired": ["bulk-edit.errors.collection.get"],
              "modulePermissions": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/refresh-presigned-url",
              "permissionsRequired": ["refresh-presigned-url.get"],
              "modulePermissions": []
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "circulation-logs.collection.get",
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "feefineactions.collection.get",
                "users.collection.get",
                "transfers.collection.get",
                "inventory-storage.service-points.collection.get",
                "instance-authority-links.authority-statistics.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.post",
                "configuration.entries.item.delete"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas"
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "bulk-edit.item.post",
          "displayName": "upload identifiers list",
          "description": "Upload list of item identifiers"
        },
                {
          "permissionName": "bulk-edit.start.item.post",
          "displayName": "start update items",
          "description": "Start update items"
        },
                {
          "permissionName": "bulk-edit.errors.collection.get",
          "displayName": "get errors for preview",
          "description": "Get errors for preview"
        },
                {
          "permissionName": "refresh-presigned-url.get",
          "displayName": "Get refreshed presigned url for export file",
          "description": "Get refreshed presigned url for export file"
        },
                {
          "permissionName": "bulk-edit.all",
          "displayName": "bulk-edit all",
          "description": "All permissions for bulk-edit module",
          "subPermissions":           [
            "bulk-edit.item.post",
            "bulk-edit.start.item.post",
            "bulk-edit.errors.collection.get"
          ]
        },
                {
          "permissionName": "refresh-presigned-url.all",
          "displayName": "refresh-presigned-url all",
          "description": "All permissions for refresh presigned url",
          "subPermissions": ["refresh-presigned-url.get"]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-data-export-worker:3.4.3",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 3072000000,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -XX:MetaspaceSize=384m -XX:MaxMetaspaceSize=512m -Xmx2048m"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "AWS_URL",
            "value": "http://127.0.0.1:9000/"
          },
                    {
            "name": "AWS_REGION",
            "value": ""
          },
                    {
            "name": "AWS_BUCKET",
            "value": "test-bucket2"
          },
                    {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
                    {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          },
                    {
            "name": "LOCAL_FS_URL",
            "value": "http://127.0.0.1:9000/"
          },
                    {
            "name": "LOCAL_FS_REGION",
            "value": ""
          },
                    {
            "name": "LOCAL_FS_BUCKET",
            "value": "local-test-bucket2"
          },
                    {
            "name": "LOCAL_FS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
                    {
            "name": "LOCAL_FS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          },
                    {
            "name": "LOCAL_FS_COMPOSE_WITH_AWS_SDK",
            "value": "false"
          },
                    {
            "name": "ENV",
            "value": "folio"
          }
        ]
      }
    },
        {
      "id": "mod-rtac-3.8.0",
      "name": "Real Time Availability Check Module",
      "provides":       [
                {
          "id": "rtac",
          "version": "1.5",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/rtac/{id}",
            "permissionsRequired": ["rtac.holdings.item.get"],
            "modulePermissions":             [
              "circulation-storage.loans.collection.get",
              "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
              "circulation.requests.collection.get",
              "orders.pieces.collection.get"
            ]
          }]
        },
                {
          "id": "rtac-batch",
          "version": "1.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/rtac-batch",
            "permissionsRequired": ["rtac.batch.post"],
            "modulePermissions":             [
              "circulation-storage.loans.collection.get",
              "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
              "circulation.requests.collection.get",
              "orders.pieces.collection.get",
              "user-tenants.collection.get",
              "search.facets.collection.get"
            ]
          }]
        }
      ],
      "requires":       [
                {
          "id": "inventory-hierarchy",
          "version": "0.5 0.6"
        },
                {
          "id": "loan-storage",
          "version": "7.1 7.3"
        },
                {
          "id": "circulation",
          "version": "14.2 14.6"
        },
                {
          "id": "pieces",
          "version": "3.0 3.1"
        },
                {
          "id": "user-tenants",
          "version": "1.0"
        },
                {
          "id": "search",
          "version": "1.2 1.3"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "rtac.holdings.item.get",
          "displayName": "Legacy RTAC - Get individual holding",
          "description": "Legacy RTAC - Get individual holding"
        },
                {
          "permissionName": "rtac.batch.post",
          "displayName": "RTAC - get batch holding collection",
          "description": "Get batch holding collection"
        },
                {
          "permissionName": "rtac.all",
          "displayName": "RTAC - all permissions",
          "description": "Entire set of permissions needed to use RTAC",
          "subPermissions":           [
            "rtac.batch.post",
            "rtac.holdings.item.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-rtac:3.8.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-remote-storage-3.4.1",
      "name": "Remote storage API module",
      "requires":       [
                {
          "id": "inventory",
          "version": "14.1"
        },
                {
          "id": "inventory-move",
          "version": "0.2"
        },
                {
          "id": "holdings-storage",
          "version": "8.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "contributor-types",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "authtoken",
          "version": "2.1"
        },
                {
          "id": "login",
          "version": "7.3"
        },
                {
          "id": "permissions",
          "version": "5.8"
        },
                {
          "id": "locations",
          "version": "3.1"
        },
                {
          "id": "circulation",
          "version": "14.6"
        },
                {
          "id": "item-storage",
          "version": "10.1"
        },
                {
          "id": "service-points",
          "version": "3.4"
        },
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        }
      ],
      "optional": [      {
        "id": "item-note-types",
        "version": "1.0"
      }],
      "provides":       [
                {
          "id": "remote-storage-configurations",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/configurations",
              "permissionsRequired": ["remote-storage.configurations.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": ["remote-storage.configurations.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/configurations",
              "permissionsRequired": ["remote-storage.configurations.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": ["remote-storage.configurations.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": ["remote-storage.configurations.item.delete"]
            }
          ]
        },
                {
          "id": "remote-storage-mappings",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/mappings",
              "permissionsRequired": ["remote-storage.mappings.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/mappings",
              "permissionsRequired": ["remote-storage.mappings.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/mappings/{finalLocationId}",
              "permissionsRequired": ["remote-storage.mappings.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/remote-storage/mappings/{finalLocationId}",
              "permissionsRequired": ["remote-storage.mappings.item.delete"]
            }
          ]
        },
                {
          "id": "remote-storage-extended-mappings",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/extended-mappings",
              "permissionsRequired": ["remote-storage.extended-mappings.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/extended-mappings",
              "permissionsRequired": ["remote-storage.extended-mappings.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}",
              "permissionsRequired": ["remote-storage.extended-mappings.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/extended-mappings/locations",
              "permissionsRequired": ["remote-storage.extended-mappings-locations.collection.get"],
              "modulePermissions": ["inventory-storage.locations.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}/{originalLocationId}",
              "permissionsRequired": ["remote-storage.extended-mappings.item.delete"]
            }
          ]
        },
                {
          "id": "remote-storage-providers",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/remote-storage/providers",
            "permissionsRequired": ["remote-storage.providers.collection.get"]
          }]
        },
                {
          "id": "remote-storage-accessions",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/accessions",
              "permissionsRequired": ["remote-storage.accessions.item.post"],
              "modulePermissions":               [
                "inventory.items.collection.get",
                "inventory.items.item.put",
                "inventory.instances.collection.get",
                "inventory.items.move.item.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.post",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.item-note-types.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/accessions",
              "permissionsRequired": ["remote-storage.accessions.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/remote-storage/accessions/id/{accessionId}",
              "permissionsRequired": ["remote-storage.accessions.item.put"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/remote-storage/accessions/barcode/{barcode}",
              "permissionsRequired": ["remote-storage.accessions.item-barcode.put"]
            }
          ]
        },
                {
          "id": "remote-storage-retrievals",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/remote-storage/retrievals",
              "permissionsRequired": ["remote-storage.retrievals.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/remote-storage/retrievals/id/{retrievalId}",
              "permissionsRequired": ["remote-storage.retrievals.item.put"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/remote-storage/retrievals/barcode/{barcode}",
              "permissionsRequired": ["remote-storage.retrievals.item-barcode.put"]
            }
          ]
        },
                {
          "id": "remote-storage-check-in",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItem",
              "permissionsRequired": ["remote-storage.check-in.item.post"],
              "modulePermissions":               [
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItemByHoldId",
              "permissionsRequired": ["remote-storage.check-in.item-hold.post"],
              "modulePermissions":               [
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/remote-storage/return/{remoteStorageConfigurationId}",
              "permissionsRequired": ["remote-storage.return.item.post"],
              "modulePermissions":               [
                "inventory.items.collection.get",
                "circulation.requests.queue-item.collection.get",
                "circulation.requests.queue-instance.collection.get",
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post",
                "inventory-storage.service-points.item.get",
                "users.collection.get"
              ]
            }
          ]
        },
                {
          "id": "remote-storage-event-handlers",
          "version": "1.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/remote-storage/pub-sub-handlers/log-record-event",
            "permissionsRequired": ["remote-storage.pub-sub-handlers.log-record-event.post"],
            "modulePermissions":             [
              "inventory.items.collection.get",
              "users.collection.get",
              "inventory-storage.service-points.item.get",
              "circulation.requests.queue-item.collection.get",
              "circulation.requests.queue-instance.collection.get"
            ]
          }]
        },
                {
          "id": "remote-storage-items",
          "version": "1.0",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/remote-storage/items/barcode/{barcode}/markAsMissing",
            "permissionsRequired": ["remote-storage.items.item.mark-as-missing.post"],
            "modulePermissions":             [
              "inventory.items.collection.get",
              "inventory.items.item.mark-missing.post",
              "inventory-storage.items.item.get"
            ]
          }]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable",
                "pubsub.event-types.post",
                "pubsub.subscribers.post",
                "pubsub.publishers.post"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "remote-storage.configurations.item.post",
          "displayName": "create a remote storage configuration",
          "description": "Add a remote storage configuration"
        },
                {
          "permissionName": "remote-storage.configurations.item.put",
          "displayName": "modify a remote storage configuration",
          "description": "Modify a remote storage configuration"
        },
                {
          "permissionName": "remote-storage.configurations.collection.get",
          "displayName": "get remote storage configurations collection",
          "description": "Get a list of remote storage configurations"
        },
                {
          "permissionName": "remote-storage.configurations.item.get",
          "displayName": "get remote storage configuration",
          "description": "Get a remote storage configuration by id"
        },
                {
          "permissionName": "remote-storage.configurations.item.delete",
          "displayName": "delete a remote storage configuration",
          "description": "Delete a remote storage configuration by id"
        },
                {
          "permissionName": "remote-storage.mappings.item.post",
          "displayName": "create/update location mapping",
          "description": "Create new or update existing location mapping"
        },
                {
          "permissionName": "remote-storage.mappings.collection.get",
          "displayName": "get location mappings collection",
          "description": "Get list of location mappings"
        },
                {
          "permissionName": "remote-storage.mappings.item.get",
          "displayName": "get location mapping by Folio location id",
          "description": "Get location mapping by Folio location id"
        },
                {
          "permissionName": "remote-storage.mappings.item.delete",
          "displayName": "Delete location mapping",
          "description": "Delete a location mapping by id"
        },
                {
          "permissionName": "remote-storage.extended-mappings.item.post",
          "displayName": "create/update extended location mapping",
          "description": "Create new or update existing extended location mapping"
        },
                {
          "permissionName": "remote-storage.extended-mappings.collection.get",
          "displayName": "get extended location mappings collection",
          "description": "Get list of extended location mappings"
        },
                {
          "permissionName": "remote-storage.extended-mappings.item.get",
          "displayName": "get extended location mapping by Folio location id",
          "description": "Get extended location mapping by Folio location id"
        },
                {
          "permissionName": "remote-storage.extended-mappings-locations.collection.get",
          "displayName": "get extended location mapping by Folio location id",
          "description": "Get extended location mapping by Folio location id"
        },
                {
          "permissionName": "remote-storage.extended-mappings.item.delete",
          "displayName": "Delete extended location mapping",
          "description": "Delete extended location mapping by id"
        },
                {
          "permissionName": "remote-storage.providers.collection.get",
          "displayName": "get remote storage providers collection",
          "description": "Get list of remote storage providers"
        },
                {
          "permissionName": "remote-storage.accessions.item.post",
          "displayName": "post remote storage accession item",
          "description": "Perform item accession initiated by remote storage"
        },
                {
          "permissionName": "remote-storage.accessions.collection.get",
          "displayName": "get remote storage accession queues collection",
          "description": "Get list of remote storage accession queues"
        },
                {
          "permissionName": "remote-storage.accessions.item.put",
          "displayName": "modify a remote storage accession queue",
          "description": "Modify a remote storage accession queue by changing accessioned date time"
        },
                {
          "permissionName": "remote-storage.accessions.item-barcode.put",
          "displayName": "modify a remote storage accession queue by barcode",
          "description": "Modify a remote storage accession queue by barcode and changing accessioned date time"
        },
                {
          "permissionName": "remote-storage.retrievals.collection.get",
          "displayName": "get remote storage retrieval queues collection",
          "description": "Get list of remote storage retrieval queue records"
        },
                {
          "permissionName": "remote-storage.retrievals.item.put",
          "displayName": "modify a remote storage retrieval queue record",
          "description": "Modify a remote storage retrieval queue record by changing retrieved date time"
        },
                {
          "permissionName": "remote-storage.retrievals.item-barcode.put",
          "displayName": "modify a remote storage retrieval queue record by barcode",
          "description": "Modify a remote storage retrieval queue record by barcode by changing retrieved date time"
        },
                {
          "permissionName": "remote-storage.check-in.item.post",
          "displayName": "check-in item by barcode",
          "description": "Check-in item by barcode"
        },
                {
          "permissionName": "remote-storage.check-in.item-hold.post",
          "displayName": "check-in item by hold id",
          "description": "Check-in item by hold id"
        },
                {
          "permissionName": "remote-storage.return.item.post",
          "displayName": "return item by barcode",
          "description": "Return item by barcode"
        },
                {
          "permissionName": "remote-storage.items.item.mark-as-missing.post",
          "displayName": "mark item as missing by barcode",
          "description": "Mark item as missing by barcode"
        },
                {
          "permissionName": "remote-storage.all",
          "displayName": "remote storage API module - all permissions",
          "description": "All permissions for remote storage",
          "subPermissions":           [
            "remote-storage.configurations.item.post",
            "remote-storage.configurations.item.put",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.configurations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.collection.get",
            "remote-storage.mappings.item.get",
            "remote-storage.mappings.item.delete",
            "remote-storage.extended-mappings.item.post",
            "remote-storage.extended-mappings.collection.get",
            "remote-storage.extended-mappings.item.get",
            "remote-storage.extended-mappings-locations.collection.get",
            "remote-storage.extended-mappings.item.delete",
            "remote-storage.providers.collection.get",
            "remote-storage.accessions.item.post",
            "remote-storage.accessions.collection.get",
            "remote-storage.accessions.item.put",
            "remote-storage.accessions.item-barcode.put",
            "remote-storage.retrievals.collection.get",
            "remote-storage.retrievals.item.put",
            "remote-storage.retrievals.item-barcode.put",
            "remote-storage.check-in.item.post",
            "remote-storage.check-in.item-hold.post",
            "remote-storage.return.item.post",
            "remote-storage.items.item.mark-as-missing.post"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "users.collection.get",
          "users.item.get",
          "inventory.instances.collection.get",
          "inventory-storage.contributor-types.collection.get",
          "inventory-storage.holdings.collection.get",
          "inventory-storage.items.collection.get",
          "inventory-storage.identifier-types.collection.get",
          "inventory-storage.item-note-types.item.get"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-remote-storage:3.4.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 712673984,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=75.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT"
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": ""
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": ""
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": ""
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": ""
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-calendar-3.3.0",
      "name": "Calendar for Service Point Opening Hours",
      "provides":       [
                {
          "id": "calendar",
          "version": "5.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": ["calendar.endpoint.calendars.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": ["calendar.endpoint.calendars.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": ["calendar.endpoint.calendars.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": ["calendar.endpoint.calendars.calendarId.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": ["calendar.endpoint.calendars.calendarId.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": ["calendar.endpoint.calendars.calendarId.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/calendar/dates/{servicePointId}/surrounding-openings",
              "permissionsRequired": ["calendar.endpoint.calendars.surroundingOpenings.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/calendar/dates/{servicePointId}/all-openings",
              "permissionsRequired": ["calendar.endpoint.calendars.allOpenings.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "calendar.view",
          "displayName": "Access and query calendar information",
          "description": "",
          "subPermissions":           [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "calendar.endpoint.calendars.calendarId.get",
            "calendar.endpoint.calendars.get"
          ],
          "visible": false
        },
                {
          "permissionName": "calendar.create",
          "displayName": "Create new calendars",
          "description": "",
          "subPermissions":           [
            "calendar.view",
            "calendar.endpoint.calendars.post"
          ],
          "visible": false
        },
                {
          "permissionName": "calendar.update",
          "displayName": "Edit existing calendars",
          "description": "",
          "subPermissions":           [
            "calendar.view",
            "calendar.endpoint.calendars.calendarId.put"
          ],
          "visible": false
        },
                {
          "permissionName": "calendar.delete",
          "displayName": "Delete calendars",
          "description": "",
          "subPermissions":           [
            "calendar.view",
            "calendar.endpoint.calendars.delete",
            "calendar.endpoint.calendars.calendarId.delete"
          ],
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.get",
          "displayName": "Make GET requests to /calendar/calendars",
          "description": "",
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.surroundingOpenings.get",
          "displayName": "Make GET requests to /calendar/dates/{servicePointID}/surrounding-openings",
          "description": "",
          "replaces": ["calendar.endpoint.dates.get"],
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.allOpenings.get",
          "displayName": "Make GET requests to /calendar/dates/{servicePointId}/all-openings",
          "description": "",
          "replaces": ["calendar.endpoint.dates.get"],
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.post",
          "displayName": "Make POST requests to /calendar/calendars",
          "description": "",
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.delete",
          "displayName": "Make DELETE requests to /calendar/calendars",
          "description": "",
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.calendarId.get",
          "displayName": "Make GET requests to /calendar/calendars/{id}",
          "description": "",
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.calendarId.put",
          "displayName": "Make PUT requests to /calendar/calendars/{id}",
          "description": "",
          "visible": false
        },
                {
          "permissionName": "calendar.endpoint.calendars.calendarId.delete",
          "displayName": "Make DELETE requests to /calendar/calendars/{id}",
          "description": "",
          "visible": false
        }
      ],
      "requires": [],
      "launchDescriptor":       {
        "dockerImage": "mod-calendar:3.3.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 514572800,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "localhost"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          }
        ]
      }
    },
        {
      "id": "mod-audit-2.11.1",
      "name": "Audit Module",
      "requires":       [
                {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
                {
          "id": "pubsub-publish",
          "version": "0.1"
        },
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "template-engine",
          "version": "2.2"
        },
                {
          "id": "inventory",
          "version": "14.1"
        },
                {
          "id": "cancellation-reason-storage",
          "version": "1.2"
        }
      ],
      "optional":       [
                {
          "id": "circulation-item",
          "version": "1.0"
        },
                {
          "id": "item-storage",
          "version": "10.1"
        },
                {
          "id": "holdings-storage",
          "version": "8.0"
        },
                {
          "id": "instance-storage",
          "version": "11.1"
        }
      ],
      "provides":       [
                {
          "id": "audit",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data",
              "permissionsRequired": ["audit.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/audit-data",
              "permissionsRequired": ["audit.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": ["audit.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": ["audit.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": ["audit.item.delete"]
            }
          ]
        },
                {
          "id": "acquisition-order-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/acquisition/order/{id}",
            "permissionsRequired": ["acquisition.order.events.get"]
          }]
        },
                {
          "id": "acquisition-order-line-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/acquisition/order-line/{id}",
            "permissionsRequired": ["acquisition.order-line.events.get"]
          }]
        },
                {
          "id": "acquisition-piece-events",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/acquisition/piece/{id}",
              "permissionsRequired": ["acquisition.piece.events.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/acquisition/piece/{id}/status-change-history",
              "permissionsRequired": ["acquisition.piece.events.history.get"]
            }
          ]
        },
                {
          "id": "acquisition-invoice-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/acquisition/invoice/{id}",
            "permissionsRequired": ["acquisition.invoice.events.get"]
          }]
        },
                {
          "id": "acquisition-invoice-line-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/acquisition/invoice-line/{id}",
            "permissionsRequired": ["acquisition.invoice-line.events.get"]
          }]
        },
                {
          "id": "acquisition-organization-events",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/acquisition/organization/{id}",
            "permissionsRequired": ["acquisition.organization.events.get"]
          }]
        },
                {
          "id": "circulation-logs",
          "version": "1.2",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/audit-data/circulation/logs",
            "permissionsRequired": ["circulation-logs.collection.get"]
          }]
        },
                {
          "id": "audit-data-event-handlers",
          "version": "1.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/audit/handlers/log-record",
            "permissionsRequired": ["audit.pub-sub-handlers.log-record-event.post"],
            "modulePermissions":             [
              "users.item.get",
              "users.collection.get",
              "templates.item.get",
              "inventory.items.item.get",
              "inventory-storage.holdings.item.get",
              "circulation-storage.cancellation-reasons.collection.get",
              "circulation-item.item.get"
            ]
          }]
        },
                {
          "id": "audit-config",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/audit/config/groups",
              "permissionsRequired": ["audit.config.groups.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit/config/groups/{groupId}/settings",
              "permissionsRequired": ["audit.config.groups.settings.collection.get"],
              "permissionsDesired": ["audit.config.groups.settings.*"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/audit/config/groups/{groupId}/settings/{settingId}",
              "permissionsRequired": ["audit.config.groups.settings.item.put"],
              "permissionsDesired": ["audit.config.groups.settings.*"]
            }
          ]
        },
                {
          "id": "audit-inventory",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/inventory/instance/{entityId}",
              "permissionsRequired": ["audit.inventory.instance.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/inventory/holdings/{entityId}",
              "permissionsRequired": ["audit.inventory.holdings.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/inventory/item/{entityId}",
              "permissionsRequired": ["audit.inventory.item.collection.get"]
            }
          ]
        },
                {
          "id": "audit-marc",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/marc/bib/{entityId}",
              "permissionsRequired": ["audit.marc.bib.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/audit-data/marc/authority/{entityId}",
              "permissionsRequired": ["audit.marc.authority.collection.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ]
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/audit-data/cleanup/timer",
            "schedule": {"cron": "0 2 * * *"}
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "audit.collection.get",
          "displayName": "Audit - get audit records",
          "description": "Get audit records"
        },
                {
          "permissionName": "audit.item.get",
          "displayName": "Audit - get specific audit record",
          "description": "Get specific audit record"
        },
                {
          "permissionName": "audit.item.post",
          "displayName": "Audit - create a new audit record",
          "description": "Create a new audit record"
        },
                {
          "permissionName": "audit.item.put",
          "displayName": "Audit - update specific audit record",
          "description": "Update specific audit record"
        },
                {
          "permissionName": "audit.item.delete",
          "displayName": "Audit - delete specific audit record",
          "description": "Delete specific audit record"
        },
                {
          "permissionName": "circulation-logs.collection.get",
          "displayName": "Circulation audit logs - get circulation log records",
          "description": "Get circulation audit logs records"
        },
                {
          "permissionName": "acquisition.order.events.get",
          "displayName": "Acquisition order events - get order change events",
          "description": "Get order change events"
        },
                {
          "permissionName": "acquisition.order-line.events.get",
          "displayName": "Acquisition order-line events - get order-line change events",
          "description": "Get order-line change events"
        },
                {
          "permissionName": "acquisition.piece.events.get",
          "displayName": "Acquisition piece events - get piece change events",
          "description": "Get piece change events"
        },
                {
          "permissionName": "acquisition.piece.events.history.get",
          "displayName": "Acquisition piece status change history events - get piece status change events",
          "description": "Get piece status change events"
        },
                {
          "permissionName": "acquisition.invoice.events.get",
          "displayName": "Acquisition invoice events - get invoice change events",
          "description": "Get invoice change events"
        },
                {
          "permissionName": "acquisition.invoice-line.events.get",
          "displayName": "Acquisition invoice-line events - get invoice-line change events",
          "description": "Get invoice-line change events"
        },
                {
          "permissionName": "acquisition.organization.events.get",
          "displayName": "Acquisition organization events - get organization change events",
          "description": "Get organization change events"
        },
                {
          "permissionName": "audit.config.groups.collection.get",
          "displayName": "Audit Configuration - get settings groups",
          "description": "Get settings groups"
        },
                {
          "permissionName": "audit.config.groups.settings.collection.get",
          "displayName": "Audit Configuration - get settings for a group",
          "description": "Get settings for a group"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.inventory.collection.get",
          "displayName": "Audit Configuration - get settings for a audit inventory group",
          "description": "Get settings for a audit inventory group"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.authority.collection.get",
          "displayName": "Audit Configuration - get settings for a audit authority group",
          "description": "Get settings for a audit authority group"
        },
                {
          "permissionName": "audit.config.groups.settings.item.put",
          "displayName": "Audit Configuration - update setting for a group",
          "description": "Update setting for a group"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.inventory.records.page.size.item.put",
          "displayName": "Audit Configuration - update setting for a audit inventory records page size",
          "description": "Update setting for a audit inventory records page size"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.authority.records.page.size.item.put",
          "displayName": "Audit Configuration - update setting for a audit authority records page size",
          "description": "Update setting for a audit authority records page size"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.inventory.records.retention.period.item.put",
          "displayName": "Audit Configuration - update setting for a audit inventory records retention period",
          "description": "Update setting for a audit inventory records retention period"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.authority.records.retention.period.item.put",
          "displayName": "Audit Configuration - update setting for a audit authority records retention period",
          "description": "Update setting for a audit authority records retention period"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.inventory.enabled.item.put",
          "displayName": "Audit Configuration - enable/disable audit inventory records",
          "description": "Enable/disable audit inventory records"
        },
                {
          "permissionName": "audit.config.groups.settings.audit.authority.enabled.item.put",
          "displayName": "Audit Configuration - enable/disable audit authority records",
          "description": "Enable/disable audit authority records"
        },
                {
          "permissionName": "audit.inventory.instance.collection.get",
          "displayName": "Inventory Audit - get instance events",
          "description": "Get inventory instance audit events"
        },
                {
          "permissionName": "audit.inventory.holdings.collection.get",
          "displayName": "Inventory Audit - get holdings events",
          "description": "Get inventory holdings audit events"
        },
                {
          "permissionName": "audit.inventory.item.collection.get",
          "displayName": "Inventory Audit - get item events",
          "description": "Get inventory item audit events"
        },
                {
          "permissionName": "audit.marc.bib.collection.get",
          "displayName": "Marc Audit - get Marc Bib events",
          "description": "Get Marc Bib audit events"
        },
                {
          "permissionName": "audit.marc.authority.collection.get",
          "displayName": "Marc Audit - get Marc Authority events",
          "description": "Get Marc Authority audit events"
        },
                {
          "permissionName": "audit.all",
          "displayName": "Audit - all permissions",
          "description": "Audit - all permissions",
          "subPermissions":           [
            "audit.collection.get",
            "audit.item.get",
            "audit.item.post",
            "audit.item.put",
            "audit.item.delete",
            "circulation-logs.collection.get",
            "acquisition.order.events.get",
            "acquisition.order-line.events.get",
            "acquisition.piece.events.get",
            "acquisition.piece.events.history.get",
            "acquisition.invoice.events.get",
            "acquisition.invoice-line.events.get",
            "acquisition.organization.events.get",
            "audit.inventory.instance.collection.get",
            "audit.inventory.holdings.collection.get",
            "audit.inventory.item.collection.get",
            "audit.marc.bib.collection.get",
            "audit.marc.authority.collection.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-audit:2.11.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 715827883,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-courses-1.4.11",
      "name": "Courses Storage Module",
      "provides":       [
                {
          "id": "course-reserves-storage",
          "version": "0.3",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings",
              "permissionsRequired": ["course-reserves-storage.courselistings.collection.get"],
              "modulePermissions":               [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/courselistings",
              "permissionsRequired": ["course-reserves-storage.courselistings.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.item.get"],
              "modulePermissions":               [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/courses",
              "permissionsRequired": ["course-reserves-storage.courselistings.courses.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/courselistings/{id}/courses",
              "permissionsRequired": ["course-reserves-storage.courselisting.courses.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.courses.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.courses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.courses.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors",
              "permissionsRequired": ["course-reserves-storage.courselistings.instructors.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors",
              "permissionsRequired": ["course-reserves-storage.courselistings.instructors.item.post"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.instructors.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.instructors.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.instructors.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves",
              "permissionsRequired": ["course-reserves-storage.courselistings.reserves.collection.get"],
              "modulePermissions": ["inventory-storage.locations.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves",
              "permissionsRequired": ["course-reserves-storage.courselistings.reserves.item.post"],
              "modulePermissions":               [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.reserves.item.get"],
              "modulePermissions": ["inventory-storage.locations.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.reserves.item.put"],
              "modulePermissions":               [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": ["course-reserves-storage.courselistings.reserves.item.delete"]
            }
          ]
        },
                {
          "id": "term-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/terms",
              "permissionsRequired": ["course-reserves-storage.terms.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/terms",
              "permissionsRequired": ["course-reserves-storage.terms.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": ["course-reserves-storage.terms.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": ["course-reserves-storage.terms.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": ["course-reserves-storage.terms.item.delete"]
            }
          ]
        },
                {
          "id": "department-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/departments",
              "permissionsRequired": ["course-reserves-storage.departments.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/departments",
              "permissionsRequired": ["course-reserves-storage.departments.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": ["course-reserves-storage.departments.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": ["course-reserves-storage.departments.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": ["course-reserves-storage.departments.item.delete"]
            }
          ]
        },
                {
          "id": "course-type-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/coursetypes",
              "permissionsRequired": ["course-reserves-storage.course-types.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/coursetypes",
              "permissionsRequired": ["course-reserves-storage.course-types.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": ["course-reserves-storage.course-types.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": ["course-reserves-storage.course-types.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": ["course-reserves-storage.course-types.item.delete"]
            }
          ]
        },
                {
          "id": "processing-status-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/processingstatuses",
              "permissionsRequired": ["course-reserves-storage.processing-statuses.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.processing-statuses.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/processingstatuses",
              "permissionsRequired": ["course-reserves-storage.processing-statuses.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.processing-statuses.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.processing-statuses.item.delete"]
            }
          ]
        },
                {
          "id": "copyright-status-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/copyrightstatuses",
              "permissionsRequired": ["course-reserves-storage.copyright-statuses.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/copyrightstatuses",
              "permissionsRequired": ["course-reserves-storage.copyright-statuses.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.copyright-statuses.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.copyright-statuses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": ["course-reserves-storage.copyright-statuses.item.delete"]
            }
          ]
        },
                {
          "id": "role-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/roles",
              "permissionsRequired": ["course-reserves-storage.roles.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/roles",
              "permissionsRequired": ["course-reserves-storage.roles.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": ["course-reserves-storage.roles.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": ["course-reserves-storage.roles.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": ["course-reserves-storage.roles.item.delete"]
            }
          ]
        },
                {
          "id": "course-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courses",
              "permissionsRequired": ["course-reserves-storage.courses.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/courses",
              "permissionsRequired": ["course-reserves-storage.courses.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": ["course-reserves-storage.courses.item.get"],
              "modulePermissions":               [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": ["course-reserves-storage.courses.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": ["course-reserves-storage.courses.item.delete"]
            }
          ]
        },
                {
          "id": "reserves-storage",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/reserves",
              "permissionsRequired": ["course-reserves-storage.reserves.collection.get"],
              "modulePermissions": ["inventory-storage.locations.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/coursereserves/reserves",
              "permissionsRequired": ["course-reserves-storage.reserves.item.post"],
              "modulePermissions":               [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": ["course-reserves-storage.reserves.item.get"],
              "modulePermissions": ["inventory-storage.locations.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": ["course-reserves-storage.reserves.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": ["course-reserves-storage.reserves.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get",
                "users.item.get"
              ]
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "requires":       [
                {
          "id": "item-storage",
          "version": "7.0 8.0 9.0 10.0"
        },
                {
          "id": "instance-storage",
          "version": "7.2 8.0 9.0 10.0 11.0"
        },
                {
          "id": "holdings-storage",
          "version": "2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
                {
          "id": "locations",
          "version": "2.0 3.0"
        },
                {
          "id": "service-points",
          "version": "3.0"
        },
                {
          "id": "loan-types",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "16.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "course-reserves-storage.courselistings.collection.get",
          "displayName": "course reserves get courselistings collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.item.post",
          "displayName": "course reserves post courselistings item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.item.get",
          "displayName": "course reserves get courselisting item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.item.put",
          "displayName": "course reserves put courselisting item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.item.delete",
          "displayName": "course reserves delete courselisting item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.courses.collection.get",
          "displayName": "course reserves get courses collection for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselisting.courses.item.post",
          "displayName": "course reserves post course item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.courses.item.get",
          "displayName": "course reserves get course item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.courses.item.put",
          "displayName": "course reserves put course item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.courses.item.delete",
          "displayName": "course reserves delete course item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.instructors.collection.get",
          "displayName": "course reserves get instructors collection for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.post",
          "displayName": "course reserves post instructors item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.get",
          "displayName": "course reserves get instructors item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.put",
          "displayName": "course reserves put instructors item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.delete",
          "displayName": "course reserves delete instructors item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.reserves.collection.get",
          "displayName": "course reserves get reserves collection for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.post",
          "displayName": "course reserves post reserves item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.get",
          "displayName": "course reserves get reserves item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.put",
          "displayName": "course reserves put reserves item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.delete",
          "displayName": "course reserves delete reserves item for courselisting",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courselistings.read",
          "displayName": "read permissions for coursereserves courselisting",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.courselistings.collection.get",
            "course-reserves-storage.courselistings.item.get",
            "course-reserves-storage.courselistings.courses.collection.get",
            "course-reserves-storage.courselistings.courses.item.get",
            "course-reserves-storage.courselistings.instructors.collection.get",
            "course-reserves-storage.courselistings.instructors.item.get",
            "course-reserves-storage.courselistings.reserves.collection.get",
            "course-reserves-storage.courselistings.reserves.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.courselistings.write",
          "displayName": "write permissions for coursereserves courselisting",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.courselistings.read",
            "course-reserves-storage.courselistings.item.post",
            "course-reserves-storage.courselistings.item.put",
            "course-reserves-storage.courselistings.item.delete",
            "course-reserves-storage.courselisting.courses.item.post",
            "course-reserves-storage.courselistings.courses.item.put",
            "course-reserves-storage.courselistings.courses.item.delete",
            "course-reserves-storage.courselistings.instructors.item.post",
            "course-reserves-storage.courselistings.instructors.item.put",
            "course-reserves-storage.courselistings.instructors.item.delete",
            "course-reserves-storage.courselistings.reserves.item.post",
            "course-reserves-storage.courselistings.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.terms.collection.get",
          "displayName": "course reserves get terms collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.terms.item.post",
          "displayName": "course reserves post terms item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.terms.item.get",
          "displayName": "course reserves get terms item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.terms.item.put",
          "displayName": "course reserves put terms item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.terms.item.delete",
          "displayName": "course reserves delete terms item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.terms.read",
          "displayName": "course reserves terms read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.terms.collection.get",
            "course-reserves-storage.terms.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.terms.write",
          "displayName": "course reserves terms write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.terms.read",
            "course-reserves-storage.terms.item.post",
            "course-reserves-storage.terms.item.put",
            "course-reserves-storage.terms.item.put",
            "course-reserves-storage.terms.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.departments.collection.get",
          "displayName": "course reserves get departments collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.departments.item.post",
          "displayName": "course reserves post departments item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.departments.item.get",
          "displayName": "course reserves get departments item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.departments.item.put",
          "displayName": "course reserves put departments item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.departments.item.delete",
          "displayName": "course reserves delete departments item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.departments.read",
          "displayName": "course reserves departments read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.departments.collection.get",
            "course-reserves-storage.departments.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.departments.write",
          "displayName": "course reserves departments write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.departments.read",
            "course-reserves-storage.departments.item.post",
            "course-reserves-storage.departments.item.put",
            "course-reserves-storage.departments.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.course-types.collection.get",
          "displayName": "course reserves get course types collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.course-types.item.post",
          "displayName": "course reserves post course types item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.course-types.item.put",
          "displayName": "course reserves put course types item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.course-types.item.get",
          "displayName": "course reserves get course types item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.course-types.item.delete",
          "displayName": "course reserves delete course types item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.course-types.read",
          "displayName": "course reserves course storage read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.course-types.collection.get",
            "course-reserves-storage.course-types.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.course-types.write",
          "displayName": "course reserves course storage write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.course-types.item.post",
            "course-reserves-storage.course-types.item.put",
            "course-reserves-storage.course-types.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.collection.get",
          "displayName": "course reserves get processing statuses collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.item.put",
          "displayName": "course reserves put processing statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.item.post",
          "displayName": "course reserves post processing statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.item.get",
          "displayName": "course reserves get processing statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.item.delete",
          "displayName": "course reserves delete processing statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.read",
          "displayName": "course reserves processing statuses read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.processing-statuses.collection.get",
            "course-reserves-storage.processing-statuses.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.processing-statuses.write",
          "displayName": "course reserves processing statuses write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.processing-statuses.item.put",
            "course-reserves-storage.processing-statuses.item.post",
            "course-reserves-storage.processing-statuses.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.collection.get",
          "displayName": "course reserves get copyright statuses collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.item.put",
          "displayName": "course reserves put copyright statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.item.post",
          "displayName": "course reserves post copyright statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.item.get",
          "displayName": "course reserves get copyright statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.item.delete",
          "displayName": "course reserves delete copyright statuses item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.read",
          "displayName": "course reserves copyright statuses read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.copyright-statuses.collection.get",
            "course-reserves-storage.copyright-statuses.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.copyright-statuses.write",
          "displayName": "course reserves copyright statuses write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.copyright-statuses.item.put",
            "course-reserves-storage.copyright-statuses.item.post",
            "course-reserves-storage.copyright-statuses.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.roles.collection.get",
          "displayName": "course reserves get roles collection",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.roles.item.post",
          "displayName": "course reserves post roles item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.roles.item.get",
          "displayName": "course reserves get roles item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.roles.item.put",
          "displayName": "course reserves put roles item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.roles.item.delete",
          "displayName": "course reserves delete roles item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.roles.read",
          "displayName": "course reserves roles read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.roles.collection.get",
            "course-reserves-storage.roles.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.roles.write",
          "displayName": "course reserves roles write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.roles.read",
            "course-reserves-storage.roles.item.post",
            "course-reserves-storage.roles.item.put",
            "course-reserves-storage.roles.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.courses.collection.get",
          "displayName": "course reserves get course listing",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courses.item.post",
          "displayName": "course reserves post course item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courses.item.get",
          "displayName": "course reserves get course item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courses.item.put",
          "displayName": "course reserves put course item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courses.item.delete",
          "displayName": "course reserves delete course item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.courses.read",
          "displayName": "course reserves courses read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.courses.collection.get",
            "course-reserves-storage.courses.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.courses.write",
          "displayName": "course reserves courses write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.courses.read",
            "course-reserves-storage.courses.item.post",
            "course-reserves-storage.courses.item.put",
            "course-reserves-storage.courses.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.reserves.collection.get",
          "displayName": "course reserves get reserve listing",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.reserves.item.post",
          "displayName": "course reserves post reserve item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.reserves.item.get",
          "displayName": "course reserves get reserve item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.reserves.item.put",
          "displayName": "course reserves put reserve item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.reserves.item.delete",
          "displayName": "course reserves delete reserve item",
          "description": "pending"
        },
                {
          "permissionName": "course-reserves-storage.reserves.read",
          "displayName": "course reserves reserves read permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.reserves.collection.get",
            "course-reserves-storage.reserves.item.get"
          ]
        },
                {
          "permissionName": "course-reserves-storage.reserves.write",
          "displayName": "course reserves reserves write permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.reserves.read",
            "course-reserves-storage.reserves.item.post",
            "course-reserves-storage.reserves.item.put",
            "course-reserves-storage.reserves.item.delete"
          ]
        },
                {
          "permissionName": "course-reserves-storage.all",
          "displayName": "course reserves all permissions",
          "description": "pending",
          "subPermissions":           [
            "course-reserves-storage.terms.write",
            "course-reserves-storage.courselistings.write",
            "course-reserves-storage.roles.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.courses.write",
            "course-reserves-storage.reserves.write"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-courses:1.4.11",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-source-record-storage-5.10.4",
      "name": "Source Record Storage Module",
      "provides":       [
                {
          "id": "source-storage-snapshots",
          "version": "2.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/snapshots",
              "permissionsRequired": ["source-storage.snapshots.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/snapshots",
              "permissionsRequired": ["source-storage.snapshots.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": ["source-storage.snapshots.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": ["source-storage.snapshots.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": ["source-storage.snapshots.delete"],
              "modulePermissions": ["inventory.instances.item.delete"]
            }
          ]
        },
                {
          "id": "source-storage-records",
          "version": "3.4",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/records",
              "permissionsRequired": ["source-storage.records.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/records",
              "permissionsRequired": ["source-storage.records.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": ["source-storage.records.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": ["source-storage.records.put"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/source-storage/records/{id}/generation",
              "permissionsRequired": ["source-storage.records.generation.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/records/{id}/un-delete",
              "permissionsRequired": ["source-storage.records.undelete.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": ["source-storage.records.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/records/{id}/formatted",
              "permissionsRequired": ["source-storage.records.formatted.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/source-storage/records/{id}/suppress-from-discovery",
              "permissionsRequired": ["source-storage.records.update"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/records/matching",
              "permissionsRequired": ["source-storage.records.matching.collection.post"]
            }
          ]
        },
                {
          "id": "source-storage-source-records",
          "version": "3.2",
          "handlers":           [
                        {
              "methods":               [
                "GET",
                "POST"
              ],
              "pathPattern": "/source-storage/source-records",
              "permissionsRequired": ["source-storage.source-records.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/source-records/{id}",
              "permissionsRequired": ["source-storage.source-records.item.get"]
            }
          ]
        },
                {
          "id": "source-storage-test-records",
          "version": "2.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/source-storage/populate-test-marc-records",
            "permissionsRequired": ["source-storage.records.populate.collection.post"]
          }]
        },
                {
          "id": "source-storage-stream",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/stream/records",
              "permissionsRequired": ["source-storage.stream.records.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/stream/source-records",
              "permissionsRequired": ["source-storage.stream.source-records.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/stream/marc-record-identifiers",
              "permissionsRequired": ["source-storage.stream.marc-record-identifiers.collection.post"]
            }
          ]
        },
                {
          "id": "source-storage-batch",
          "version": "1.3",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/batch/records",
              "permissionsRequired": ["source-storage.batch.records.collection.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/source-storage/batch/parsed-records",
              "permissionsRequired": ["source-storage.parsed-records.collection.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/batch/parsed-records/fetch",
              "permissionsRequired": ["source-storage.parsed-records.fetch.collection.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/batch/verified-records",
              "permissionsRequired": ["source-storage.verified-records.collection.post"]
            }
          ]
        },
                {
          "id": "source-storage-async-migrations",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/source-storage/migrations/jobs",
              "permissionsRequired": ["source-storage.migrations.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/source-storage/migrations/jobs/{id}",
              "permissionsRequired": ["source-storage.migrations.item.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "optional":       [
                {
          "id": "mapping-metadata-provider",
          "version": "1.0"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.2"
        },
                {
          "id": "instance-authority-links",
          "version": "2.0"
        },
                {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "source-storage.records.populate.collection.post",
          "displayName": "Source Storage - populate storage with test records",
          "description": "Populate storage with test records",
          "replaces": ["source-storage.populate.records"]
        },
                {
          "permissionName": "source-storage.snapshots.item.get",
          "displayName": "Source Storage - get snapshot",
          "description": "Get Snapshot",
          "replaces": ["source-storage.snapshots.get"]
        },
                {
          "permissionName": "source-storage.snapshots.collection.get",
          "displayName": "Source Storage - get snapshots",
          "description": "Get Snapshots",
          "replaces": ["source-storage.snapshots.get"]
        },
                {
          "permissionName": "source-storage.snapshots.post",
          "displayName": "Source Storage - create new snapshot",
          "description": "Post Snapshot"
        },
                {
          "permissionName": "source-storage.snapshots.put",
          "displayName": "Source Storage - update snapshot",
          "description": "Put Snapshot"
        },
                {
          "permissionName": "source-storage.snapshots.delete",
          "displayName": "Source Storage - delete snapshot and records",
          "description": "Delete Snapshot and all related Records"
        },
                {
          "permissionName": "source-storage.records.post",
          "displayName": "Source Storage - create new record",
          "description": "Post Record"
        },
                {
          "permissionName": "source-storage.records.put",
          "displayName": "Source Storage - update record",
          "description": "Put Record"
        },
                {
          "permissionName": "source-storage.records.generation.item.put",
          "displayName": "Source Storage - update record's generation",
          "description": "Update record's generation"
        },
                {
          "permissionName": "source-storage.records.undelete.item.post",
          "displayName": "Source Storage - undelete record",
          "description": "Undelete record"
        },
                {
          "permissionName": "source-storage.parsed-records.collection.put",
          "displayName": "Source Storage - update records",
          "description": "Update records"
        },
                {
          "permissionName": "source-storage.parsed-records.fetch.collection.post",
          "displayName": "Source Storage - fetch records",
          "description": "Fetch Records",
          "replaces": ["source-storage.records.fetch"]
        },
                {
          "permissionName": "source-storage.batch.records.collection.post",
          "displayName": "Source Storage - stream collection of records",
          "description": "Stream collection of records"
        },
                {
          "permissionName": "source-storage.stream.source-records.collection.get",
          "displayName": "Source Storage - get results",
          "description": "Source Storage - get results",
          "replaces": ["source-storage.sourceRecords.get"]
        },
                {
          "permissionName": "source-storage.stream.marc-record-identifiers.collection.post",
          "displayName": "Source Storage - post record's identifiers",
          "description": "Post record's identifiers",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.records.update",
          "displayName": "Source Storage - update record",
          "description": "Update Record's fields"
        },
                {
          "permissionName": "source-storage.records.delete",
          "displayName": "Source Storage - delete record",
          "description": "Delete Record"
        },
                {
          "permissionName": "source-storage.source-records.item.get",
          "displayName": "Source Storage - get source record",
          "description": "Get Source Record",
          "replaces": ["source-storage.sourceRecords.get"]
        },
                {
          "permissionName": "source-storage.records.collection.get",
          "displayName": "Source Storage - get records",
          "description": "Get Records",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.records.item.get",
          "displayName": "Source Storage - get record",
          "description": "Get Record",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.source-records.collection.get",
          "displayName": "Source Storage - get source record collection",
          "description": "Get Source Records",
          "replaces": ["source-storage.sourceRecords.get"]
        },
                {
          "permissionName": "source-storage.records.formatted.item.get",
          "displayName": "Source Storage - get formatter record",
          "description": "Get formatted Record",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.stream.records.collection.get",
          "displayName": "Source Storage - stream record",
          "description": "Stream record",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.records.matching.collection.post",
          "displayName": "Source Storage - get pairs of marc record ID to external entity ID",
          "description": "Get pairs of marc record ID to external entity ID",
          "replaces": ["source-storage.records.get"]
        },
                {
          "permissionName": "source-storage.verified-records.collection.post",
          "displayName": "Source Storage - validate marc bib ids in the system",
          "description": "Return marc bib ids, which doesn't exist in the system"
        },
                {
          "permissionName": "source-storage.migrations.post",
          "displayName": "Source Storage - initiate migration job",
          "description": "Initiate asynchronous migration job"
        },
                {
          "permissionName": "source-storage.migrations.item.get",
          "displayName": "Source Storage - get migration job(s)",
          "description": "Get migration job(s)",
          "replaces": ["source-storage.migrations.get"]
        },
                {
          "permissionName": "source-storage.all",
          "displayName": "Source Record Storage - all permissions",
          "description": "Entire set of permissions needed to manage snapshots and records",
          "subPermissions":           [
            "source-storage.records.populate.collection.post",
            "source-storage.snapshots.item.get",
            "source-storage.snapshots.collection.get",
            "source-storage.snapshots.post",
            "source-storage.snapshots.put",
            "source-storage.snapshots.delete",
            "source-storage.records.post",
            "source-storage.records.put",
            "source-storage.parsed-records.fetch.collection.post",
            "source-storage.records.delete",
            "source-storage.records.update",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get",
            "source-storage.verified-records.collection.post",
            "source-storage.migrations.post",
            "source-storage.migrations.item.get",
            "source-storage.records.generation.item.put",
            "source-storage.records.undelete.item.post",
            "source-storage.parsed-records.collection.put",
            "source-storage.batch-records.collection.post",
            "source-storage.batch.records.collection.post",
            "source-storage.stream.source-records.collection.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.marc-record-identifiers.collection.post",
            "source-storage.records.item.get",
            "source-storage.records.collection.get",
            "source-storage.stream.records.collection.get",
            "source-storage.records.matching.collection.post"
          ],
          "visible": false
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "instance-authority-links.instances.collection.get",
          "instance-authority.linking-rules.collection.get",
          "instance-authority-links.instances.collection.put",
          "converter-storage.jobprofilesnapshots.get",
          "user-tenants.collection.get",
          "mapping-metadata.item.get"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-source-record-storage:5.10.4",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "15"
          },
                    {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          }
        ]
      }
    },
        {
      "id": "mod-data-import-3.3.2",
      "name": "Data Import Module",
      "requires":       [
                {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "provides":       [
                {
          "id": "data-import",
          "version": "3.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/splitStatus",
              "permissionsRequired": ["data-import.splitconfig.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/uploadDefinitions",
              "permissionsRequired": ["data-import.uploaddefinitions.post"],
              "modulePermissions": ["change-manager.jobexecutions.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/uploadDefinitions",
              "permissionsRequired": ["data-import.uploadDefinitions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": ["data-import.uploadDefinitions.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": ["data-import.uploaddefinitions.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": ["data-import.uploaddefinitions.delete"],
              "modulePermissions":               [
                "change-manager.jobExecutions.item.get",
                "change-manager.jobExecutions.children.collection.get",
                "change-manager.jobExecutions.status.item.put"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}",
              "permissionsRequired": ["data-import.upload.file.post"],
              "modulePermissions":               [
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.status.item.put"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files",
              "permissionsRequired": ["data-import.uploadDefinitions.files.item.post"],
              "modulePermissions": ["change-manager.jobexecutions.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}/assembleStorageFile",
              "permissionsRequired": ["data-import.assembleStorageFile.post"],
              "modulePermissions":               [
                "change-manager.jobExecutions.status.item.put",
                "change-manager.jobExecutions.item.put"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}",
              "permissionsRequired": ["data-import.uploaddefinitions.files.delete"],
              "modulePermissions": ["change-manager.jobExecutions.status.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/processFiles",
              "permissionsRequired": ["data-import.uploadDefinitions.processFiles.item.post"],
              "modulePermissions":               [
                "change-manager.jobExecutions.item.get",
                "change-manager.jobExecutions.children.collection.get",
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.item.put",
                "change-manager.jobExecutions.status.item.put",
                "change-manager.jobExecutions.jobProfile.item.put",
                "mapping-metadata.item.get",
                "source-storage.records.collection.get",
                "source-storage.records.item.get",
                "source-storage.snapshots.item.get",
                "source-storage.snapshots.collection.get",
                "source-storage.snapshots.put",
                "users.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "converter-storage.field-protection-settings.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "invoice-storage.invoices.item.post",
                "invoice-storage.invoice-number.get",
                "acquisitions-units.units.collection.get",
                "acquisitions-units.memberships.collection.get",
                "invoice-storage.invoice-line-number.get",
                "invoice-storage.invoices.item.get",
                "invoice-storage.invoices.item.put",
                "invoice-storage.invoice-lines.item.post",
                "invoice-storage.invoice-lines.item.put",
                "invoice-storage.invoice-lines.collection.get",
                "acquisitions-units.units.collection.get",
                "acquisitions-units.memberships.collection.get",
                "orders.po-lines.item.get",
                "orders.po-lines.collection.get",
                "orders-storage.titles.item.get",
                "orders-storage.order-invoice-relationships.collection.get",
                "orders-storage.order-invoice-relationships.item.post",
                "finance.exchange-rate.item.get",
                "finance.expense-classes.collection.get",
                "finance.funds.budget.item.get",
                "finance.funds.item.get",
                "finance.fiscal-years.item.get",
                "finance.ledgers.collection.get",
                "finance.transactions.batch.execute",
                "finance.transactions.collection.get",
                "finance-storage.budgets.collection.get",
                "finance-storage.budget-expense-classes.collection.get",
                "finance-storage.fiscal-years.item.get",
                "modperms.orders.item.post",
                "modperms.orders.item.put",
                "orders-storage.purchase-orders.item.get",
                "orders-storage.po-line-number.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.po-lines.item.post",
                "orders-storage.alerts.item.post",
                "orders-storage.reporting-codes.item.post",
                "orders-storage.configuration.prefixes.collection.get",
                "orders-storage.configuration.suffixes.collection.get",
                "configuration.entries.collection.get",
                "acquisitions-units-storage.units.collection.get",
                "acquisitions-units-storage.memberships.collection.get",
                "isbn-utils.convert-to-13.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "user-tenants.collection.get",
                "organizations.organizations.collection.get",
                "source-storage.records.post",
                "source-storage.records.put",
                "source-storage.snapshots.post",
                "source-storage.records.matching.collection.post",
                "source-storage.records.formatted.item.get",
                "source-storage.records.generation.item.put",
                "finance.funds.collection.get",
                "orders-storage.acquisition-methods.collection.get"
              ],
              "permissionsDesired":               [
                "invoices.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.manage",
                "orders.item.approve",
                "orders.item.reopen",
                "orders.item.unopen"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/fileExtensions",
              "permissionsRequired": ["data-import.fileExtensions.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/fileExtensions",
              "permissionsRequired": ["data-import.fileExtensions.post"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": ["data-import.fileExtensions.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": ["data-import.fileExtensions.put"],
              "modulePermissions": ["users.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": ["data-import.fileExtensions.delete"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/data-import/fileExtensions/restore/default",
              "permissionsRequired": ["data-import.fileExtensions.default.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/dataTypes",
              "permissionsRequired": ["data-import.datatypes.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/uploadUrl",
              "permissionsRequired": ["data-import.uploadUrl.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/uploadUrl/subsequent",
              "permissionsRequired": ["data-import.uploadUrl.subsequent.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/jobExecutions/{id}/downloadUrl",
              "permissionsRequired": ["data-import.downloadUrl.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/data-import/jobExecutions/{jobExecutionId}/cancel",
              "permissionsRequired": ["data-import.jobexecution.cancel"],
              "modulePermissions":               [
                "change-manager.jobExecutions.item.put",
                "change-manager.jobExecutions.status.item.put"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/data-import/testFileSplit",
              "permissionsRequired": []
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "data-import.assembleStorageFile.post",
          "displayName": "Data Import - assemble a file out of uploaded fragments",
          "description": "Permission to assemble a file out of uploaded fragments"
        },
                {
          "permissionName": "data-import.splitconfig.get",
          "displayName": "Data Import - get the status of file splitting configuration",
          "description": "Get the status of file splitting configuration"
        },
                {
          "permissionName": "data-import.uploaddefinitions.post",
          "displayName": "Data Import - create new upload definition",
          "description": "Post Upload Definition"
        },
                {
          "permissionName": "data-import.uploadDefinitions.item.get",
          "displayName": "Data Import - get upload definition item",
          "description": "Get Upload Definition item",
          "replaces": ["data-import.uploaddefinitions.get"]
        },
                {
          "permissionName": "data-import.uploadDefinitions.collection.get",
          "displayName": "Data Import - get upload definition collection",
          "description": "Get Upload Definition collection",
          "replaces": ["data-import.uploaddefinitions.get"]
        },
                {
          "permissionName": "data-import.uploaddefinitions.put",
          "displayName": "Data Import - update upload definition",
          "description": "Put Upload Definition"
        },
                {
          "permissionName": "data-import.uploaddefinitions.delete",
          "displayName": "Data Import - delete upload definition",
          "description": "Delete Upload Definition"
        },
                {
          "permissionName": "data-import.upload.file.post",
          "displayName": "Data Import - upload file into the storage",
          "description": "Upload file"
        },
                {
          "permissionName": "data-import.uploaddefinitions.files.delete",
          "displayName": "Data Import - delete file from upload definition and storage",
          "description": "Delete file"
        },
                {
          "permissionName": "data-import.uploadDefinitions.files.item.post",
          "displayName": "Data Import - Create new File Definition",
          "description": "Create and handle File Definition",
          "replaces": ["data-import.uploaddefinitions.files.post"]
        },
                {
          "permissionName": "data-import.uploadDefinitions.processFiles.item.post",
          "displayName": "Data Import - Create new Process File Definition",
          "description": "Create and handle Process File Definition",
          "replaces": ["data-import.uploaddefinitions.files.post"]
        },
                {
          "permissionName": "data-import.fileExtensions.item.get",
          "displayName": "Data Import - get file extension",
          "description": "Get FileExtension",
          "replaces": ["data-import.fileExtensions.get"]
        },
                {
          "permissionName": "data-import.fileExtensions.collection.get",
          "displayName": "Data Import - get file extensions",
          "description": "Get FileExtensions",
          "replaces": ["data-import.fileExtensions.get"]
        },
                {
          "permissionName": "data-import.fileExtensions.post",
          "displayName": "Data Import - create new file extension",
          "description": "Post FileExtension"
        },
                {
          "permissionName": "data-import.fileExtensions.put",
          "displayName": "Data Import - update file extension",
          "description": "Put FileExtension"
        },
                {
          "permissionName": "data-import.fileExtensions.delete",
          "displayName": "Data Import - delete file extension",
          "description": "Delete FileExtension"
        },
                {
          "permissionName": "data-import.fileExtensions.default.post",
          "displayName": "Data Import - restore file extensions to default",
          "description": "Restore FileExtension to default",
          "replaces": ["data-import.fileExtensions.default"]
        },
                {
          "permissionName": "data-import.datatypes.get",
          "displayName": "Data Import - get data types",
          "description": "Get DataTypes"
        },
                {
          "permissionName": "data-import.uploadUrl.item.get",
          "displayName": "Data Import - get S3 upload URL for the first part of a file",
          "description": "Get S3 upload URL for the first part of a file",
          "replaces": ["data-import.uploadUrl.get"]
        },
                {
          "permissionName": "data-import.uploadUrl.subsequent.item.get",
          "displayName": "Data Import - get S3 upload URL for the last part of a file",
          "description": "Get S3 upload URL for the last part of a file",
          "replaces": ["data-import.uploadUrl.get"]
        },
                {
          "permissionName": "data-import.downloadUrl.get",
          "displayName": "Data Import - get S3 download URL",
          "description": "Get S3 download URL"
        },
                {
          "permissionName": "data-import.jobexecution.cancel",
          "displayName": "Data Import - cancel running job",
          "description": "Cancel running job"
        },
                {
          "permissionName": "data-import.upload.all",
          "displayName": "Data Import File Upload - all permissions",
          "description": "Entire set of permissions needed to use file uploads",
          "subPermissions":           [
            "data-import.upload.file.post",
            "data-import.uploadUrl.item.get",
            "data-import.uploadUrl.subsequent.item.get",
            "data-import.uploaddefinitions.post",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "data-import.uploaddefinitions.put",
            "data-import.uploaddefinitions.delete",
            "data-import.uploaddefinitions.files.delete",
            "data-import.uploadDefinitions.files.item.post",
            "data-import.uploadDefinitions.processFiles.item.post",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.fileExtensions.post",
            "data-import.fileExtensions.put",
            "data-import.fileExtensions.delete",
            "data-import.fileExtensions.default.post",
            "data-import.datatypes.get"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-data-import:3.3.2",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 542293850,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "AWS_URL",
            "value": "http://127.0.0.1:9000/"
          },
                    {
            "name": "AWS_REGION",
            "value": ""
          },
                    {
            "name": "AWS_BUCKET",
            "value": "example-bucket"
          },
                    {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
                    {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/EXAMPLEKEY"
          },
                    {
            "name": "AWS_SDK",
            "value": "false"
          },
                    {
            "name": "S3_FORCEPATHSTYLE",
            "value": "false"
          },
                    {
            "name": "SPLIT_FILES_ENABLED",
            "value": "false"
          },
                    {
            "name": "RECORDS_PER_SPLIT_FILE",
            "value": "1000"
          },
                    {
            "name": "SCORE_JOB_SMALLEST",
            "value": "40"
          },
                    {
            "name": "SCORE_JOB_LARGEST",
            "value": "-40"
          },
                    {
            "name": "SCORE_JOB_REFERENCE",
            "value": "100000"
          },
                    {
            "name": "SCORE_AGE_NEWEST",
            "value": "0"
          },
                    {
            "name": "SCORE_AGE_OLDEST",
            "value": "50"
          },
                    {
            "name": "SCORE_AGE_EXTREME_THRESHOLD_MINUTES",
            "value": "480"
          },
                    {
            "name": "SCORE_AGE_EXTREME_VALUE",
            "value": "10000"
          },
                    {
            "name": "SCORE_TENANT_USAGE_MIN",
            "value": "100"
          },
                    {
            "name": "SCORE_TENANT_USAGE_MAX",
            "value": "-200"
          },
                    {
            "name": "SCORE_PART_NUMBER_FIRST",
            "value": "1"
          },
                    {
            "name": "SCORE_PART_NUMBER_LAST",
            "value": "0"
          },
                    {
            "name": "SCORE_PART_NUMBER_LAST_REFERENCE",
            "value": "100"
          },
                    {
            "name": "ASYNC_PROCESSOR_POLL_INTERVAL_MS",
            "value": "5000"
          },
                    {
            "name": "ASYNC_PROCESSOR_MAX_WORKERS_COUNT",
            "value": "1"
          }
        ]
      }
    },
        {
      "id": "mod-agreements-7.2.2",
      "name": "mod-agreements",
      "provides":       [
                {
          "id": "erm",
          "version": "7.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas",
              "permissionsRequired": ["erm.agreements.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/publicLookup",
              "modulePermissions": ["licenses.licenses.item.get"],
              "permissionsRequired": []
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}",
              "permissionsRequired": ["erm.agreements.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/export",
              "permissionsRequired": ["erm.agreements.export"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/export/*",
              "permissionsRequired": ["erm.agreements_with_resource_subset.export"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/linkedLicenses",
              "permissionsRequired": ["erm.linkedLicenses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/linkedLicenses",
              "permissionsRequired": ["erm.agreements.linkedLicenses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/usageDataProviders",
              "permissionsRequired": ["erm.usageDataProviders.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/usageDataProviders",
              "permissionsRequired": ["erm.agreements.usageDataProviders.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/resources",
              "permissionsRequired": ["erm.agreements.resources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/resources/*",
              "permissionsRequired": ["erm.agreements.resources.subset.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/resources/export",
              "permissionsRequired": ["erm.agreements.resources.export"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sas/{id}/resources/export/*",
              "permissionsRequired": ["erm.agreements.resources.subset_by_format.export"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/sas",
              "permissionsRequired": ["erm.agreements.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/sas/{id}",
              "permissionsRequired": ["erm.agreements.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/sas/{id}/clone",
              "permissionsRequired": ["erm.agreements.clone.execute"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/sas/{id}",
              "permissionsRequired": ["erm.agreements.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/export",
              "permissionsRequired": ["erm.all.agreements.resources.export"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/export/*",
              "permissionsRequired": ["erm.all.agreements.resources.subset_by_format.export"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/entitlements",
              "permissionsRequired": ["erm.entitlements.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/entitlements/{id}",
              "permissionsRequired": ["erm.entitlements.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/entitlements/{id}",
              "permissionsRequired": ["erm.entitlements.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/entitlements",
              "permissionsRequired": ["erm.entitlements.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/entitlements/{id}",
              "permissionsRequired": ["erm.entitlements.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/files",
              "permissionsRequired": ["erm.files.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/files/{id}",
              "permissionsRequired": ["erm.files.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/files/{id}/raw",
              "permissionsRequired": ["erm.files.item.download"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/files",
              "permissionsRequired": ["erm.files.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/files/{id}",
              "permissionsRequired": ["erm.files.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/files/{id}",
              "permissionsRequired": ["erm.files.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/contacts",
              "permissionsRequired": ["erm.contacts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/contacts/{id}",
              "permissionsRequired": ["erm.contacts.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/org",
              "permissionsRequired": ["erm.orgs.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/org/{id}",
              "permissionsRequired": ["erm.orgs.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages",
              "permissionsRequired": ["erm.packages.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/{id}",
              "permissionsRequired": ["erm.packages.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/{id}/content",
              "permissionsRequired": ["erm.packages.content.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/{id}/content/*",
              "permissionsRequired": ["erm.packages.content.subset.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/sources",
              "permissionsRequired": ["erm.packages.sources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs",
              "permissionsRequired": ["erm.jobs.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}",
              "permissionsRequired": ["erm.jobs.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/fullLog",
              "permissionsRequired": ["erm.jobs.fullLog.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/errorLog",
              "permissionsRequired": ["erm.jobs.errorLog.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/infoLog",
              "permissionsRequired": ["erm.jobs.infoLog.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/fullLogStream",
              "permissionsRequired": ["erm.jobs.fullLogStream.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/errorLogStream",
              "permissionsRequired": ["erm.jobs.errorLogStream.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/infoLogStream",
              "permissionsRequired": ["erm.jobs.infoLogStream.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/{id}/downloadFileObject",
              "permissionsRequired": ["erm.jobs.fileObject.download"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/jobs/{type}",
              "permissionsRequired": ["erm.jobs.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/jobs/{id}",
              "permissionsRequired": ["erm.jobs.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/jobs/type/{type}",
              "permissionsRequired": ["erm.jobs_by_type.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/refdata",
              "permissionsRequired": ["erm.refdata.category.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/refdata/{domain}/{property}",
              "permissionsRequired": ["erm.refdata.value.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/refdata/{id}",
              "permissionsRequired": ["erm.refdata.category.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/refdata",
              "permissionsRequired": ["erm.refdata.category.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/refdata/{id}",
              "permissionsRequired": ["erm.refdata.category.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/refdata/{id}",
              "permissionsRequired": ["erm.refdata.category.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/kbs",
              "permissionsRequired": ["erm.kbs.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/kbs/{id}",
              "permissionsRequired": ["erm.kbs.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/kbs",
              "permissionsRequired": ["erm.kbs.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/kbs/{id}",
              "permissionsRequired": ["erm.kbs.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/kbs/{id}",
              "permissionsRequired": ["erm.kbs.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource",
              "permissionsRequired": ["erm.resources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/electronic",
              "permissionsRequired": ["erm.resources.electronic.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/{id}",
              "permissionsRequired": ["erm.resources.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/{id}/entitlements",
              "permissionsRequired": ["erm.resources.entitlement.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/{id}/entitlements/related",
              "permissionsRequired": ["erm.resources.entitlement.related.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/{id}/entitlementOptions",
              "permissionsRequired": ["erm.resources.entitlementOptions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/resource/{id}/static/entitlementOptions",
              "permissionsRequired": ["erm.resources.entitlementOptions.static.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/titles",
              "permissionsRequired": ["erm.titles.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/titles/electronic",
              "permissionsRequired": ["erm.titles.electronic.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/titles/entitled",
              "permissionsRequired": ["erm.titles.entitled.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/titles/{id}",
              "permissionsRequired": ["erm.titles.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/titles/{id}",
              "permissionsRequired": ["erm.titles.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/pci",
              "permissionsRequired": ["erm.pci.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/pci/{id}",
              "permissionsRequired": ["erm.pci.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/pci/{id}",
              "permissionsRequired": ["erm.pci.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/platforms",
              "permissionsRequired": ["erm.platforms.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/platforms/{id}",
              "permissionsRequired": ["erm.platforms.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/platforms/{id}",
              "permissionsRequired": ["erm.platforms.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/pti",
              "permissionsRequired": ["erm.pti.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/pti/{id}",
              "permissionsRequired": ["erm.pti.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/pti/{id}",
              "permissionsRequired": ["erm.pti.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/custprops",
              "permissionsRequired": ["erm.custprops.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/custprops/{id}",
              "permissionsRequired": ["erm.custprops.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/custprops",
              "permissionsRequired": ["erm.custprops.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/custprops/{id}",
              "permissionsRequired": ["erm.custprops.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/custprops/{id}",
              "permissionsRequired": ["erm.custprops.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/custprops/contexts",
              "permissionsRequired": ["erm.custprops.contexts.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/packages/import",
              "permissionsRequired": ["erm.packages.collection.import"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/packages/controlSync",
              "permissionsRequired": ["erm.packages.collection.controlSync.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/metadata",
              "permissionsRequired": ["erm.packages.metadata.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/metadata/{id}",
              "permissionsRequired": ["erm.packages.metadata.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/packages/{id}/metadata",
              "permissionsRequired": ["erm.packages.item.metadata.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/validate/subscriptionAgreement",
              "permissionsRequired": ["erm.agreements.validate"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/validate/subscriptionAgreement/*",
              "permissionsRequired": ["erm.agreements.property.validate"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/validate/remoteKB",
              "permissionsRequired": ["erm.kbs.validate"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/validate/remoteKB/*",
              "permissionsRequired": ["erm.kbs.property.validate"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sts",
              "permissionsRequired": ["erm.sts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sts/{id}",
              "permissionsRequired": ["erm.sts.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/sts",
              "permissionsRequired": ["erm.sts.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/sts/{id}",
              "permissionsRequired": ["erm.sts.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/sts/{id}",
              "permissionsRequired": ["erm.sts.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sts/template",
              "permissionsRequired": ["erm.sts.template.generate"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/sts/template/{id}",
              "permissionsRequired": ["erm.sts_for_platform_id.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/entitlementLogEntry",
              "permissionsRequired": ["erm.entitlements.logEntry.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/admin/*",
              "permissionsRequired": ["erm.admin.action.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/settings*",
              "permissionsRequired": ["erm.settings.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/settings*",
              "permissionsRequired": ["erm.settings.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/erm/settings*",
              "permissionsRequired": ["erm.settings.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/erm/settings*",
              "permissionsRequired": ["erm.settings.delete"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/erm/pushKB*",
              "permissionsRequired": ["erm.pushkb.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/erm/pushKB*",
              "permissionsRequired": ["erm.pushkb.get"]
            }
          ]
        },
                {
          "id": "dashboard",
          "interfaceType": "multiple",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/dashboard/definitions",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods":               [
                "POST",
                "DELETE"
              ],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant/disable"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "permissionsRequired": [],
            "methods": ["GET"],
            "pathPattern": "/erm/admin/triggerHousekeeping",
            "unit": "hour",
            "delay": "24"
          }]
        }
      ],
      "optional":       [
                {
          "id": "usage-data-providers",
          "version": "3.0"
        },
                {
          "id": "licenses",
          "version": "6.1"
        },
                {
          "id": "eholdings",
          "version": "4.0"
        },
                {
          "id": "organizations.organizations",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "erm.agreements.collection.get",
          "displayName": "Agreements collection get",
          "description": "Get a collection of agreement records"
        },
                {
          "permissionName": "erm.agreements.item.get",
          "displayName": "Agreements item get",
          "description": "Get an agreement record"
        },
                {
          "permissionName": "erm.agreements.resources.collection.get",
          "displayName": "Agreements resources get",
          "description": "Get an agreement record's resources",
          "replaces": ["erm.agreements.item.resources.get"]
        },
                {
          "permissionName": "erm.agreements.resources.subset.collection.get",
          "displayName": "Agreements resources subset get",
          "description": "Get a subset of an agreement record's resources (eg \"future\" or \"dropped\")",
          "replaces": ["erm.agreements.item.resources.get"]
        },
                {
          "permissionName": "erm.agreements.export",
          "displayName": "Agreements export",
          "description": "Export an agreement"
        },
                {
          "permissionName": "erm.agreements_with_resource_subset.export",
          "displayName": "Agreements subset export",
          "description": "Export some slice of an agreement"
        },
                {
          "permissionName": "erm.agreements.resources.export",
          "displayName": "Agreements resources export",
          "description": "Export the resources for an agreement"
        },
                {
          "permissionName": "erm.agreements.resources.subset_by_format.export",
          "displayName": "Agreements resources specific export",
          "description": "Export the resources for an agreement as a subset and/or specifying a format"
        },
                {
          "permissionName": "erm.all.agreements.resources.export",
          "displayName": "All agreements export resources",
          "description": "Export all resources for all agreements"
        },
                {
          "permissionName": "erm.all.agreements.resources.subset_by_format.export",
          "displayName": "Agreements direct subset export",
          "description": "Export a subset of all resources across all agreements"
        },
                {
          "permissionName": "erm.agreements.linkedLicenses.collection.get",
          "displayName": "Agreements linked licenses collection get",
          "description": "Get the linked licenses for an agreement",
          "replaces": ["erm.agreements.linkedLicenses.get"]
        },
                {
          "permissionName": "erm.linkedLicenses.collection.get",
          "displayName": "Linked licenses collection get",
          "description": "Get collection of linked license records",
          "replaces": ["erm.agreements.linkedLicenses.get"]
        },
                {
          "permissionName": "erm.usageDataProviders.collection.get",
          "displayName": "Usage data providers collection get",
          "description": "Get usage data providers",
          "replaces": ["erm.agreements.usageDataProviders.get"]
        },
                {
          "permissionName": "erm.agreements.usageDataProviders.collection.get",
          "displayName": "Agreements usage data providers collection get",
          "description": "Get the usage data providers for an agreement"
        },
                {
          "permissionName": "erm.agreements.validate",
          "displayName": "Validate subscription agreement",
          "description": "Validate a subscription agreement record"
        },
                {
          "permissionName": "erm.agreements.property.validate",
          "displayName": "Validate SubscriptionAgreement property",
          "description": "Validate a property on a SubscriptionAgreement record"
        },
                {
          "permissionName": "erm.agreements.view",
          "subPermissions":           [
            "erm.agreements.collection.get",
            "erm.agreements.item.get",
            "erm.agreements.resources.collection.get",
            "erm.agreements.resources.subset.collection.get",
            "erm.agreements.export",
            "erm.agreements_with_resource_subset.export",
            "erm.agreements.resources.export",
            "erm.agreements.resources.subset_by_format.export",
            "erm.all.agreements.resources.export",
            "erm.all.agreements.resources.subset_by_format.export",
            "erm.agreements.linkedLicenses.collection.get",
            "erm.usageDataProviders.collection.get",
            "erm.agreements.usageDataProviders.collection.get",
            "erm.resources.view"
          ]
        },
                {
          "permissionName": "erm.agreements.item.post",
          "displayName": "Agreements item post",
          "description": "Post an agreement"
        },
                {
          "permissionName": "erm.agreements.item.put",
          "displayName": "Agreements item put",
          "description": "Put an agreement"
        },
                {
          "permissionName": "erm.agreements.clone.execute",
          "displayName": "Agreements item clone",
          "description": "Clone an agreement",
          "replaces": ["erm.agreements.item.clone"]
        },
                {
          "permissionName": "erm.agreements.edit",
          "subPermissions":           [
            "erm.agreements.view",
            "erm.agreements.item.post",
            "erm.agreements.item.put",
            "erm.agreements.clone.execute",
            "erm.agreements.validate",
            "erm.agreements.property.validate"
          ]
        },
                {
          "permissionName": "erm.agreements.item.delete",
          "displayName": "Agreements item delete",
          "description": "Delete an agreement"
        },
                {
          "permissionName": "erm.agreements.manage",
          "subPermissions":           [
            "erm.agreements.edit",
            "erm.agreements.item.delete"
          ]
        },
                {
          "permissionName": "erm.files.collection.get",
          "displayName": "Files collection get",
          "description": "Get a collection of files records"
        },
                {
          "permissionName": "erm.files.item.get",
          "displayName": "Files item get",
          "description": "Get a file record"
        },
                {
          "permissionName": "erm.files.view",
          "subPermissions":           [
            "erm.files.collection.get",
            "erm.files.item.get"
          ]
        },
                {
          "permissionName": "erm.files.item.download",
          "displayName": "Files item download",
          "description": "Download a raw files record"
        },
                {
          "permissionName": "erm.files.item.post",
          "displayName": "Files item post",
          "description": "Post a file record"
        },
                {
          "permissionName": "erm.files.item.put",
          "displayName": "Files item put",
          "description": "Put a file record"
        },
                {
          "permissionName": "erm.files.edit",
          "subPermissions":           [
            "erm.files.view",
            "erm.files.item.post",
            "erm.files.item.put"
          ]
        },
                {
          "permissionName": "erm.files.item.delete",
          "displayName": "Files item delete",
          "description": "Delete a file record"
        },
                {
          "permissionName": "erm.files.manage",
          "subPermissions":           [
            "erm.files.edit",
            "erm.files.item.delete"
          ]
        },
                {
          "permissionName": "erm.contacts.collection.get",
          "displayName": "Contacts collection get",
          "description": "Get a collection of contacts records"
        },
                {
          "permissionName": "erm.contacts.item.get",
          "displayName": "Contacts item get",
          "description": "Get contact record"
        },
                {
          "permissionName": "erm.contacts.view",
          "subPermissions":           [
            "erm.contacts.collection.get",
            "erm.contacts.item.get"
          ]
        },
                {
          "permissionName": "erm.orgs.collection.get",
          "displayName": "Orgs collection get",
          "description": "Get a collection of orgs records"
        },
                {
          "permissionName": "erm.orgs.item.get",
          "displayName": "Orgs item get",
          "description": "Get org record"
        },
                {
          "permissionName": "erm.orgs.view",
          "subPermissions":           [
            "erm.orgs.collection.get",
            "erm.orgs.item.get"
          ]
        },
                {
          "permissionName": "erm.packages.collection.get",
          "displayName": "Packages collection get",
          "description": "Get a collection of package records"
        },
                {
          "permissionName": "erm.packages.sources.collection.get",
          "displayName": "Packages sources get",
          "description": "Get sources for all package records"
        },
                {
          "permissionName": "erm.packages.item.get",
          "displayName": "Package item get",
          "description": "Get package record"
        },
                {
          "permissionName": "erm.packages.content.collection.get",
          "displayName": "Package item content get",
          "description": "Get package record's contents",
          "replaces": ["erm.packages.item.content.get"]
        },
                {
          "permissionName": "erm.packages.metadata.collection.get",
          "displayName": "Package ingress metadata collection get",
          "description": "Get a collection of package ingress metadata objects"
        },
                {
          "permissionName": "erm.packages.metadata.item.get",
          "displayName": "Package ingress metadata item get",
          "description": "Get a package ingress metadata item"
        },
                {
          "permissionName": "erm.packages.item.metadata.item.get",
          "displayName": "Package ingress metadata item get",
          "description": "Get the package ingress metadata item for a package item"
        },
                {
          "permissionName": "erm.packages.content.subset.collection.get",
          "displayName": "Package item content subset get",
          "description": "Get a subset of a package record's contents",
          "replaces": ["erm.packages.item.content.get"]
        },
                {
          "permissionName": "erm.packages.metadata.view",
          "subPermissions":           [
            "erm.packages.metadata.collection.get",
            "erm.packages.metadata.item.get",
            "erm.packages.item.metadata.item.get"
          ]
        },
                {
          "permissionName": "erm.packages.view",
          "subPermissions":           [
            "erm.packages.collection.get",
            "erm.packages.sources.collection.get",
            "erm.packages.item.get",
            "erm.packages.content.collection.get",
            "erm.packages.content.subset.collection.get",
            "erm.packages.metadata.view"
          ]
        },
                {
          "permissionName": "erm.jobs.collection.get",
          "displayName": "Jobs collection get",
          "description": "Get a collection of job records"
        },
                {
          "permissionName": "erm.jobs_by_type.collection.get",
          "displayName": "Jobs by type collection get",
          "description": "Get a collection of job records by job type"
        },
                {
          "permissionName": "erm.jobs.item.get",
          "displayName": "Job item get",
          "description": "Get job record"
        },
                {
          "permissionName": "erm.jobs.fullLog.collection.get",
          "displayName": "Job full log get",
          "description": "Get full logs for job record"
        },
                {
          "permissionName": "erm.jobs.infoLog.collection.get",
          "displayName": "Job info log get",
          "description": "Get info logs for job record"
        },
                {
          "permissionName": "erm.jobs.errorLog.collection.get",
          "displayName": "Job error log get",
          "description": "Get error logs for job record"
        },
                {
          "permissionName": "erm.jobs.fullLogStream.get",
          "displayName": "Job full log get",
          "description": "Get full log stream for job record"
        },
                {
          "permissionName": "erm.jobs.infoLogStream.get",
          "displayName": "Job info log get",
          "description": "Get info log stream for job record"
        },
                {
          "permissionName": "erm.jobs.errorLogStream.get",
          "displayName": "Job error log get",
          "description": "Get error log stream for job record"
        },
                {
          "permissionName": "erm.jobs.fileObject.download",
          "displayName": "Job file object download",
          "description": "Download file object for  job record"
        },
                {
          "permissionName": "erm.jobs.logs.view",
          "subPermissions":           [
            "erm.jobs.fullLog.collection.get",
            "erm.jobs.fullLogStream.get",
            "erm.jobs.infoLog.collection.get",
            "erm.jobs.infoLogStream.get",
            "erm.jobs.errorLog.collection.get",
            "erm.jobs.errorLogStream.get"
          ]
        },
                {
          "permissionName": "erm.jobs.view",
          "subPermissions":           [
            "erm.jobs.collection.get",
            "erm.jobs_by_type.collection.get",
            "erm.jobs.item.get",
            "erm.jobs.logs.view",
            "erm.jobs.fileObject.download"
          ]
        },
                {
          "permissionName": "erm.jobs.item.post",
          "displayName": "Job item post",
          "description": "Post job record"
        },
                {
          "permissionName": "erm.jobs.edit",
          "subPermissions": ["erm.jobs.item.post"]
        },
                {
          "permissionName": "erm.jobs.item.delete",
          "displayName": "Job item delete",
          "description": "Delete job record"
        },
                {
          "permissionName": "erm.jobs.manage",
          "subPermissions":           [
            "erm.jobs.edit",
            "erm.jobs.item.delete"
          ]
        },
                {
          "permissionName": "erm.refdata.category.collection.get",
          "displayName": "Refdata category collection get",
          "description": "Get a collection of refdata category records",
          "replaces": ["erm.refdata.collection.get"]
        },
                {
          "permissionName": "erm.refdata.value.collection.get",
          "displayName": "Refdata value collection get",
          "description": "Get a collection of refdata value records",
          "replaces": ["erm.refdata.collection.get"]
        },
                {
          "permissionName": "erm.refdata.category.item.get",
          "displayName": "Refdata item category get",
          "description": "Get refdata category record",
          "replaces": ["erm.refdata.item.get"]
        },
                {
          "permissionName": "erm.refdata.view",
          "subPermissions":           [
            "erm.refdata.value.collection.get",
            "erm.refdata.category.collection.get",
            "erm.refdata.category.item.get"
          ]
        },
                {
          "permissionName": "erm.refdata.category.item.post",
          "displayName": "Refdata category item post",
          "description": "Post refdata category record",
          "replaces": ["erm.refdata.item.post"]
        },
                {
          "permissionName": "erm.refdata.category.item.put",
          "displayName": "Refdata category item put",
          "description": "Put refdata category record",
          "replaces": ["erm.refdata.item.put"]
        },
                {
          "permissionName": "erm.refdata.edit",
          "subPermissions":           [
            "erm.refdata.view",
            "erm.refdata.category.item.post",
            "erm.refdata.category.item.put"
          ]
        },
                {
          "permissionName": "erm.refdata.category.item.delete",
          "displayName": "Refdata category item delete",
          "description": "Delete refdata category record",
          "replaces": ["erm.refdata.item.delete"]
        },
                {
          "permissionName": "erm.refdata.manage",
          "subPermissions":           [
            "erm.refdata.edit",
            "erm.refdata.category.item.delete"
          ]
        },
                {
          "permissionName": "erm.kbs.collection.get",
          "displayName": "Knowledge bases collection get",
          "description": "Get a collection of knowledge base records"
        },
                {
          "permissionName": "erm.kbs.item.get",
          "displayName": "Knowledge base item get",
          "description": "Get knowledge base record"
        },
                {
          "permissionName": "erm.kbs.validate",
          "displayName": "Validate RemoteKB",
          "description": "Validate a RemoteKB record"
        },
                {
          "permissionName": "erm.kbs.property.validate",
          "displayName": "Validate RemoteKB property",
          "description": "Validate a property on a RemoteKB record"
        },
                {
          "permissionName": "erm.kbs.view",
          "subPermissions":           [
            "erm.kbs.collection.get",
            "erm.kbs.item.get"
          ]
        },
                {
          "permissionName": "erm.kbs.item.post",
          "displayName": "Knowledge base item post",
          "description": "Post knowledge base record"
        },
                {
          "permissionName": "erm.kbs.item.put",
          "displayName": "Knowledge base item put",
          "description": "Put knowledge base record"
        },
                {
          "permissionName": "erm.kbs.edit",
          "subPermissions":           [
            "erm.kbs.view",
            "erm.kbs.item.post",
            "erm.kbs.item.put",
            "erm.kbs.validate",
            "erm.kbs.property.validate"
          ]
        },
                {
          "permissionName": "erm.kbs.item.delete",
          "displayName": "Knowledge base item delete",
          "description": "Delete knowledge base record"
        },
                {
          "permissionName": "erm.kbs.manage",
          "subPermissions":           [
            "erm.kbs.edit",
            "erm.kbs.item.delete"
          ]
        },
                {
          "permissionName": "erm.pci.collection.get",
          "displayName": "Package content item collection get",
          "description": "Get a collection of package content item records"
        },
                {
          "permissionName": "erm.pci.item.get",
          "displayName": "Package content item item get",
          "description": "Get package content item record"
        },
                {
          "permissionName": "erm.pci.view",
          "subPermissions":           [
            "erm.pci.collection.get",
            "erm.pci.item.get"
          ]
        },
                {
          "permissionName": "erm.pci.item.put",
          "displayName": "Package content item item put",
          "description": "Put package content item record"
        },
                {
          "permissionName": "erm.pci.edit",
          "subPermissions":           [
            "erm.pci.view",
            "erm.pci.item.put"
          ]
        },
                {
          "permissionName": "erm.pti.collection.get",
          "displayName": "Platform title instance collection get",
          "description": "Get a collection of platform title instance records"
        },
                {
          "permissionName": "erm.pti.item.get",
          "displayName": "Platform title instance item get",
          "description": "Get platform title instance record"
        },
                {
          "permissionName": "erm.pti.view",
          "subPermissions":           [
            "erm.pti.collection.get",
            "erm.pti.item.get"
          ]
        },
                {
          "permissionName": "erm.pti.item.put",
          "displayName": "Platform title instance item put",
          "description": "Put platform title instance record"
        },
                {
          "permissionName": "erm.pti.edit",
          "subPermissions":           [
            "erm.pti.view",
            "erm.pti.item.put"
          ]
        },
                {
          "permissionName": "erm.platforms.collection.get",
          "displayName": "Platform collection get",
          "description": "Get a collection of platform records"
        },
                {
          "permissionName": "erm.platforms.item.get",
          "displayName": "Platform item get",
          "description": "Get platform record"
        },
                {
          "permissionName": "erm.platforms.view",
          "subPermissions":           [
            "erm.platforms.collection.get",
            "erm.platforms.item.get"
          ]
        },
                {
          "permissionName": "erm.platforms.item.put",
          "displayName": "Platform item put",
          "description": "Put platform record"
        },
                {
          "permissionName": "erm.platforms.edit",
          "subPermissions":           [
            "erm.platforms.view",
            "erm.platforms.item.put"
          ]
        },
                {
          "permissionName": "erm.resources.collection.get",
          "displayName": "Resources collection get",
          "description": "Get a collection of resource records"
        },
                {
          "permissionName": "erm.resources.electronic.collection.get",
          "displayName": "Resources electronic collection get",
          "description": "Get a collection of electronic resource records"
        },
                {
          "permissionName": "erm.resources.item.get",
          "displayName": "Resources item get",
          "description": "Get resource record"
        },
                {
          "permissionName": "erm.resources.entitlement.collection.get",
          "displayName": "Resources entitlement get",
          "description": "Get entitlement records for a resource",
          "replaces": ["erm.resources.item.entitlement.get"]
        },
                {
          "permissionName": "erm.resources.entitlement.related.collection.get",
          "displayName": "Resources related entitlement get",
          "description": "Get related entitlement records for a resource",
          "replaces": ["erm.resources.item.entitlement.get"]
        },
                {
          "permissionName": "erm.resources.entitlementOptions.collection.get",
          "displayName": "Resources item entitlement options get",
          "description": "Get resource's entitlement options records",
          "replaces": ["erm.resources.item.entitlementOptions.get"]
        },
                {
          "permissionName": "erm.resources.entitlementOptions.static.collection.get",
          "displayName": "Resources item entitlement options get",
          "description": "Get resource's entitlement options records",
          "replaces": ["erm.resources.item.entitlementOptions.get"]
        },
                {
          "permissionName": "erm.resources.view",
          "subPermissions":           [
            "erm.resources.collection.get",
            "erm.resources.electronic.collection.get",
            "erm.resources.item.get",
            "erm.resources.entitlement.collection.get",
            "erm.resources.entitlement.related.collection.get",
            "erm.resources.entitlementOptions.collection.get",
            "erm.resources.entitlementOptions.static.collection.get",
            "erm.entitlements.view",
            "erm.kbs.collection.get"
          ]
        },
                {
          "permissionName": "erm.entitlements.collection.get",
          "displayName": "Entitlements collection get",
          "description": "Get a collection of entitlement records"
        },
                {
          "permissionName": "erm.entitlements.logEntry.collection.get",
          "displayName": "Entitlements log entry get",
          "description": "Get entitlement log entries"
        },
                {
          "permissionName": "erm.entitlements.item.get",
          "displayName": "Entitlements item get",
          "description": "Get entitlement record"
        },
                {
          "permissionName": "erm.entitlements.view",
          "subPermissions":           [
            "erm.entitlements.collection.get",
            "erm.entitlements.logEntry.collection.get",
            "erm.entitlements.item.get"
          ]
        },
                {
          "permissionName": "erm.entitlements.item.post",
          "displayName": "Entitlements item post",
          "description": "Post entitlement record"
        },
                {
          "permissionName": "erm.entitlements.item.put",
          "displayName": "Entitlements item put",
          "description": "Put entitlement record"
        },
                {
          "permissionName": "erm.entitlements.edit",
          "subPermissions":           [
            "erm.entitlements.view",
            "erm.entitlements.item.post",
            "erm.entitlements.item.put"
          ]
        },
                {
          "permissionName": "erm.entitlements.item.delete",
          "displayName": "Entitlements item delete",
          "description": "Delete entitlement record"
        },
                {
          "permissionName": "erm.entitlements.delete",
          "subPermissions":           [
            "erm.entitlements.view",
            "erm.entitlements.edit",
            "erm.entitlements.item.delete"
          ]
        },
                {
          "permissionName": "erm.titles.collection.get",
          "displayName": "Title collection get",
          "description": "Get a collection of title records"
        },
                {
          "permissionName": "erm.titles.electronic.collection.get",
          "displayName": "Electronic title collection get",
          "description": "Get a collection of electronic title records"
        },
                {
          "permissionName": "erm.titles.entitled.collection.get",
          "displayName": "Entitled title collection get",
          "description": "Get a collection of entitled title records"
        },
                {
          "permissionName": "erm.titles.item.get",
          "displayName": "Title item get",
          "description": "Get title record"
        },
                {
          "permissionName": "erm.titles.view",
          "subPermissions":           [
            "erm.titles.collection.get",
            "erm.titles.electronic.collection.get",
            "erm.titles.entitled.collection.get",
            "erm.titles.item.get"
          ]
        },
                {
          "permissionName": "erm.titles.item.put",
          "displayName": "Title item put",
          "description": "Put title record"
        },
                {
          "permissionName": "erm.titles.edit",
          "subPermissions":           [
            "erm.titles.view",
            "erm.titles.item.put"
          ]
        },
                {
          "permissionName": "erm.custprops.collection.get",
          "displayName": "Custom properties collection get",
          "description": "Get a collection of custom properties records"
        },
                {
          "permissionName": "erm.custprops.contexts.collection.get",
          "displayName": "Custom properties contexts collection get",
          "description": "Get all contexts for agreements custom properties"
        },
                {
          "permissionName": "erm.custprops.item.get",
          "displayName": "Custom property item get",
          "description": "Get custom property record"
        },
                {
          "permissionName": "erm.custprops.view",
          "subPermissions":           [
            "erm.custprops.collection.get",
            "erm.custprops.contexts.collection.get",
            "erm.custprops.item.get"
          ]
        },
                {
          "permissionName": "erm.custprops.item.post",
          "displayName": "Custom property item post",
          "description": "Post custom property record"
        },
                {
          "permissionName": "erm.custprops.item.put",
          "displayName": "Custom property item put",
          "description": "Put custom property record"
        },
                {
          "permissionName": "erm.custprops.edit",
          "subPermissions":           [
            "erm.custprops.view",
            "erm.custprops.item.post",
            "erm.custprops.item.put"
          ]
        },
                {
          "permissionName": "erm.custprops.item.delete",
          "displayName": "Custom property item delete",
          "description": "Delete custom property record"
        },
                {
          "permissionName": "erm.custprops.manage",
          "subPermissions":           [
            "erm.custprops.edit",
            "erm.custprops.item.delete"
          ]
        },
                {
          "permissionName": "erm.packages.collection.import",
          "displayName": "Packages collection import",
          "description": "Import a collection of package records"
        },
                {
          "permissionName": "erm.packages.collection.controlSync.execute",
          "displayName": "Packages collection control sync",
          "description": "Control the synchronization of a collection of package records"
        },
                {
          "permissionName": "erm.sts.collection.get",
          "displayName": "String templates collection get",
          "description": "Get a collection of string templates"
        },
                {
          "permissionName": "erm.sts_for_platform_id.collection.get",
          "displayName": "String templates for id collection get",
          "description": "Get a collection of string templates for a platform id"
        },
                {
          "permissionName": "erm.sts.item.get",
          "displayName": "String templates item get",
          "description": "Get a string template record"
        },
                {
          "permissionName": "erm.sts.view",
          "subPermissions":           [
            "erm.sts.collection.get",
            "erm.sts_for_platform_id.collection.get",
            "erm.sts.item.get"
          ]
        },
                {
          "permissionName": "erm.sts.item.post",
          "displayName": "String templates item post",
          "description": "Post a string template record"
        },
                {
          "permissionName": "erm.sts.item.put",
          "displayName": "String templates item put",
          "description": "Put a string template record"
        },
                {
          "permissionName": "erm.sts.edit",
          "subPermissions":           [
            "erm.sts.view",
            "erm.sts.item.post",
            "erm.sts.item.put"
          ]
        },
                {
          "permissionName": "erm.sts.item.delete",
          "displayName": "String templates item delete",
          "description": "Delete a string template record"
        },
                {
          "permissionName": "erm.sts.manage",
          "subPermissions":           [
            "erm.sts.edit",
            "erm.sts.item.delete"
          ]
        },
                {
          "permissionName": "erm.sts.template.generate",
          "displayName": "String templates perform template (DEPRECATED)",
          "description": "Performs string templating (DEPRECATED)",
          "replaces": ["erm.sts.template"]
        },
                {
          "permissionName": "erm.admin.action.execute",
          "displayName": "Admin endpoint perform action",
          "description": "Performs action from admin endpoint",
          "replaces": ["erm.admin.action"]
        },
                {
          "permissionName": "erm.settings.get",
          "displayName": "settings get",
          "description": "get settings",
          "visible": false
        },
                {
          "permissionName": "erm.settings.collection.get",
          "displayName": "settings collection get",
          "description": "get collection of settings",
          "visible": false
        },
                {
          "permissionName": "erm.settings.post",
          "displayName": "settings post",
          "description": "post settings",
          "visible": false
        },
                {
          "permissionName": "erm.settings.put",
          "displayName": "settings put",
          "description": "put settings",
          "visible": false
        },
                {
          "permissionName": "erm.settings.delete",
          "displayName": "settings delete",
          "description": "delete settings",
          "visible": false
        },
                {
          "permissionName": "erm.settings.read",
          "displayName": "settings read",
          "description": "read settings",
          "visible": false,
          "subPermissions":           [
            "erm.settings.get",
            "erm.settings.collection.get"
          ]
        },
                {
          "permissionName": "erm.settings.write",
          "displayName": "settings write",
          "description": "write settings",
          "visible": false,
          "subPermissions":           [
            "erm.settings.read",
            "erm.settings.post",
            "erm.settings.put"
          ]
        },
                {
          "permissionName": "erm.settings.manage",
          "displayName": "settings manage",
          "description": "manage settings",
          "visible": false,
          "subPermissions":           [
            "erm.settings.write",
            "erm.settings.delete"
          ]
        },
                {
          "permissionName": "erm.pushkb.get",
          "displayName": "pushKB get",
          "description": "GET from pushKB endpoints",
          "visible": false
        },
                {
          "permissionName": "erm.pushkb.post",
          "displayName": "pushKB post",
          "description": "POST to pushKB endpoints",
          "visible": false
        },
                {
          "permissionName": "erm.pushkb.view",
          "displayName": "PushKB view",
          "description": "View pushKB objects and configurations",
          "visible": true,
          "subPermissions": ["erm.pushkb.get"]
        },
                {
          "permissionName": "erm.pushkb.manage",
          "displayName": "PushKB manage",
          "description": "Post to pushKB endpoints, and view pushKB objects and configurations",
          "visible": true,
          "subPermissions":           [
            "erm.pushkb.view",
            "erm.pushkb.post"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-agreements:7.2.2",
        "dockerArgs": {"HostConfig":         {
          "Memory": 4294967296,
          "PortBindings": {"8080/tcp": [{"HostPort": "%p"}]}
        }},
        "dockerPull": false,
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-server -XX:+UseContainerSupport -XX:MaxRAMPercentage=67.0 -XX:+PrintFlagsFinal"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "50"
          }
        ]
      }
    },
        {
      "id": "mod-licenses-6.2.2",
      "name": "mod-licenses",
      "requires": [      {
        "id": "okapi",
        "version": "1.9"
      }],
      "optional":       [
                {
          "id": "erm",
          "version": "7.0"
        },
                {
          "id": "organizations.organizations",
          "version": "1.0"
        }
      ],
      "provides":       [
                {
          "id": "licenses",
          "version": "6.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/licenses",
              "permissionsRequired": ["licenses.licenses.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/licenses/{id}",
              "permissionsRequired": ["licenses.licenses.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/licenses/{id}/linkedAgreements",
              "permissionsRequired": ["licenses.licenses.item.linkedAgreements.get"],
              "modulePermissions":               [
                "erm.agreements.item.get",
                "erm.linkedLicenses.collection.get",
                "erm.agreements.linkedLicenses.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/licenses",
              "permissionsRequired": ["licenses.licenses.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/licenses/{id}",
              "permissionsRequired": ["licenses.licenses.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/licenses/{id}/clone",
              "permissionsRequired": ["licenses.licenses.clone.execute"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/licenses/{id}",
              "permissionsRequired": ["licenses.licenses.item.delete"],
              "modulePermissions":               [
                "erm.linkedLicenses.collection.get",
                "erm.agreements.linkedLicenses.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/amendments",
              "permissionsRequired": ["licenses.amendments.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/amendments/{id}",
              "permissionsRequired": ["licenses.amendments.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/amendments",
              "permissionsRequired": ["licenses.amendments.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/amendments/{id}",
              "permissionsRequired": ["licenses.amendments.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/amendments/{id}/clone",
              "permissionsRequired": ["licenses.amendments.clone.execute"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/amendments/{id}",
              "permissionsRequired": ["licenses.amendments.item.delete"],
              "modulePermissions":               [
                "erm.linkedLicenses.collection.get",
                "erm.agreements.linkedLicenses.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/files",
              "permissionsRequired": ["licenses.files.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/files/{id}",
              "permissionsRequired": ["licenses.files.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/files/{id}/raw",
              "permissionsRequired": ["licenses.files.item.download"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/files",
              "permissionsRequired": ["licenses.files.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/files/{id}",
              "permissionsRequired": ["licenses.files.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/files/{id}",
              "permissionsRequired": ["licenses.files.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/contacts",
              "permissionsRequired": ["licenses.contacts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/contacts/{id}",
              "permissionsRequired": ["licenses.contacts.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/org",
              "permissionsRequired": ["licenses.orgs.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/org/{id}",
              "permissionsRequired": ["licenses.orgs.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/refdata",
              "permissionsRequired": ["licenses.refdata.category.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/refdata/{domain}/{property}",
              "permissionsRequired": ["licenses.refdata.value.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/refdata/{id}",
              "permissionsRequired": ["licenses.refdata.category.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/refdata",
              "permissionsRequired": ["licenses.refdata.category.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/refdata/{id}",
              "permissionsRequired": ["licenses.refdata.category.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/refdata/{id}",
              "permissionsRequired": ["licenses.refdata.category.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/custprops",
              "permissionsRequired": ["licenses.custprops.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/custprops/{id}",
              "permissionsRequired": ["licenses.custprops.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/custprops",
              "permissionsRequired": ["licenses.custprops.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/custprops/{id}",
              "permissionsRequired": ["licenses.custprops.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/custprops/{id}",
              "permissionsRequired": ["licenses.custprops.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/custprops/contexts",
              "permissionsRequired": ["licenses.custprops.contexts.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/licenseLinks",
              "permissionsRequired": ["licenses.licenseLinks.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/licenseLinks/{id}",
              "permissionsRequired": ["licenses.licenseLinks.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/licenses/compareTerms",
              "permissionsRequired": ["licenses.custprops.compare.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/admin/*",
              "permissionsRequired": ["licenses.admin.action.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/licenses/settings*",
              "permissionsRequired": ["licenses.settings.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/licenses/settings*",
              "permissionsRequired": ["licenses.settings.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/licenses/settings*",
              "permissionsRequired": ["licenses.settings.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/licenses/settings*",
              "permissionsRequired": ["licenses.settings.delete"]
            }
          ]
        },
                {
          "id": "dashboard",
          "interfaceType": "multiple",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/dashboard/definitions",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods":               [
                "POST",
                "DELETE"
              ],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant/disable"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "permissionsRequired": [],
            "methods": ["GET"],
            "pathPattern": "/licenses/admin/triggerHousekeeping",
            "unit": "hour",
            "delay": "24"
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "licenses.licenses.collection.get",
          "displayName": "Licenses collection get",
          "description": "Get a collection of license records"
        },
                {
          "permissionName": "licenses.amendments.collection.get",
          "displayName": "Amendments collection get",
          "description": "Get a collection of amendment records"
        },
                {
          "permissionName": "licenses.licenses.item.get",
          "displayName": "Licenses item get",
          "description": "Get an license record"
        },
                {
          "permissionName": "licenses.amendments.item.get",
          "displayName": "Amendment item get",
          "description": "Get an amendment record"
        },
                {
          "permissionName": "licenses.licenses.item.linkedAgreements.get",
          "displayName": "Licenses item linked agreements get",
          "description": "Get an license's linked agreement records"
        },
                {
          "permissionName": "licenses.custprops.compare.execute",
          "displayName": "Licenses compare terms",
          "description": "Compare license terms",
          "replaces": ["licenses.compareTerms"]
        },
                {
          "permissionName": "licenses.licenses.view",
          "subPermissions":           [
            "licenses.licenses.collection.get",
            "licenses.amendments.collection.get",
            "licenses.licenses.item.get",
            "licenses.amendments.item.get",
            "licenses.licenses.item.linkedAgreements.get",
            "licenses.custprops.compare.execute"
          ]
        },
                {
          "permissionName": "licenses.licenses.item.post",
          "displayName": "Licenses item post",
          "description": "Post an license record"
        },
                {
          "permissionName": "licenses.amendments.item.post",
          "displayName": "Amendment item post",
          "description": "Post an amendment record"
        },
                {
          "permissionName": "licenses.licenses.item.put",
          "displayName": "Licenses item put",
          "description": "Put an license record"
        },
                {
          "permissionName": "licenses.amendments.item.put",
          "displayName": "Amendment item put",
          "description": "Put an amendment record"
        },
                {
          "permissionName": "licenses.licenses.clone.execute",
          "displayName": "Licenses item clone",
          "description": "Clone an license record",
          "replaces": ["licenses.licenses.item.clone"]
        },
                {
          "permissionName": "licenses.amendments.clone.execute",
          "displayName": "Amendment item clone",
          "description": "Clone an amendment record",
          "replaces": ["licenses.licenses.item.clone"]
        },
                {
          "permissionName": "licenses.licenses.edit",
          "subPermissions":           [
            "licenses.licenses.view",
            "licenses.licenses.item.post",
            "licenses.amendments.item.post",
            "licenses.licenses.item.put",
            "licenses.amendments.item.put",
            "licenses.licenses.clone.execute",
            "licenses.amendments.clone.execute"
          ]
        },
                {
          "permissionName": "licenses.licenses.item.delete",
          "displayName": "Licenses item delete",
          "description": "Delete an license record"
        },
                {
          "permissionName": "licenses.amendments.item.delete",
          "displayName": "Amendments item delete",
          "description": "Delete an amendment record"
        },
                {
          "permissionName": "licenses.licenses.manage",
          "subPermissions":           [
            "licenses.licenses.edit",
            "licenses.licenses.item.delete",
            "licenses.amendments.item.delete"
          ]
        },
                {
          "permissionName": "licenses.files.collection.get",
          "displayName": "Licenses files collection get",
          "description": "Get a collection of file records"
        },
                {
          "permissionName": "licenses.files.item.get",
          "displayName": "Licenses files item get",
          "description": "Get a files record"
        },
                {
          "permissionName": "licenses.files.view",
          "subPermissions":           [
            "licenses.files.collection.get",
            "licenses.files.item.get"
          ]
        },
                {
          "permissionName": "licenses.files.item.download",
          "displayName": "Licenses files item download",
          "description": "Download a raw files record"
        },
                {
          "permissionName": "licenses.files.item.post",
          "displayName": "Licenses files item post",
          "description": "Post a files record"
        },
                {
          "permissionName": "licenses.files.item.put",
          "displayName": "Licenses files item put",
          "description": "Put a files record"
        },
                {
          "permissionName": "licenses.files.edit",
          "subPermissions":           [
            "licenses.files.view",
            "licenses.files.item.post",
            "licenses.files.item.put"
          ]
        },
                {
          "permissionName": "licenses.files.item.delete",
          "displayName": "Licenses files item delete",
          "description": "Delete a files record"
        },
                {
          "permissionName": "licenses.files.manage",
          "subPermissions":           [
            "licenses.files.edit",
            "licenses.files.item.delete"
          ]
        },
                {
          "permissionName": "licenses.contacts.collection.get",
          "displayName": "Licenses contacts collection get",
          "description": "Get a collection of contact records"
        },
                {
          "permissionName": "licenses.contacts.item.get",
          "displayName": "Licenses contacts item get",
          "description": "Get a contact record"
        },
                {
          "permissionName": "licenses.contacts.view",
          "subPermissions":           [
            "licenses.contacts.collection.get",
            "licenses.contacts.item.get"
          ]
        },
                {
          "permissionName": "licenses.orgs.collection.get",
          "displayName": "Licenses orgs collection get",
          "description": "Get a collection of org records"
        },
                {
          "permissionName": "licenses.orgs.item.get",
          "displayName": "Licenses orgs item get",
          "description": "Get an org record"
        },
                {
          "permissionName": "licenses.orgs.view",
          "subPermissions":           [
            "licenses.orgs.collection.get",
            "licenses.orgs.item.get"
          ]
        },
                {
          "permissionName": "licenses.refdata.category.collection.get",
          "displayName": "Licenses refdata category collection get",
          "description": "Get a collection of refdata category records",
          "replaces": ["licenses.refdata.collection.get"]
        },
                {
          "permissionName": "licenses.refdata.value.collection.get",
          "displayName": "Licenses refdata value collection get",
          "description": "Get a collection of refdata value records",
          "replaces": ["licenses.refdata.collection.get"]
        },
                {
          "permissionName": "licenses.refdata.category.item.get",
          "displayName": "Licenses refdata category item get",
          "description": "Get a refdata category record",
          "replaces": ["licenses.refdata.item.get"]
        },
                {
          "permissionName": "licenses.refdata.view",
          "subPermissions":           [
            "licenses.refdata.category.collection.get",
            "licenses.refdata.value.collection.get",
            "licenses.refdata.category.item.get"
          ]
        },
                {
          "permissionName": "licenses.refdata.category.item.post",
          "displayName": "Licenses refdata category item post",
          "description": "Post a refdata category record",
          "replaces": ["licenses.refdata.item.post"]
        },
                {
          "permissionName": "licenses.refdata.category.item.put",
          "displayName": "Licenses refdata category item put",
          "description": "Put a refdata category record",
          "replaces": ["licenses.refdata.item.put"]
        },
                {
          "permissionName": "licenses.refdata.edit",
          "subPermissions":           [
            "licenses.refdata.view",
            "licenses.refdata.category.item.post",
            "licenses.refdata.category.item.put"
          ]
        },
                {
          "permissionName": "licenses.refdata.category.item.delete",
          "displayName": "Licenses refdata category item delete",
          "description": "Delete a refdata category record",
          "replaces": ["licenses.refdata.item.delete"]
        },
                {
          "permissionName": "licenses.refdata.manage",
          "subPermissions":           [
            "licenses.refdata.edit",
            "licenses.refdata.category.item.delete"
          ]
        },
                {
          "permissionName": "licenses.licenseLinks.collection.get",
          "displayName": "Licenses license links collection get",
          "description": "Get a collection of license link records"
        },
                {
          "permissionName": "licenses.licenseLinks.item.get",
          "displayName": "Licenses license links item get",
          "description": "Get a license link record"
        },
                {
          "permissionName": "licenses.licenseLinks.view",
          "subPermissions":           [
            "licenses.licenseLinks.collection.get",
            "licenses.licenseLinks.item.get"
          ]
        },
                {
          "permissionName": "licenses.custprops.collection.get",
          "displayName": "Licenses custom properties links collection get",
          "description": "Get a collection of custom property records"
        },
                {
          "permissionName": "licenses.custprops.contexts.collection.get",
          "displayName": "Licenses custom properties contexts get",
          "description": "Get all contexts for licenses custom properties"
        },
                {
          "permissionName": "licenses.custprops.item.get",
          "displayName": "Licenses custom properties item get",
          "description": "Get a custom property record"
        },
                {
          "permissionName": "licenses.custprops.view",
          "subPermissions":           [
            "licenses.custprops.collection.get",
            "licenses.custprops.contexts.collection.get",
            "licenses.custprops.item.get"
          ]
        },
                {
          "permissionName": "licenses.custprops.item.post",
          "displayName": "Licenses custom properties item post",
          "description": "Post a custom property record"
        },
                {
          "permissionName": "licenses.custprops.item.put",
          "displayName": "Licenses custom properties item put",
          "description": "Put a custom property record"
        },
                {
          "permissionName": "licenses.custprops.edit",
          "subPermissions":           [
            "licenses.custprops.view",
            "licenses.custprops.item.post",
            "licenses.custprops.item.put"
          ]
        },
                {
          "permissionName": "licenses.custprops.item.delete",
          "displayName": "Licenses custom properties item delete",
          "description": "Delete a custom property record"
        },
                {
          "permissionName": "licenses.custprops.manage",
          "subPermissions":           [
            "licenses.custprops.edit",
            "licenses.custprops.item.delete"
          ]
        },
                {
          "permissionName": "licenses.admin.action.execute",
          "displayName": "Admin endpoint perform action",
          "description": "Performs action from admin endpoint",
          "replaces": ["licenses.admin.action"]
        },
                {
          "permissionName": "licenses.settings.get",
          "displayName": "settings get",
          "description": "get settings",
          "visible": false
        },
                {
          "permissionName": "licenses.settings.collection.get",
          "displayName": "settings collection get",
          "description": "get collection of settings",
          "visible": false
        },
                {
          "permissionName": "licenses.settings.post",
          "displayName": "settings post",
          "description": "post settings",
          "visible": false
        },
                {
          "permissionName": "licenses.settings.put",
          "displayName": "settings put",
          "description": "put settings",
          "visible": false
        },
                {
          "permissionName": "licenses.settings.delete",
          "displayName": "settings delete",
          "description": "delete settings",
          "visible": false
        },
                {
          "permissionName": "licenses.settings.read",
          "displayName": "settings read",
          "description": "read settings",
          "visible": false,
          "subPermissions":           [
            "licenses.settings.get",
            "licenses.settings.collection.get"
          ]
        },
                {
          "permissionName": "licenses.settings.write",
          "displayName": "settings write",
          "description": "write settings",
          "visible": false,
          "subPermissions":           [
            "licenses.settings.read",
            "licenses.settings.post",
            "licenses.settings.put"
          ]
        },
                {
          "permissionName": "licenses.settings.manage",
          "displayName": "settings manage",
          "description": "manage settings",
          "visible": false,
          "subPermissions":           [
            "licenses.settings.write",
            "licenses.settings.delete"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-licenses:6.2.2",
        "dockerArgs": {"HostConfig":         {
          "Memory": 805306368,
          "PortBindings": {"8080/tcp": [{"HostPort": "%p"}]}
        }},
        "dockerPull": false,
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-server -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -XX:+PrintFlagsFinal"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "50"
          }
        ]
      }
    },
        {
      "id": "mod-email-1.19.0",
      "name": "email",
      "requires": [      {
        "id": "configuration",
        "version": "2.0"
      }],
      "provides":       [
                {
          "id": "email",
          "version": "1.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/email",
              "permissionsRequired": ["email.message.post"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "configuration.entries.item.delete"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/email",
              "permissionsRequired": ["email.message.collection.get"]
            }
          ]
        },
                {
          "id": "delayedTasks",
          "version": "2.0",
          "handlers": [          {
            "methods": ["DELETE"],
            "pathPattern": "/delayedTask/expiredMessages",
            "permissionsRequired": ["email.message.delete"]
          }]
        },
                {
          "id": "smtpConfiguration",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/smtp-configuration",
              "permissionsRequired": ["email.smtp-configuration.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": ["email.smtp-configuration.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/smtp-configuration",
              "permissionsRequired": ["email.smtp-configuration.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": ["email.smtp-configuration.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": ["email.smtp-configuration.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["DELETE"],
              "pathPattern": "/delayedTask/expiredMessages",
              "unit": "minute",
              "delay": "30"
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/delayedTask/retryFailedEmails",
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "configuration.entries.item.delete"
              ],
              "unit": "minute",
              "delay": "5"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "email.message.post",
          "displayName": "message - send email notifications",
          "description": "send email notifications"
        },
                {
          "permissionName": "email.message.collection.get",
          "displayName": "get email messages",
          "description": "get all email messages by query"
        },
                {
          "permissionName": "email.message.delete",
          "displayName": "delete email message",
          "description": "delete email messages by expiration date or status"
        },
                {
          "permissionName": "email.message.all",
          "displayName": "email entries - all permissions",
          "description": "Entire set of permissions needed to use the email module",
          "subPermissions":           [
            "email.message.post",
            "email.message.collection.get",
            "email.message.delete"
          ],
          "visible": false
        },
                {
          "permissionName": "email.smtp-configuration.collection.get",
          "displayName": "get SMTP configurations",
          "description": "get configuration of the SMTP server"
        },
                {
          "permissionName": "email.smtp-configuration.item.get",
          "displayName": "get SMTP configuration",
          "description": "get configuration of the SMTP server"
        },
                {
          "permissionName": "email.smtp-configuration.item.post",
          "displayName": "create SMTP configuration",
          "description": "create configuration of the SMTP server"
        },
                {
          "permissionName": "email.smtp-configuration.item.put",
          "displayName": "update SMTP configuration",
          "description": "update configuration of the SMTP server"
        },
                {
          "permissionName": "email.smtp-configuration.item.delete",
          "displayName": "delete SMTP configuration",
          "description": "delete configuration of the SMTP server"
        },
                {
          "permissionName": "email.smtp-configuration.all",
          "displayName": "SMTP configuration - all permissions",
          "description": "Entire set of permissions needed to manage SMTP configuration",
          "subPermissions":           [
            "email.smtp-configuration.collection.get",
            "email.smtp-configuration.item.get",
            "email.smtp-configuration.item.post",
            "email.smtp-configuration.item.put",
            "email.smtp-configuration.item.delete"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-email:1.19.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-event-config-2.9.0",
      "name": "mod-event-config",
      "requires": [],
      "provides":       [
                {
          "id": "mod-event",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": ["event.config.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eventConfig",
              "permissionsRequired": ["event.config.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eventConfig",
              "permissionsRequired": ["event.config.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": ["event.config.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": ["event.config.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "event.config.item.get",
          "displayName": "Event Config - get event configuration from storage",
          "description": "Get individual event configuration"
        },
                {
          "permissionName": "event.config.collection.get",
          "displayName": "Event Config - get event configuration list",
          "description": "Get a list of event configurations"
        },
                {
          "permissionName": "event.config.item.post",
          "displayName": "Event Config - create event configuration",
          "description": "Create event configuration"
        },
                {
          "permissionName": "event.config.item.put",
          "displayName": "Event Config - modify event configuration",
          "description": "Modify event configuration"
        },
                {
          "permissionName": "event.config.item.delete",
          "displayName": "Event Config - delete event configuration",
          "description": "Delete event configuration"
        },
                {
          "permissionName": "event.config.all",
          "displayName": "Event configuration module - all permissions",
          "description": "Entire set of permissions needed to use the event configuration modules",
          "subPermissions":           [
            "event.config.item.get",
            "event.config.collection.get",
            "event.config.item.post",
            "event.config.item.put",
            "event.config.item.delete"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-event-config:2.9.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-notify-3.4.0",
      "name": "Notify",
      "requires":       [
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "mod-event",
          "version": "1.0"
        },
                {
          "id": "template-engine",
          "version": "2.2"
        },
                {
          "id": "message-delivery",
          "version": "1.1"
        }
      ],
      "provides":       [
                {
          "id": "notify",
          "version": "2.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/notify",
              "permissionsRequired": ["notify.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/notify",
              "permissionsRequired": ["notify.item.post"],
              "modulePermissions":               [
                "event.config.collection.get",
                "template-request.post",
                "sender.message-delivery.post"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/notify/_username/{uid}",
              "permissionsRequired": ["notify.users.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": ["notify.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": ["notify.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": ["notify.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/notify/user/_self",
              "permissionsRequired": ["notify.user.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/notify/user/_self",
              "permissionsRequired": ["notify.user.collection.delete"]
            }
          ]
        },
                {
          "id": "patron-notice",
          "version": "1.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/patron-notice",
            "permissionsRequired": ["patron-notice.post"],
            "modulePermissions":             [
              "template-request.post",
              "sender.message-delivery.post"
            ]
          }]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_ramls",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/ramls",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "notify.collection.get",
          "displayName": "Notifications - get notify collection",
          "description": "Get notify collection"
        },
                {
          "permissionName": "notify.item.get",
          "displayName": "Notifications- get individual notification from storage",
          "description": "Get individual notification"
        },
                {
          "permissionName": "notify.item.post",
          "displayName": "Notifications - create notification",
          "description": "Create notification"
        },
                {
          "permissionName": "notify.users.item.post",
          "displayName": "Notifications - create notification for a user",
          "description": "Create notification for a user"
        },
                {
          "permissionName": "notify.item.put",
          "displayName": "Notifications - modify notification",
          "description": "Modify notification"
        },
                {
          "permissionName": "notify.item.delete",
          "displayName": "Notifications - delete notification",
          "description": "Delete notification"
        },
                {
          "permissionName": "patron-notice.post",
          "displayName": "Patron Notice",
          "description": "Post Patron Notice"
        },
                {
          "permissionName": "notify.user.collection.get",
          "displayName": "Notifications - get notify collection for self",
          "description": "Get notify collection for self user"
        },
                {
          "permissionName": "notify.user.collection.delete",
          "displayName": "Notifications - delete notify collection for self",
          "description": "Delete notify collection for self user"
        },
                {
          "permissionName": "notify.all",
          "displayName": "Notifications module - all permissions",
          "description": "Entire set of permissions needed to use the notify modules",
          "subPermissions":           [
            "notify.collection.get",
            "notify.item.get",
            "notify.item.post",
            "notify.users.item.post",
            "notify.item.put",
            "notify.item.delete"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-notify:3.4.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-sender-1.14.1",
      "name": "Mod sender",
      "requires":       [
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "email",
          "version": "1.1"
        },
                {
          "id": "batch-print",
          "version": "1.0"
        }
      ],
      "provides": [      {
        "id": "message-delivery",
        "version": "1.1",
        "handlers": [        {
          "methods": ["POST"],
          "pathPattern": "/message-delivery",
          "permissionsRequired": ["sender.message-delivery.post"],
          "modulePermissions":           [
            "email.message.post",
            "batch-print.entries.mail.post",
            "users.item.get"
          ]
        }]
      }],
      "permissionSets": [      {
        "permissionName": "sender.message-delivery.post",
        "displayName": "Message delivery",
        "description": "Send message",
        "replaces": ["sender.message-delivery"]
      }],
      "launchDescriptor":       {
        "dockerImage": "mod-sender:1.14.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 536870912,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-template-engine-1.22.0",
      "name": "Template engine module",
      "requires":       [
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "patron-notice-policy-storage",
          "version": "0.13"
        }
      ],
      "provides":       [
                {
          "id": "template-engine",
          "version": "2.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/templates",
              "permissionsRequired": ["templates.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/templates",
              "permissionsRequired": ["templates.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": ["templates.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": ["templates.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": ["templates.item.delete"],
              "modulePermissions": ["circulation-storage.patron-notice-policies.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/template-request",
              "permissionsRequired": ["template-request.post"],
              "modulePermissions": ["configuration.entries.collection.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "templates.collection.get",
          "displayName": "Templates - get Templates collection",
          "description": "Get Templates collection"
        },
                {
          "permissionName": "templates.item.get",
          "displayName": "Templates - get individual tag from storage",
          "description": "Get individual tag"
        },
                {
          "permissionName": "templates.item.post",
          "displayName": "Templates - create tag",
          "description": "Create tag"
        },
                {
          "permissionName": "templates.item.put",
          "displayName": "Templates - modify tag",
          "description": "Modify tag"
        },
                {
          "permissionName": "templates.item.delete",
          "displayName": "Templates - delete tag",
          "description": "Delete tag"
        },
                {
          "permissionName": "template-request.post",
          "displayName": "Template request",
          "description": "Request for template compilation"
        },
                {
          "permissionName": "templates.all",
          "displayName": "Templates module - all permissions",
          "description": "Entire set of permissions needed to use the Templates module",
          "subPermissions":           [
            "templates.collection.get",
            "templates.item.get",
            "templates.item.post",
            "templates.item.put",
            "templates.item.delete",
            "template-request.post"
          ],
          "visible": false
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-template-engine:1.22.0",
        "dockerPull": false,
        "dockerCMD": ["verify.user=true"],
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-pubsub-2.16.1",
      "name": "Pubsub",
      "requires":       [
                {
          "id": "users",
          "version": "15.1 16.0"
        },
                {
          "id": "login",
          "version": "6.0 7.0"
        },
                {
          "id": "permissions",
          "version": "5.2"
        }
      ],
      "provides":       [
                {
          "id": "pubsub-event-types",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/event-types",
              "permissionsRequired": ["pubsub.event-types.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/pubsub/event-types",
              "permissionsRequired": ["pubsub.event-types.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": ["pubsub.event-types.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": ["pubsub.event-types.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": ["pubsub.event-types.delete"]
            }
          ]
        },
                {
          "id": "pubsub-publishers",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/pubsub/event-types/declare/publisher",
              "permissionsRequired": ["pubsub.publishers.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
              "permissionsRequired": ["pubsub.publishers.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
              "permissionsRequired": ["pubsub.publishers.get"]
            }
          ]
        },
                {
          "id": "pubsub-subscribers",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/pubsub/event-types/declare/subscriber",
              "permissionsRequired": ["pubsub.subscribers.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
              "permissionsRequired": ["pubsub.subscribers.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
              "permissionsRequired": ["pubsub.subscribers.get"]
            }
          ]
        },
                {
          "id": "pubsub-audit",
          "version": "0.1",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/history",
              "permissionsRequired": ["pubsub.audit.history.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/pubsub/audit-messages/{eventId}/payload",
              "permissionsRequired": ["pubsub.audit.message.payload.get"]
            }
          ]
        },
                {
          "id": "pubsub-publish",
          "version": "0.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/pubsub/publish",
            "permissionsRequired": ["pubsub.publish.post"]
          }]
        },
                {
          "id": "pubsub-messaging-modules",
          "version": "0.1",
          "handlers": [          {
            "methods": ["DELETE"],
            "pathPattern": "/pubsub/messaging-modules",
            "permissionsRequired": ["pubsub.messaging-modules.delete"]
          }]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant",
              "modulePermissions":               [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.item.put",
                "perms.users.assign.immutable"
              ]
            },
                        {
              "methods":               [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "pubsub.event-types.collection.get",
          "displayName": "PubSub - get Event Descriptor collection",
          "description": "Get Event Descriptor collection"
        },
                {
          "permissionName": "pubsub.event-types.item.get",
          "displayName": "PubSub - get Event Descriptor",
          "description": "Get Event Descriptor",
          "replaces": ["pubsub.event-types.get"]
        },
                {
          "permissionName": "pubsub.event-types.post",
          "displayName": "PubSub - create new Event Type",
          "description": "Post Event Descriptor"
        },
                {
          "permissionName": "pubsub.event-types.put",
          "displayName": "PubSub - update Event Descriptor for Event Type",
          "description": "Put Event Descriptor"
        },
                {
          "permissionName": "pubsub.event-types.delete",
          "displayName": "PubSub - delete Event Type",
          "description": "Delete Event Descriptor"
        },
                {
          "permissionName": "pubsub.publishers.post",
          "displayName": "PubSub - declare publisher",
          "description": "Post Publisher Descriptor"
        },
                {
          "permissionName": "pubsub.publishers.delete",
          "displayName": "PubSub - delete publisher declaration",
          "description": "Delete Publisher"
        },
                {
          "permissionName": "pubsub.publishers.get",
          "displayName": "PubSub - get publishers",
          "description": "Get Publishers"
        },
                {
          "permissionName": "pubsub.subscribers.post",
          "displayName": "PubSub - declare subscriber",
          "description": "Post Subscriber Descriptor"
        },
                {
          "permissionName": "pubsub.subscribers.delete",
          "displayName": "PubSub - delete subscriber declaration",
          "description": "Delete Subscriber"
        },
                {
          "permissionName": "pubsub.subscribers.get",
          "displayName": "PubSub - get subscribers",
          "description": "Get Subscribers"
        },
                {
          "permissionName": "pubsub.audit.history.get",
          "displayName": "PubSub - get history",
          "description": "Get history"
        },
                {
          "permissionName": "pubsub.audit.message.payload.get",
          "displayName": "PubSub - get audit message payload",
          "description": "Get audit message payload"
        },
                {
          "permissionName": "pubsub.publish.post",
          "displayName": "PubSub - publish event",
          "description": "Publish event"
        },
                {
          "permissionName": "pubsub.messaging-modules.delete",
          "displayName": "PubSub - delete publishers and subscribers declarations",
          "description": "Delete publishers or subscribers"
        },
                {
          "permissionName": "remote-storage.pub-sub-handlers.log-record-event.post",
          "displayName": "log record events from pub-sub",
          "description": "log record events received from pub-sub"
        },
                {
          "permissionName": "audit.pub-sub-handlers.log-record-event.post",
          "displayName": "log record events from pub-sub",
          "description": "log record events received from pub-sub"
        },
                {
          "permissionName": "circulation.handlers.loan-related-fee-fine-closed.post",
          "displayName": "circulation - loan-related fee/fine closed",
          "description": "Loan-related fee/fine closed"
        },
                {
          "permissionName": "circulation.handlers.fee-fine-balance-changed.post",
          "displayName": "circulation - fee/fine balance changed",
          "description": "Fee/fine balance changed"
        },
                {
          "permissionName": "patron-blocks.handlers.fee-fine-balance-changed.post",
          "displayName": "Patron blocks - post fee fine balance changed event",
          "description": "Post fee fine balance changed event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-checked-out.post",
          "displayName": "Patron blocks - post item checked out event",
          "description": "Post item checked out event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-checked-in.post",
          "displayName": "Patron blocks - post item checked in event",
          "description": "Post item checked in event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-declared-lost.post",
          "displayName": "Patron blocks - post item declared lost event",
          "description": "Post item declared lost event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-aged-to-lost.post",
          "displayName": "Patron blocks - post item aged to lost event",
          "description": "Post item aged to lost event"
        },
                {
          "permissionName": "patron-blocks.handlers.item-claimed-returned.post",
          "displayName": "Patron blocks - post item claimed returned event",
          "description": "Post item claimed returned event"
        },
                {
          "permissionName": "patron-blocks.handlers.loan-due-date-changed.post",
          "displayName": "Patron blocks - post loan due date changed event",
          "description": "Post loan due date changed event"
        },
                {
          "permissionName": "patron-blocks.handlers.loan-closed.post",
          "displayName": "Patron blocks - post loan closed event",
          "description": "Post loan closed event"
        },
                {
          "permissionName": "pubsub.events.post",
          "displayName": "PubSub - post event.",
          "description": "Post all events.",
          "replaces":           [
            "source-storage.events.post",
            "source-records-manager.events.post",
            "inventory.events.post",
            "circulation.events.post",
            "patron-blocks.events.post",
            "audit-data.events.post"
          ]
        }
      ],
      "metadata": {"user":       {
        "type": "system",
        "permissions":         [
          "pubsub.events.post",
          "audit.pub-sub-handlers.log-record-event.post",
          "remote-storage.pub-sub-handlers.log-record-event.post",
          "circulation.handlers.loan-related-fee-fine-closed.post",
          "circulation.handlers.fee-fine-balance-changed.post",
          "patron-blocks.handlers.fee-fine-balance-changed.post",
          "patron-blocks.handlers.item-checked-out.post",
          "patron-blocks.handlers.item-checked-in.post",
          "patron-blocks.handlers.item-declared-lost.post",
          "patron-blocks.handlers.item-aged-to-lost.post",
          "patron-blocks.handlers.item-claimed-returned.post",
          "patron-blocks.handlers.loan-due-date-changed.post",
          "patron-blocks.handlers.loan-closed.post"
        ]
      }},
      "launchDescriptor":       {
        "dockerImage": "mod-pubsub:2.16.1",
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "dockerPull": false,
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -XX:+HeapDumpOnOutOfMemoryError"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
                    {
            "name": "OKAPI_URL",
            "value": "http://10.0.2.15:9130"
          },
                    {
            "name": "SYSTEM_USER_NAME",
            "value": "pub-sub"
          },
                    {
            "name": "SYSTEM_USER_PASSWORD",
            "value": "pubsub"
          }
        ]
      }
    },
        {
      "id": "mod-gobi-3.0.0",
      "name": "GOBI® Module",
      "provides":       [
                {
          "id": "gobi",
          "version": "1.12",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/validate",
              "permissionsRequired": ["gobi.validate.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/gobi/validate",
              "permissionsRequired": ["gobi.validate.item.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/gobi/orders",
              "permissionsRequired": ["gobi.orders.item.post"],
              "modulePermissions":               [
                "acquisitions-units.units.collection.get",
                "orders.item.post",
                "orders.collection.get",
                "orders.item.get",
                "orders.item.put",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory.items.item.get",
                "organizations-storage.organizations.collection.get",
                "configuration.entries.collection.get",
                "finance.funds.collection.get",
                "finance.expense-classes.collection.get",
                "orders.acquisition-methods.collection.get",
                "orders.item.approve",
                "orders.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.manage",
                "consortium-search.locations.collection.get"
              ]
            }
          ]
        },
                {
          "id": "custom-mapping",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/orders/custom-mappings",
              "permissionsRequired": ["gobi.custom-mappings.collection.get"],
              "modulePermissions": ["configuration.entries.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/orders/custom-mappings/{orderType}",
              "permissionsRequired": ["gobi.custom-mappings.item.get"],
              "modulePermissions": ["configuration.entries.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/gobi/orders/custom-mappings",
              "permissionsRequired": ["gobi.custom-mappings.item.post"],
              "modulePermissions": ["configuration.entries.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/gobi/orders/custom-mappings/{orderType}",
              "permissionsRequired": ["gobi.custom-mappings.item.put"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "configuration.entries.item.put"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/gobi/orders/custom-mappings/{orderType}",
              "permissionsRequired": ["gobi.custom-mappings.item.delete"],
              "modulePermissions":               [
                "configuration.entries.collection.get",
                "configuration.entries.item.delete"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/orders/mappings/fields",
              "permissionsRequired": ["gobi.mappings.fields.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/orders/mappings/translators",
              "permissionsRequired": ["gobi.mappings.translators.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/gobi/orders/mappings/types",
              "permissionsRequired": ["gobi.mappings.types.collection.get"]
            }
          ]
        }
      ],
      "requires":       [
                {
          "id": "orders",
          "version": "12.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "contributor-name-types",
          "version": "1.2"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "organizations-storage.organizations",
          "version": "3.1"
        },
                {
          "id": "finance.funds",
          "version": "3.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "finance.expense-classes",
          "version": "3.0"
        },
                {
          "id": "acquisition-methods",
          "version": "1.0"
        },
                {
          "id": "acquisitions-units",
          "version": "1.1"
        },
                {
          "id": "consortium-search",
          "version": "1.2 2.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "gobi.validate.item.get",
          "displayName": "gobi validate item",
          "description": "Get a validated order item"
        },
                {
          "permissionName": "gobi.validate.item.post",
          "displayName": "gobi - validate item",
          "description": "Validate an order item"
        },
                {
          "permissionName": "gobi.orders.item.post",
          "displayName": "gobi - post order",
          "description": "Creates an order"
        },
                {
          "permissionName": "gobi.custom-mappings.collection.get",
          "displayName": "Get collection of gobi custom mappings",
          "description": "Get collection of gobi custom mappings"
        },
                {
          "permissionName": "gobi.custom-mappings.item.get",
          "displayName": "Get gobi custom mapping",
          "description": "Get gobi custom mapping"
        },
                {
          "permissionName": "gobi.custom-mappings.item.post",
          "displayName": "Create gobi custom mapping",
          "description": "Create gobi custom mapping"
        },
                {
          "permissionName": "gobi.custom-mappings.item.put",
          "displayName": "Edit gobi custom mapping",
          "description": "Edit gobi custom mapping"
        },
                {
          "permissionName": "gobi.custom-mappings.item.delete",
          "displayName": "Delete gobi custom mapping",
          "description": "Delete gobi custom mapping"
        },
                {
          "permissionName": "gobi.mappings.fields.collection.get",
          "displayName": "Get gobi mapping fields",
          "description": "Get gobi mapping fields"
        },
                {
          "permissionName": "gobi.mappings.translators.collection.get",
          "displayName": "Get gobi mapping translators",
          "description": "Get gobi mapping translators"
        },
                {
          "permissionName": "gobi.mappings.types.collection.get",
          "displayName": "Get gobi mapping types",
          "description": "Get gobi mapping types"
        },
                {
          "permissionName": "gobi.custom-mappings.all",
          "displayName": "custom mappings - all permissions",
          "description": "Entire set of permissions needed to use custom mappings",
          "subPermissions":           [
            "gobi.custom-mappings.collection.get",
            "gobi.custom-mappings.item.get",
            "gobi.custom-mappings.item.post",
            "gobi.custom-mappings.item.put",
            "gobi.custom-mappings.item.delete"
          ]
        },
                {
          "permissionName": "gobi.all",
          "displayName": "gobi - all permissions",
          "description": "Entire set of permissions needed to use gobi",
          "subPermissions":           [
            "gobi.validate.item.get",
            "gobi.validate.item.post",
            "gobi.orders.item.post",
            "gobi.orders.mappings.all",
            "gobi.custom-mappings.all"
          ]
        },
                {
          "permissionName": "gobi.orders.mappings.all",
          "displayName": "gobi mappings - all permissions",
          "description": "Entire set of permissions needed to use gobi mappings",
          "subPermissions":           [
            "gobi.mappings.fields.collection.get",
            "gobi.mappings.translators.collection.get",
            "gobi.mappings.types.collection.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-gobi:3.0.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-copycat-1.8.0",
      "name": "copycat",
      "provides":       [
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "copycat-imports",
          "version": "1.1",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/copycat/imports",
            "permissionsRequired": ["copycat.imports.post"],
            "modulePermissions":             [
              "change-manager.jobexecutions.post",
              "change-manager.jobExecutions.item.get",
              "change-manager.jobExecutions.children.collection.get",
              "change-manager.jobExecutions.jobProfile.item.put",
              "change-manager.records.post",
              "source-storage.source-records.collection.get"
            ]
          }]
        },
                {
          "id": "copycat-profiles",
          "version": "1.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/copycat/profiles",
              "permissionsRequired": ["copycat.profiles.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/copycat/profiles",
              "permissionsRequired": ["copycat.profiles.item.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": ["copycat.profiles.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": ["copycat.profiles.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": ["copycat.profiles.item.delete"]
            }
          ]
        }
      ],
      "requires":       [
                {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
                {
          "id": "source-manager-records",
          "version": "2.0"
        },
                {
          "id": "source-storage-source-records",
          "version": "3.2"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "copycat.imports.post",
          "displayName": "CopyCat - import records from remote resource",
          "description": "Import records from remote and source"
        },
                {
          "permissionName": "copycat.profiles.collection.get",
          "displayName": "CopyCat - get CopyCat profiles",
          "description": "Retrieve CopyCat profiles"
        },
                {
          "permissionName": "copycat.profiles.item.post",
          "displayName": "CopyCat - create CopyCat profile",
          "description": "Create CopyCat profile"
        },
                {
          "permissionName": "copycat.profiles.item.get",
          "displayName": "CopyCat - get CopyCat profile",
          "description": "Get single CopyCat profile"
        },
                {
          "permissionName": "copycat.profiles.item.put",
          "displayName": "CopyCat - update CopyCat profile",
          "description": "Update single CopyCat profile"
        },
                {
          "permissionName": "copycat.profiles.item.delete",
          "displayName": "CopyCat - delete CopyCat profile",
          "description": "Delete single CopyCat profile"
        },
                {
          "permissionName": "copycat.profiles.all",
          "displayName": "CopyCat - all profile operations",
          "description": "Allow all operations on CopyCat profiles",
          "subPermissions":           [
            "copycat.profiles.collection.get",
            "copycat.profiles.item.post",
            "copycat.profiles.item.get",
            "copycat.profiles.item.put",
            "copycat.profiles.item.delete"
          ]
        },
                {
          "permissionName": "copycat.all",
          "displayName": "CopyCat - all permissions",
          "description": "All permissions for CopyCat",
          "subPermissions":           [
            "copycat.profiles.all",
            "copycat.imports.post"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-copycat:1.8.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 536870912,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-kb-ebsco-java-6.0.0",
      "name": "kb-ebsco",
      "provides":       [
                {
          "id": "eholdings",
          "version": "4.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials",
              "permissionsRequired": ["kb-ebsco.kb-credentials.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/kb-credentials",
              "permissionsRequired": ["kb-ebsco.kb-credentials.collection.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/key",
              "permissionsRequired": ["kb-ebsco.kb-credentials.key.item.get"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.item.patch"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/user-kb-credential",
              "permissionsRequired": ["kb-ebsco.user-kb-credential.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/users",
              "permissionsRequired": ["kb-ebsco.kb-credentials.users.collection.get"],
              "modulePermissions":               [
                "users.collection.get",
                "usergroups.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/users",
              "permissionsRequired": ["kb-ebsco.kb-credentials.users.collection.post"],
              "modulePermissions": ["users.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/users/{userId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.users.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/custom-labels",
              "permissionsRequired": ["kb-ebsco.kb-credentials.custom-labels.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/custom-labels",
              "permissionsRequired": ["kb-ebsco.kb-credentials.custom-labels.collection.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages",
              "permissionsRequired": ["kb-ebsco.packages.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/packages/bulk/fetch",
              "permissionsRequired": ["kb-ebsco.packages-bulk.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/packages",
              "permissionsRequired": ["kb-ebsco.packages.collection.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages/{packageId}",
              "permissionsRequired": ["kb-ebsco.packages.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/packages/{packageId}",
              "permissionsRequired": ["kb-ebsco.packages.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/packages/{packageId}",
              "permissionsRequired": ["kb-ebsco.packages.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages/{packageId}/resources",
              "permissionsRequired": ["kb-ebsco.package-resources.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages/{packageId}/resources/costperuse/export",
              "permissionsRequired": ["kb-ebsco.package-resources.export.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/packages/{packageId}/tags",
              "permissionsRequired": ["kb-ebsco.package-tags.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/providers",
              "permissionsRequired": ["kb-ebsco.providers.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/providers/{providerId}",
              "permissionsRequired": ["kb-ebsco.providers.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/providers/{providerId}",
              "permissionsRequired": ["kb-ebsco.providers.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/providers/{providerId}/packages",
              "permissionsRequired": ["kb-ebsco.provider-packages.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/providers/{providerId}/tags",
              "permissionsRequired": ["kb-ebsco.provider-tags.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/resources",
              "permissionsRequired": ["kb-ebsco.resources.collection.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/resources/bulk/fetch",
              "permissionsRequired": ["kb-ebsco.resources-bulk.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/resources/{resourceId}",
              "permissionsRequired": ["kb-ebsco.resources.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/resources/{resourceId}/costperuse",
              "permissionsRequired": ["kb-ebsco.resources-costperuse.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/titles/{titleId}/costperuse",
              "permissionsRequired": ["kb-ebsco.titles-costperuse.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages/{packageId}/costperuse",
              "permissionsRequired": ["kb-ebsco.packages-costperuse.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/packages/{packageId}/resources/costperuse",
              "permissionsRequired": ["kb-ebsco.package-resources-costperuse.collection.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/resources/{resourceId}",
              "permissionsRequired": ["kb-ebsco.resources.item.put"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/resources/{resourceId}/tags",
              "permissionsRequired": ["kb-ebsco.resource-tags.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/resources/{resourceId}",
              "permissionsRequired": ["kb-ebsco.resources.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/titles",
              "permissionsRequired": ["kb-ebsco.titles.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/titles",
              "permissionsRequired": ["kb-ebsco.titles.collection.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/titles/{titleId}",
              "permissionsRequired": ["kb-ebsco.titles.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/titles/{titleId}",
              "permissionsRequired": ["kb-ebsco.titles.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{id}/proxy-types",
              "permissionsRequired": ["kb-ebsco.kb-credentials.proxy-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/proxy-types",
              "permissionsRequired": ["kb-ebsco.proxy-types.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/root-proxy",
              "permissionsRequired": ["kb-ebsco.root-proxy.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{id}/root-proxy",
              "permissionsRequired": ["kb-ebsco.kb-credentials.root-proxy.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/kb-credentials/{id}/root-proxy",
              "permissionsRequired": ["kb-ebsco.kb-credentials.root-proxy.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/configuration",
              "permissionsRequired": ["kb-ebsco.configuration.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/configuration",
              "permissionsRequired": ["kb-ebsco.configuration.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/status",
              "permissionsRequired": ["kb-ebsco.status.get"],
              "modulePermissions": ["configuration.entries.collection.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/cache",
              "permissionsRequired": ["kb-ebsco.cache.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/tags",
              "permissionsRequired": ["kb-ebsco.tags.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/tags/summary",
              "permissionsRequired": ["kb-ebsco.unique.tags.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/loading/kb-credentials",
              "permissionsRequired": ["kb-ebsco.kb-credentials.holdings-load-all.post"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/loading/kb-credentials/{id}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.holdings-load.post"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/loading/kb-credentials/{credentialsId}/status",
              "permissionsRequired": ["kb-ebsco.kb-credentials.holdings-load.status.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/custom-labels",
              "permissionsRequired": ["kb-ebsco.custom-labels.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/access-types",
              "permissionsRequired": ["kb-ebsco.access-types.collection.get"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/access-types/{accessTypeId}",
              "permissionsRequired": ["kb-ebsco.access-types.item.get"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/access-types",
              "permissionsRequired": ["kb-ebsco.kb-credentials.access-types.collection.get"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/access-types",
              "permissionsRequired": ["kb-ebsco.kb-credentials.access-types.collection.post"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/access-types/{accessTypeId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.access-types.item.get"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/access-types/{accessTypeId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.access-types.item.put"],
              "modulePermissions":               [
                "users.item.get",
                "users.collection.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/eholdings/kb-credentials/{credentialsId}/access-types/{accessTypeId}",
              "permissionsRequired": ["kb-ebsco.kb-credentials.access-types.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/currencies",
              "permissionsRequired": ["kb-ebsco.currencies.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/uc-credentials",
              "permissionsRequired": ["kb-ebsco.uc-credentials.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/eholdings/uc-credentials",
              "permissionsRequired": ["kb-ebsco.uc-credentials.item.put"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/uc-credentials/clientId",
              "permissionsRequired": ["kb-ebsco.uc-credentials.client-id.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/uc-credentials/clientSecret",
              "permissionsRequired": ["kb-ebsco.uc-credentials.client-secret.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/uc",
              "permissionsRequired": ["kb-ebsco.uc.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{id}/uc",
              "permissionsRequired": ["kb-ebsco.kb-credentials.uc.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/eholdings/kb-credentials/{id}/uc/key",
              "permissionsRequired": ["kb-ebsco.kb-credentials.uc.key.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/eholdings/kb-credentials/{id}/uc",
              "permissionsRequired": ["kb-ebsco.kb-credentials.uc.collection.post"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/eholdings/kb-credentials/{id}/uc",
              "permissionsRequired": ["kb-ebsco.kb-credentials.uc.item.patch"]
            }
          ]
        },
                {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/jsonSchemas",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_ramls",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/_/ramls",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/eholdings/loading/kb-credentials",
            "unit": "day",
            "delay": "5"
          }]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "kb-ebsco.configuration.get",
          "displayName": "get RM API configuration",
          "description": "Get RM API configuration"
        },
                {
          "permissionName": "kb-ebsco.configuration.put",
          "displayName": "put RM API configuration",
          "description": "Put RM API configuration"
        },
                {
          "permissionName": "kb-ebsco.status.get",
          "displayName": "get RM API configuration status",
          "description": "Get RM API configuration status"
        },
                {
          "permissionName": "kb-ebsco.cache.delete",
          "displayName": "delete RM API configuration cache",
          "description": "Delete RM API configuration cache"
        },
                {
          "permissionName": "kb-ebsco.providers.collection.get",
          "displayName": "get providers",
          "description": "Get providers"
        },
                {
          "permissionName": "kb-ebsco.providers.item.get",
          "displayName": "get single provider",
          "description": "Get single provider"
        },
                {
          "permissionName": "kb-ebsco.providers.item.put",
          "displayName": "put single provider",
          "description": "Put single provider"
        },
                {
          "permissionName": "kb-ebsco.provider-tags.put",
          "displayName": "update tags for a single provider",
          "description": "Update tags for a single provider"
        },
                {
          "permissionName": "kb-ebsco.provider-packages.collection.get",
          "displayName": "get packages for a single provider",
          "description": "get packages for a single provider"
        },
                {
          "permissionName": "kb-ebsco.titles.item.get",
          "displayName": "get single title",
          "description": "Get single title"
        },
                {
          "permissionName": "kb-ebsco.titles.collection.get",
          "displayName": "get titles",
          "description": "Get titles"
        },
                {
          "permissionName": "kb-ebsco.titles.collection.post",
          "displayName": "post title",
          "description": "Post title"
        },
                {
          "permissionName": "kb-ebsco.titles.item.put",
          "displayName": "put single title",
          "description": "Put single title"
        },
                {
          "permissionName": "kb-ebsco.resources.item.get",
          "displayName": "get single resource",
          "description": "Get single resource"
        },
                {
          "permissionName": "kb-ebsco.resources.collection.post",
          "displayName": "post resource",
          "description": "Post resource"
        },
                {
          "permissionName": "kb-ebsco.resources.item.put",
          "displayName": "put single resource",
          "description": "Put single resource"
        },
                {
          "permissionName": "kb-ebsco.resources.item.delete",
          "displayName": "delete single resource",
          "description": "Delete single resource"
        },
                {
          "permissionName": "kb-ebsco.resource-tags.put",
          "displayName": "put tags to a single resource",
          "description": "Put tags to a single resource"
        },
                {
          "permissionName": "kb-ebsco.resources-bulk.collection.get",
          "displayName": "get resources collection with limited fields set",
          "description": "Get resources collection with limited fields set"
        },
                {
          "permissionName": "kb-ebsco.packages.collection.get",
          "displayName": "get packages",
          "description": "Get packages"
        },
                {
          "permissionName": "kb-ebsco.packages-bulk.collection.get",
          "displayName": "get packages collection with limited fields set",
          "description": "Get packages collection with limited fields set"
        },
                {
          "permissionName": "kb-ebsco.packages.item.get",
          "displayName": "get package",
          "description": "Get package"
        },
                {
          "permissionName": "kb-ebsco.packages.collection.post",
          "displayName": "post package",
          "description": "Post package"
        },
                {
          "permissionName": "kb-ebsco.packages.item.put",
          "displayName": "put package",
          "description": "Put package"
        },
                {
          "permissionName": "kb-ebsco.packages.item.delete",
          "displayName": "delete custom package",
          "description": "Delete custom package"
        },
                {
          "permissionName": "kb-ebsco.package-resources.collection.get",
          "displayName": "get resources for a single package",
          "description": "get resources for a single package"
        },
                {
          "permissionName": "kb-ebsco.package-resources.export.collection.get",
          "displayName": "get exported resources for a single package",
          "description": "get exported resources for a single package"
        },
                {
          "permissionName": "kb-ebsco.package-tags.put",
          "displayName": "update tags for a single package",
          "description": "Update tags for a single package"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.proxy-types.collection.get",
          "displayName": "get proxy types collection by KB credentials",
          "description": "Get proxy types collection by KB credentials"
        },
                {
          "permissionName": "kb-ebsco.proxy-types.collection.get",
          "displayName": "get proxy types",
          "description": "Get proxy types"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.root-proxy.get",
          "displayName": "get root proxy by KB credentials",
          "description": "Get root proxy by KB credentials"
        },
                {
          "permissionName": "kb-ebsco.root-proxy.get",
          "displayName": "get root proxy",
          "description": "Get root proxy"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.root-proxy.put",
          "displayName": "put root proxy by KB credentials",
          "description": "Put root proxy by KB credentials"
        },
                {
          "permissionName": "kb-ebsco.tags.collection.get",
          "displayName": "get record tags",
          "description": "Get record tags"
        },
                {
          "permissionName": "kb-ebsco.unique.tags.collection.get",
          "displayName": "get record unique tags",
          "description": "Get record unique tags"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.holdings-load-all.post",
          "displayName": "permission to run load of holdings",
          "description": "One-time load of holdings"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.holdings-load.post",
          "displayName": "permission to run load of holdings for certain credentials",
          "description": "One-time load of holdings based on credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.holdings-load.status.item.get",
          "displayName": "get current status of holdings loading by credentials id",
          "description": "Get current status of holdings loading by credentials id"
        },
                {
          "permissionName": "kb-ebsco.custom-labels.collection.get",
          "displayName": "get Custom Labels collection",
          "description": "Get Custom Labels collection"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.custom-labels.collection.get",
          "displayName": "get Custom Labels collection related to kb credentials",
          "description": "Get Custom Labels collection related to KB Credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.custom-labels.collection.put",
          "displayName": "put Custom Labels collection related to kb credentials",
          "description": "Put Custom Labels collection related to KB Credentials"
        },
                {
          "permissionName": "kb-ebsco.access-types.collection.get",
          "displayName": "get Access Types collection",
          "description": "Get Access Types collection"
        },
                {
          "permissionName": "kb-ebsco.access-types.item.get",
          "displayName": "get Access Type collection item",
          "description": "Get Access Type collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.access-types.collection.get",
          "displayName": "get Access Types collection by kb credentials",
          "description": "Get Access Types collection KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.access-types.collection.post",
          "displayName": "post Access Type collection item",
          "description": "Post Access Type collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.access-types.item.get",
          "displayName": "get Access Type collection item",
          "description": "Get Access Type collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.access-types.item.put",
          "displayName": "put Access Type collection item",
          "description": "Put Access Type collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.access-types.item.delete",
          "displayName": "delete Access Type collection item",
          "description": "Delete Access Type collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.collection.get",
          "displayName": "get KB credentials collection",
          "description": "Get KB credentials collection"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.collection.post",
          "displayName": "post KB credentials",
          "description": "Post KB credentials"
        },
                {
          "permissionName": "kb-ebsco.user-kb-credential.get",
          "displayName": "get KB credentials related to user",
          "description": "Get KB credentials related to user"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.item.get",
          "displayName": "get KB credentials collection item",
          "description": "Get KB credentials collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.key.item.get",
          "displayName": "get KB credentials collection item",
          "description": "Get KB credentials collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.item.patch",
          "displayName": "patch KB credentials collection item",
          "description": "Patch KB credentials collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.item.put",
          "displayName": "put KB credentials collection item",
          "description": "Put KB credentials collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.item.delete",
          "displayName": "delete KB credentials collection item",
          "description": "Delete KB credentials collection item"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.all",
          "displayName": "EBSCO KB Broker Credentials - all permissions",
          "description": "All permissions for managing EBSCO KB Credentials",
          "subPermissions":           [
            "kb-ebsco.kb-credentials.collection.get",
            "kb-ebsco.kb-credentials.collection.post",
            "kb-ebsco.kb-credentials.item.get",
            "kb-ebsco.kb-credentials.item.patch",
            "kb-ebsco.kb-credentials.item.put",
            "kb-ebsco.kb-credentials.item.delete",
            "kb-ebsco.kb-credentials.custom-labels.collection.get",
            "kb-ebsco.kb-credentials.custom-labels.collection.put",
            "kb-ebsco.kb-credentials.proxy-types.collection.get",
            "kb-ebsco.kb-credentials.root-proxy.get",
            "kb-ebsco.kb-credentials.root-proxy.put",
            "kb-ebsco.kb-credentials.access-types.collection.get",
            "kb-ebsco.kb-credentials.access-types.collection.post",
            "kb-ebsco.kb-credentials.access-types.item.get",
            "kb-ebsco.kb-credentials.access-types.item.put",
            "kb-ebsco.kb-credentials.access-types.item.delete"
          ]
        },
                {
          "permissionName": "kb-ebsco.uc-credentials.item.get",
          "displayName": "get usage consolidation credentials",
          "description": "Get usage consolidation credentials"
        },
                {
          "permissionName": "kb-ebsco.uc-credentials.item.put",
          "displayName": "put usage consolidation credentials",
          "description": "Put usage consolidation credentials"
        },
                {
          "permissionName": "kb-ebsco.uc-credentials.client-id.get",
          "displayName": "get usage consolidation credentials client id",
          "description": "Get usage consolidation credentials client id"
        },
                {
          "permissionName": "kb-ebsco.uc-credentials.client-secret.get",
          "displayName": "get usage consolidation credentials client secret",
          "description": "Get usage consolidation credentials client secret"
        },
                {
          "permissionName": "kb-ebsco.uc.item.get",
          "displayName": "get usage consolidation settings",
          "description": "Get usage consolidation settings"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.uc.item.get",
          "displayName": "get usage consolidation settings related to KB credentials",
          "description": "Get usage consolidation settings related to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.uc.key.item.get",
          "displayName": "get usage consolidation settings key related to KB credentials",
          "description": "Get usage consolidation settings key related to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.uc.collection.post",
          "displayName": "post usage consolidation settings related to KB credentials",
          "description": "Post usage consolidation settings related to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.uc.item.patch",
          "displayName": "patch usage consolidation settings related to KB credentials",
          "description": "Patch usage consolidation settings related to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.resources-costperuse.item.get",
          "displayName": "get cost-per-use information for a resource",
          "description": "Get cost-per-use information for a resource"
        },
                {
          "permissionName": "kb-ebsco.titles-costperuse.item.get",
          "displayName": "get cost-per-use information for a title",
          "description": "Get cost-per-use information for a title"
        },
                {
          "permissionName": "kb-ebsco.packages-costperuse.item.get",
          "displayName": "get cost-per-use information for a package",
          "description": "Get cost-per-use information for a package"
        },
                {
          "permissionName": "kb-ebsco.package-resources-costperuse.collection.get",
          "displayName": "get cost-per-use information for a package resources",
          "description": "Get cost-per-use information for a package resources"
        },
                {
          "permissionName": "kb-ebsco.uc-credentials.all",
          "displayName": "EBSCO KB Broker Usage Consolidation credentials - all permissions",
          "description": "All permissions for managing Usage Consolidation credentials",
          "subPermissions":           [
            "kb-ebsco.uc-credentials.item.get",
            "kb-ebsco.uc-credentials.item.put",
            "kb-ebsco.uc-credentials.client-id.get",
            "kb-ebsco.uc-credentials.client-secret.get"
          ]
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.uc.all",
          "displayName": "EBSCO KB Broker Usage Consolidation settings - all permissions",
          "description": "All permissions for managing Usage Consolidation settings",
          "subPermissions":           [
            "kb-ebsco.uc.item.get",
            "kb-ebsco.kb-credentials.uc.item.get",
            "kb-ebsco.kb-credentials.uc.collection.post",
            "kb-ebsco.kb-credentials.uc.item.patch",
            "kb-ebsco.resources-costperuse.item.get",
            "kb-ebsco.packages-costperuse.item.get",
            "kb-ebsco.package-resources-costperuse.collection.get",
            "kb-ebsco.titles-costperuse.item.get"
          ]
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.users.collection.get",
          "displayName": "get assigned users to KB credentials",
          "description": "Get assigned users to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.users.collection.post",
          "displayName": "post assigned users to KB credentials",
          "description": "Post assigned users to KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.users.item.delete",
          "displayName": "delete association between user and KB credentials",
          "description": "delete association between user and KB credentials"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.users.item.put",
          "displayName": "put assigned users collection item",
          "description": "Put assigned users collection item"
        },
                {
          "permissionName": "kb-ebsco.currencies.collection.get",
          "displayName": "get currencies collection",
          "description": "Get currencies collection"
        },
                {
          "permissionName": "kb-ebsco.kb-credentials.users.all",
          "displayName": "EBSCO KB Broker users assigned to credentials - all permissions",
          "description": "All permissions for manging users assigned to EBSCO KB Credentials",
          "subPermissions":           [
            "kb-ebsco.kb-credentials.users.collection.get",
            "kb-ebsco.kb-credentials.users.collection.post",
            "kb-ebsco.kb-credentials.users.item.put",
            "kb-ebsco.kb-credentials.users.item.delete"
          ]
        },
                {
          "permissionName": "kb-ebsco.all",
          "displayName": "EBSCO KB Broker - all permissions",
          "description": "All permissions for EBSCO KB module",
          "subPermissions":           [
            "kb-ebsco.kb-credentials.all",
            "kb-ebsco.kb-credentials.users.all",
            "kb-ebsco.kb-credentials.uc.all",
            "kb-ebsco.uc-credentials.all",
            "kb-ebsco.configuration.get",
            "kb-ebsco.configuration.put",
            "kb-ebsco.status.get",
            "kb-ebsco.cache.delete",
            "kb-ebsco.providers.collection.get",
            "kb-ebsco.providers.item.get",
            "kb-ebsco.providers.item.put",
            "kb-ebsco.provider-packages.collection.get",
            "kb-ebsco.provider-tags.put",
            "kb-ebsco.titles.collection.get",
            "kb-ebsco.titles.collection.post",
            "kb-ebsco.titles.item.put",
            "kb-ebsco.packages.collection.get",
            "kb-ebsco.packages-bulk.collection.get",
            "kb-ebsco.packages.collection.post",
            "kb-ebsco.packages.item.delete",
            "kb-ebsco.package-resources.collection.get",
            "kb-ebsco.package-resources.export.collection.get",
            "kb-ebsco.package-tags.put",
            "kb-ebsco.titles.item.get",
            "kb-ebsco.packages.item.get",
            "kb-ebsco.packages.item.put",
            "kb-ebsco.resources.item.get",
            "kb-ebsco.resources.collection.post",
            "kb-ebsco.resources-bulk.collection.get",
            "kb-ebsco.resources.item.put",
            "kb-ebsco.resources.item.delete",
            "kb-ebsco.resource-tags.put",
            "kb-ebsco.proxy-types.collection.get",
            "kb-ebsco.root-proxy.get",
            "kb-ebsco.tags.collection.get",
            "kb-ebsco.unique.tags.collection.get",
            "kb-ebsco.kb-credentials.holdings-load.status.item.get",
            "kb-ebsco.custom-labels.collection.get",
            "kb-ebsco.access-types.collection.get",
            "kb-ebsco.access-types.item.get",
            "kb-ebsco.currencies.collection.get"
          ]
        }
      ],
      "requires":       [
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-kb-ebsco-java:6.0.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 536870912,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
                    {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-ncip-1.15.7",
      "name": "NCIP",
      "provides": [      {
        "id": "ncip",
        "version": "1.0",
        "handlers":         [
                    {
            "methods": ["POST"],
            "pathPattern": "/ncip",
            "permissionsRequired": ["ncip.post"],
            "modulePermissions":             [
              "users.collection.get",
              "patron-blocks.automated-patron-blocks.collection.get",
              "addresstypes.collection.get",
              "circulation.requests.item.post",
              "circulation-storage.circulation-rules.get",
              "circulation-storage.cancellation-reasons.collection.get",
              "ui-circulation.settings.overdue-fines-policies",
              "ui-circulation.settings.lost-item-fees-policies",
              "inventory-storage.all",
              "inventory-storage.items.collection.get",
              "inventory-storage.service-points.collection.get",
              "inventory-storage.instance-types.collection.get",
              "inventory-storage.identifier-types.collection.get",
              "inventory-storage.material-types.collection.get",
              "inventory-storage.loan-types.collection.get",
              "inventory-storage.locations.collection.get",
              "configuration.entries.collection.get",
              "configuration.entries.item.get",
              "usergroups.item.get",
              "manualblocks.collection.get",
              "note.types.collection.get",
              "accounts.collection.get",
              "circulation.check-out-by-barcode.post",
              "circulation.check-in-by-barcode.post",
              "circulation.loans.collection.get",
              "circulation.requests.collection.get",
              "inventory.instances.item.post",
              "inventory.instances.item.delete",
              "inventory-storage.holdings.item.delete",
              "inventory.items.collection.get",
              "inventory.items.item.delete",
              "inventory.items.item.put",
              "inventory.instances.collection.get",
              "inventory.instances.item.delete",
              "inventory-storage.holdings.item.post",
              "inventory-storage.service-points-users.collection.get",
              "inventory.items.item.post",
              "inventory-storage.service-points.item.get",
              "owners.collection.get",
              "feefines.collection.get",
              "accounts.item.post",
              "circulation.requests.item.get",
              "circulation.requests.item.put",
              "note.types.collection.get",
              "circulation.loans.add-info.post"
            ]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/ncipconfigcheck",
            "permissionsRequired": ["ncip.ncipconfigcheck.get"],
            "modulePermissions":             [
              "inventory-storage.all",
              "inventory-storage.service-points.collection.get",
              "inventory-storage.instance-types.collection.get",
              "inventory-storage.identifier-types.collection.get",
              "inventory-storage.material-types.collection.get",
              "configuration.entries.collection.get",
              "configuration.entries.item.get",
              "inventory-storage.loan-types.collection.get"
            ]
          }
        ]
      }],
      "requires":       [
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "service-points",
          "version": "3.2"
        },
                {
          "id": "loan-types",
          "version": "2.2"
        },
                {
          "id": "holdings-storage",
          "version": "6.0 7.0 8.0"
        },
                {
          "id": "inventory",
          "version": "10.2 11.0 12.0 13.0 14.0"
        },
                {
          "id": "circulation",
          "version": "14.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "ncip.post",
          "displayName": "NCIP Request",
          "description": "Post NCIP request"
        },
                {
          "permissionName": "ncip.ncipconfigcheck.get",
          "displayName": "NCIP - configuration check",
          "description": "Check NCIP configuraitons"
        },
                {
          "permissionName": "ncip.all",
          "displayName": "NCIP - all permissions",
          "description": "Entire set of permissions needed to use NCIP",
          "subPermissions":           [
            "ncip.post",
            "ncip.ncipconfigcheck.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-ncip:1.15.7",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-inventory-update-4.1.0",
      "name": "Inventory Update Module",
      "provides":       [
                {
          "id": "inventory-upsert-hrid",
          "version": "2.1",
          "handlers":           [
                        {
              "methods": ["PUT"],
              "pathPattern": "/inventory-upsert-hrid",
              "permissionsRequired": ["inventory-update.by-hrid.item.put"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/inventory-upsert-hrid",
              "permissionsRequired": ["inventory-update.by-hrid.item.delete"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/inventory-upsert-hrid/fetch/{id}",
              "permissionsRequired": ["inventory-update.by-hrid.item.get"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            }
          ]
        },
                {
          "id": "inventory-batch-upsert-hrid",
          "version": "2.1",
          "handlers": [          {
            "methods": ["PUT"],
            "pathPattern": "/inventory-batch-upsert-hrid",
            "permissionsRequired": ["inventory-update.batch-by-hrid.collection.put"],
            "modulePermissions":             [
              "inventory-storage.items.collection.get",
              "inventory-storage.items.item.get",
              "inventory-storage.items.item.post",
              "inventory-storage.items.item.put",
              "inventory-storage.items.item.delete",
              "inventory-storage.items.batch.post",
              "inventory-storage.holdings.collection.get",
              "inventory-storage.holdings.item.get",
              "inventory-storage.holdings.item.post",
              "inventory-storage.holdings.item.put",
              "inventory-storage.holdings.item.delete",
              "inventory-storage.holdings.batch.post",
              "inventory-storage.instances.collection.get",
              "inventory-storage.instances.item.get",
              "inventory-storage.instances.item.post",
              "inventory-storage.instances.item.put",
              "inventory-storage.instances.item.delete",
              "inventory-storage.instances.batch.post",
              "inventory-storage.locations.collection.get",
              "inventory-storage.locations.item.get",
              "inventory-storage.preceding-succeeding-titles.collection.get",
              "inventory-storage.preceding-succeeding-titles.item.get",
              "inventory-storage.preceding-succeeding-titles.item.post",
              "inventory-storage.preceding-succeeding-titles.item.put",
              "inventory-storage.preceding-succeeding-titles.item.delete",
              "inventory-storage.instances.preceding-succeeding-titles.collection.put",
              "inventory-storage.instance-relationships.collection.get",
              "inventory-storage.instance-relationships.item.post",
              "inventory-storage.instance-relationships.item.get",
              "inventory-storage.instance-relationships.item.put",
              "inventory-storage.instance-relationships.item.delete",
              "inventory-storage.inventory-view.instance-set.get"
            ]
          }]
        },
                {
          "id": "shared-inventory-upsert-matchkey",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["PUT"],
              "pathPattern": "/shared-inventory-upsert-matchkey",
              "permissionsRequired": ["inventory-update.by-matchkey.item.put"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/shared-inventory-upsert-matchkey",
              "permissionsRequired": ["inventory-update.by-matchkey.item.delete"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/shared-inventory-upsert-matchkey/fetch/{id}",
              "permissionsRequired": ["inventory-update.by-matchkey.item.get"],
              "modulePermissions":               [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.inventory-view.instance-set.get"
              ]
            }
          ]
        },
                {
          "id": "shared-inventory-batch-upsert-matchkey",
          "version": "2.0",
          "handlers": [          {
            "methods": ["PUT"],
            "pathPattern": "/shared-inventory-batch-upsert-matchkey",
            "permissionsRequired": ["inventory-update.batch-by-matchkey.collection.put"],
            "modulePermissions":             [
              "inventory-storage.items.collection.get",
              "inventory-storage.items.item.get",
              "inventory-storage.items.item.post",
              "inventory-storage.items.item.put",
              "inventory-storage.items.item.delete",
              "inventory-storage.items.batch.post",
              "inventory-storage.holdings.collection.get",
              "inventory-storage.holdings.item.get",
              "inventory-storage.holdings.item.post",
              "inventory-storage.holdings.item.put",
              "inventory-storage.holdings.item.delete",
              "inventory-storage.holdings.batch.post",
              "inventory-storage.instances.collection.get",
              "inventory-storage.instances.item.get",
              "inventory-storage.instances.item.post",
              "inventory-storage.instances.item.put",
              "inventory-storage.instances.item.delete",
              "inventory-storage.instances.batch.post",
              "inventory-storage.locations.collection.get",
              "inventory-storage.locations.item.get",
              "inventory-storage.preceding-succeeding-titles.collection.get",
              "inventory-storage.preceding-succeeding-titles.item.get",
              "inventory-storage.preceding-succeeding-titles.item.post",
              "inventory-storage.preceding-succeeding-titles.item.put",
              "inventory-storage.preceding-succeeding-titles.item.delete",
              "inventory-storage.instances.preceding-succeeding-titles.collection.put",
              "inventory-storage.instance-relationships.collection.get",
              "inventory-storage.instance-relationships.item.post",
              "inventory-storage.instance-relationships.item.get",
              "inventory-storage.instance-relationships.item.put",
              "inventory-storage.instance-relationships.item.delete",
              "inventory-storage.inventory-view.instance-set.get"
            ]
          }]
        }
      ],
      "requires":       [
                {
          "id": "instance-storage",
          "version": "9.0 10.0 11.0"
        },
                {
          "id": "holdings-storage",
          "version": "5.0 6.0 7.0 8.0"
        },
                {
          "id": "item-storage",
          "version": "8.2 9.0 10.0"
        },
                {
          "id": "instance-storage-batch-sync",
          "version": "1.1 2.0 3.0"
        },
                {
          "id": "holdings-storage-batch-sync",
          "version": "1.1 2.0"
        },
                {
          "id": "item-storage-batch-sync",
          "version": "1.0"
        },
                {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2"
        },
                {
          "id": "inventory-view-instance-set",
          "version": "1.0 2.0 3.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        }
      ],
      "optional": [      {
        "id": "orders-storage.po-lines",
        "version": "12.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "inventory-update.by-hrid.item.put",
          "replaces": ["inventory-upsert-hrid.item.put"],
          "displayName": "Inventory upsert based on HRID - create or update existing records",
          "description": "Create or update instance, holdings and items based on the Instance HRID"
        },
                {
          "permissionName": "inventory-update.batch-by-hrid.collection.put",
          "replaces": ["inventory-upsert-hrid.item.put"],
          "displayName": "Inventory batch upsert based on HRID - create or update existing records",
          "description": "Create or update instances, holdings and items based on the Instance HRID"
        },
                {
          "permissionName": "inventory-update.by-hrid.item.delete",
          "replaces": ["inventory-upsert-hrid.item.put"],
          "displayName": "Inventory delete based on HRID - deletes inventory record set",
          "description": "Delete instance, holdings and items based on the Instance HRID"
        },
                {
          "permissionName": "inventory-update.by-hrid.item.get",
          "replaces": ["inventory-upsert-hrid.item.get"],
          "displayName": "Get an Inventory record set - by UUID or HRID",
          "description": "Fetching an Inventory record set including holdings, items and relations, by Instance ID or HRID"
        },
                {
          "permissionName": "inventory-update.by-matchkey.item.put",
          "replaces": ["shared-inventory-upsert-matchkey.item.put"],
          "displayName": "Updating a shared Inventory by match key - create or update existing records",
          "description": "Create or update an instance, create or replace holdings and items, based on the Instance matchkey"
        },
                {
          "permissionName": "inventory-update.batch-by-matchkey.collection.put",
          "replaces": ["shared-inventory-upsert-matchkey.item.put"],
          "displayName": "Updating a shared Inventory record set by match key - create or update existing records",
          "description": "Create or update instances, create or replace holdings and items, based on the Instance matchkey"
        },
                {
          "permissionName": "inventory-update.by-matchkey.item.delete",
          "replaces": ["shared-inventory-upsert-matchkey.item.put"],
          "displayName": "Inventory delete based on HRID - deletes inventory record set",
          "description": "Delete instance, holdings and items based on the Instance HRID"
        },
                {
          "permissionName": "inventory-update.by-matchkey.item.get",
          "replaces": ["shared-inventory-upsert-matchkey.item.get"],
          "displayName": "Get an Inventory records set - by UUID or HRID",
          "description": "Fetching an Inventory record set including holdings, items and relations, by Instance ID or HRID"
        },
                {
          "permissionName": "inventory-update.all",
          "displayName": "inventory Update module - all permissions",
          "description": "Set of permissions required to use all APIs of the inventory update module",
          "subPermissions":           [
            "inventory-update.by-hrid.item.put",
            "inventory-update.batch-by-hrid.collection.put",
            "inventory-update.by-hrid.item.delete",
            "inventory-update.by-hrid.item.get",
            "inventory-update.by-matchkey.item.put",
            "inventory-update.batch-by-matchkey.collection.put",
            "inventory-update.by-matchkey.item.delete",
            "inventory-update.by-matchkey.item.get"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-inventory-update:4.1.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8080/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-user-import-3.10.0",
      "name": "User import",
      "provides": [      {
        "id": "user-import",
        "version": "2.2",
        "handlers": [        {
          "methods": ["POST"],
          "pathPattern": "/user-import",
          "permissionsRequired": ["user-import.post"],
          "modulePermissions":           [
            "addresstypes.collection.get",
            "circulation-storage.request-preferences.collection.get",
            "circulation-storage.request-preferences.item.delete",
            "circulation-storage.request-preferences.item.post",
            "circulation-storage.request-preferences.item.put",
            "departments.collection.get",
            "departments.item.post",
            "departments.item.put",
            "inventory-storage.service-points.collection.get",
            "perms.users.item.post",
            "user-settings.custom-fields.collection.get",
            "user-settings.custom-fields.item.put",
            "usergroups.collection.get",
            "users.collection.get",
            "users.item.get",
            "users.item.post",
            "users.item.put"
          ]
        }]
      }],
      "permissionSets":       [
                {
          "permissionName": "user-import.post",
          "displayName": "Import users",
          "description": "",
          "replaces": ["user-import.add"]
        },
                {
          "permissionName": "user-import.all",
          "displayName": "User import - all permissions",
          "description": "",
          "subPermissions": ["user-import.post"],
          "visible": true
        }
      ],
      "requires":       [
                {
          "id": "permissions",
          "version": "5.0"
        },
                {
          "id": "users",
          "version": "15.2 16.0"
        },
                {
          "id": "request-preference-storage",
          "version": "2.0"
        },
                {
          "id": "service-points",
          "version": "3.2"
        },
                {
          "id": "okapi",
          "version": "1.9"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-user-import:3.10.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=66.0"
        }]
      }
    },
        {
      "id": "mod-service-interaction-4.2.2",
      "name": "mod-service-interaction",
      "provides":       [
                {
          "id": "servint",
          "version": "4.2",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/settings*",
              "permissionsRequired": ["servint.settings.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/settings*",
              "permissionsRequired": ["servint.settings.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/settings*",
              "permissionsRequired": ["servint.settings.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/settings*",
              "permissionsRequired": ["servint.settings.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/refdata*",
              "permissionsRequired": ["servint.refdata.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/refdata*",
              "permissionsRequired": ["servint.refdata.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/refdata*",
              "permissionsRequired": ["servint.refdata.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/refdata*",
              "permissionsRequired": ["servint.refdata.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard",
              "permissionsRequired": ["servint.dashboards.collection.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/my-dashboards",
              "permissionsRequired": ["servint.dashboards.user.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/dashboard/my-dashboards",
              "permissionsRequired": ["servint.dashboards.user.put"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/{id}",
              "permissionsRequired": ["servint.dashboards.item.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/{id}/users",
              "permissionsRequired": ["servint.dashboards.access.item.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/dashboard/{id}/users",
              "permissionsRequired": ["servint.dashboards.access.item.post"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/{id}/widgets",
              "permissionsRequired": ["servint.dashboards.widgets.collection.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/{id}/my-access",
              "permissionsRequired": ["servint.dashboards.myAccess.item.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/dashboard/{id}/displayData",
              "permissionsRequired": ["servint.dashboards.displayData.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/dashboard/{id}/displayData",
              "permissionsRequired": ["servint.dashboards.displayData.put"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/dashboard",
              "permissionsRequired": ["servint.dashboards.item.post"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/dashboard/{id}",
              "permissionsRequired": ["servint.dashboards.item.put"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/dashboard/{id}",
              "permissionsRequired": ["servint.dashboards.item.delete"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/definitions/global",
              "permissionsRequired": ["servint.widgetDefinitions.collection.global.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/definitions",
              "permissionsRequired": ["servint.widgetDefinitions.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/definitions/{id}",
              "permissionsRequired": ["servint.widgetDefinitions.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/instances",
              "permissionsRequired": ["servint.widgetInstances.collection.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/instances/{id}",
              "permissionsRequired": ["servint.widgetInstances.item.get"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/widgets/instances/{id}",
              "permissionsRequired": ["servint.widgetInstances.item.put"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/widgets/instances",
              "permissionsRequired": ["servint.widgetInstances.item.post"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/widgets/instances/{id}",
              "permissionsRequired": ["servint.widgetInstances.item.delete"],
              "permissionsDesired": ["servint.dashboards.admin.allops"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/widgets/types",
              "permissionsRequired": ["servint.widgetTypes.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/admin/*",
              "permissionsRequired": ["servint.admin.action.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/numberGenerators",
              "permissionsRequired": ["servint.numberGenerator.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/numberGenerators/{id}",
              "permissionsRequired": ["servint.numberGenerator.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/numberGenerators",
              "permissionsRequired": ["servint.numberGenerator.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/numberGenerators/{id}",
              "permissionsRequired": ["servint.numberGenerator.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/numberGenerators/{id}",
              "permissionsRequired": ["servint.numberGenerator.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/numberGenerators/getNextNumber",
              "permissionsRequired": ["servint.numberGenerator.generate.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/numberGeneratorSequences",
              "permissionsRequired": ["servint.numberGeneratorSequence.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/servint/numberGeneratorSequences/{id}",
              "permissionsRequired": ["servint.numberGeneratorSequence.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/servint/numberGeneratorSequences",
              "permissionsRequired": ["servint.numberGeneratorSequence.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/servint/numberGeneratorSequences/{id}",
              "permissionsRequired": ["servint.numberGeneratorSequence.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/servint/numberGeneratorSequences/{id}",
              "permissionsRequired": ["servint.numberGeneratorSequence.item.delete"]
            }
          ]
        },
                {
          "id": "dashboard",
          "interfaceType": "multiple",
          "version": "1.0",
          "handlers": [          {
            "methods": ["GET"],
            "pathPattern": "/dashboard/definitions",
            "permissionsRequired": []
          }]
        },
                {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers":           [
                        {
              "permissionsRequired": [],
              "methods":               [
                "POST",
                "DELETE"
              ],
              "pathPattern": "/_/tenant"
            },
                        {
              "permissionsRequired": [],
              "methods": ["POST"],
              "pathPattern": "/_/tenant/disable"
            }
          ]
        }
      ],
      "requires": [      {
        "id": "okapi",
        "version": "1.9"
      }],
      "permissionSets":       [
                {
          "permissionName": "servint.settings.get",
          "displayName": "settings get",
          "description": "get settings",
          "visible": false
        },
                {
          "permissionName": "servint.settings.post",
          "displayName": "settings post",
          "description": "post settings",
          "visible": false
        },
                {
          "permissionName": "servint.settings.put",
          "displayName": "settings put",
          "description": "put settings",
          "visible": false
        },
                {
          "permissionName": "servint.settings.delete",
          "displayName": "settings delete",
          "description": "delete settings",
          "visible": false
        },
                {
          "permissionName": "servint.settings.read",
          "displayName": "settings read",
          "description": "read settings",
          "visible": false,
          "subPermissions": ["servint.settings.get"]
        },
                {
          "permissionName": "servint.settings.write",
          "displayName": "settings write",
          "description": "write settings",
          "visible": false,
          "subPermissions":           [
            "servint.settings.read",
            "servint.settings.post",
            "servint.settings.put",
            "servint.settings.delete"
          ]
        },
                {
          "permissionName": "servint.refdata.get",
          "displayName": "refdata get",
          "description": "get refdata",
          "visible": false
        },
                {
          "permissionName": "servint.refdata.post",
          "displayName": "refdata post",
          "description": "post refdata",
          "visible": false
        },
                {
          "permissionName": "servint.refdata.put",
          "displayName": "refdata put",
          "description": "put refdata",
          "visible": false
        },
                {
          "permissionName": "servint.refdata.delete",
          "displayName": "refdata delete",
          "description": "delete refdata",
          "visible": false
        },
                {
          "permissionName": "servint.refdata.read",
          "displayName": "refdata read",
          "description": "read refdata",
          "visible": false,
          "subPermissions": ["servint.refdata.get"]
        },
                {
          "permissionName": "servint.refdata.write",
          "displayName": "refdata write",
          "description": "write refdata",
          "visible": false,
          "subPermissions":           [
            "servint.refdata.read",
            "servint.refdata.post",
            "servint.refdata.put",
            "servint.refdata.delete"
          ]
        },
                {
          "permissionName": "servint.dashboards.user.get",
          "displayName": "Dashboard user collection get",
          "description": "Get a collection of dashboards for a user"
        },
                {
          "permissionName": "servint.dashboards.user.put",
          "displayName": "Dashboard user collection put",
          "description": "Edit a collection of dashboards for a user"
        },
                {
          "permissionName": "servint.dashboards.item.get",
          "displayName": "Dashboard user item get",
          "description": "Get a dashboard item for a user"
        },
                {
          "permissionName": "servint.dashboards.displayData.get",
          "displayName": "Dashboard display data get",
          "description": "Get display data for a dashboard"
        },
                {
          "permissionName": "servint.dashboards.myAccess.item.get",
          "displayName": "'My access' dashboard get",
          "description": "Get my user access level for a dashboard"
        },
                {
          "permissionName": "servint.dashboards.displayData.put",
          "displayName": "Dashboard display data put",
          "description": "Edit display data for a dashboard"
        },
                {
          "permissionName": "servint.dashboards.access.item.get",
          "displayName": "Dashboard access get",
          "description": "Get dashboard access informaton for a dashboard"
        },
                {
          "permissionName": "servint.dashboards.widgets.collection.get",
          "displayName": "Dashboard widget collection get",
          "description": "Get collection of widgets for a dashboard"
        },
                {
          "permissionName": "servint.dashboards.view",
          "subPermissions":           [
            "servint.dashboards.user.get",
            "servint.dashboards.item.get",
            "servint.dashboards.access.item.get",
            "servint.dashboards.myAccess.item.get",
            "servint.dashboards.displayData.get"
          ]
        },
                {
          "permissionName": "servint.dashboards.item.post",
          "displayName": "Dashboard user item post",
          "description": "Post a dashboard item for a user"
        },
                {
          "permissionName": "servint.dashboards.item.put",
          "displayName": "Dashboard user item put",
          "description": "Put a dashboard item for a user"
        },
                {
          "permissionName": "servint.dashboards.access.item.post",
          "displayName": "Dashboard access post",
          "description": "Control dashboard access for dashboards"
        },
                {
          "permissionName": "servint.widgetTypes.collection.get",
          "displayName": "WidgetTypes collection get",
          "description": "Get a collection of all WidgetTypes"
        },
                {
          "permissionName": "servint.widgetDefinitions.collection.global.get",
          "displayName": "WidgetDefinition collection global get",
          "description": "Get list of all WidgetDefinitions from all implementing modules"
        },
                {
          "permissionName": "servint.widgetDefinitions.collection.get",
          "displayName": "WidgetDefinition collection get",
          "description": "Get a collection of all WidgetDefinitions"
        },
                {
          "permissionName": "servint.widgetDefinitions.item.get",
          "displayName": "WidgetDefinition item get",
          "description": "Get a WidgetDefinition item"
        },
                {
          "permissionName": "servint.widgetInstances.user.get",
          "displayName": "Widget instances user collection get",
          "description": "Get a collection of WidgetInstances for a user"
        },
                {
          "permissionName": "servint.widgetInstances.collection.get",
          "displayName": "WidgetInstance collection get ",
          "description": "Get a collection of WidgetInstance items"
        },
                {
          "permissionName": "servint.widgetInstances.item.get",
          "displayName": "WidgetInstance item post",
          "description": "Get a WidgetInstance item"
        },
                {
          "permissionName": "servint.widgetInstances.item.post",
          "displayName": "WidgetInstance item post",
          "description": "Post a WidgetInstance item"
        },
                {
          "permissionName": "servint.widgetInstances.item.put",
          "displayName": "WidgetInstance item put",
          "description": "Put a WidgetInstance item"
        },
                {
          "permissionName": "servint.widgetInstances.item.delete",
          "displayName": "WidgetInstance item delete",
          "description": "Delete a WidgetInstance item"
        },
                {
          "permissionName": "servint.widget.view",
          "displayName": "Widget view",
          "description": "Allow user to view their own widgets",
          "subPermissions":           [
            "servint.dashboards.widgets.collection.get",
            "servint.widgetTypes.collection.get",
            "servint.widgetDefinitions.collection.global.get",
            "servint.widgetInstances.item.get",
            "servint.widgetInstances.user.get"
          ]
        },
                {
          "permissionName": "servint.widget.create",
          "displayName": "Widget creation",
          "description": "Allow user to access widgetDefinitions and post widgetInstances",
          "subPermissions":           [
            "servint.widget.view",
            "servint.widgetInstances.item.post"
          ]
        },
                {
          "permissionName": "servint.widget.edit",
          "displayName": "Widget editing",
          "description": "Allow user to edit and delete widgetInstances",
          "subPermissions":           [
            "servint.widgetInstances.item.put",
            "servint.widgetInstances.item.delete"
          ]
        },
                {
          "permissionName": "servint.dashboards.edit",
          "displayName": "Dashboards edit",
          "description": "Allow user to create, edit and add widgets to dashboards",
          "subPermissions":           [
            "servint.dashboards.view",
            "servint.dashboards.user.put",
            "servint.dashboards.item.post",
            "servint.dashboards.item.put",
            "servint.dashboards.access.item.post",
            "servint.dashboards.displayData.put",
            "servint.widget.create",
            "servint.widget.edit"
          ]
        },
                {
          "permissionName": "servint.dashboards.item.delete",
          "displayName": "Dashboard user item delete",
          "description": "Delete a dashboard item for a user"
        },
                {
          "permissionName": "servint.dashboards.manage",
          "displayName": "Dashboards manage",
          "description": "Dashboard edit and delete",
          "subPermissions":           [
            "servint.dashboards.edit",
            "servint.dashboards.item.delete"
          ]
        },
                {
          "permissionName": "servint.dashboards.collection.get",
          "displayName": "Dashboard collection get",
          "description": "Get all dashboards"
        },
                {
          "permissionName": "servint.widgetDefinitions.manage",
          "displayName": "Manage local WidgetDefinitions admin",
          "description": "Permissions to manage the local store of tenant defined WidgetDefinitions",
          "subPermissions":           [
            "servint.widgetDefinitions.collection.get",
            "servint.widgetDefinitions.item.get"
          ]
        },
                {
          "permissionName": "servint.admin.action.execute",
          "displayName": "Administrator actions",
          "description": "Allow administrator to perform actions",
          "replaces": ["servint.admin.action"]
        },
                {
          "permissionName": "servint.dashboards.admin.allops",
          "displayName": "Dashboard admin override",
          "description": "Permission allowing user to perform any action regardless of ownership of dashboard resources",
          "replaces": ["servint.dashboards.admin"]
        },
                {
          "permissionName": "servint.dashboards.admin.manage",
          "displayName": "Dashboard admin",
          "description": "Allow admin access to dashboards",
          "subPermissions":           [
            "servint.dashboards.admin.allops",
            "servint.widgetInstances.collection.get",
            "servint.dashboards.collection.get",
            "servint.dashboards.manage",
            "servint.admin.action.execute",
            "servint.widgetDefinitions.manage"
          ]
        },
                {
          "permissionName": "servint.numberGenerator.collection.get",
          "displayName": "NumberGenerator collection get ",
          "description": "Get a collection of NumberGenerator items"
        },
                {
          "permissionName": "servint.numberGenerator.item.get",
          "displayName": "NumberGenerator item get",
          "description": "Get a NumberGenerator item"
        },
                {
          "permissionName": "servint.numberGenerator.item.post",
          "displayName": "NumberGenerator item post",
          "description": "Post a NumberGenerator item"
        },
                {
          "permissionName": "servint.numberGenerator.item.put",
          "displayName": "NumberGenerator item put",
          "description": "Put a NumberGenerator item"
        },
                {
          "permissionName": "servint.numberGenerator.item.delete",
          "displayName": "NumberGenerator item delete",
          "description": "Delete a NumberGenerator item"
        },
                {
          "permissionName": "servint.numberGeneratorSequence.collection.get",
          "displayName": "NumberGeneratorSequence collection get ",
          "description": "Get a collection of NumberGeneratorSequence items"
        },
                {
          "permissionName": "servint.numberGeneratorSequence.item.get",
          "displayName": "NumberGeneratorSequence item get",
          "description": "Get a NumberGeneratorSequence item"
        },
                {
          "permissionName": "servint.numberGeneratorSequence.item.post",
          "displayName": "NumberGeneratorSequence item post",
          "description": "Post a NumberGeneratorSequence item"
        },
                {
          "permissionName": "servint.numberGeneratorSequence.item.put",
          "displayName": "NumberGeneratorSequence item put",
          "description": "Put a NumberGeneratorSequence item"
        },
                {
          "permissionName": "servint.numberGeneratorSequence.item.delete",
          "displayName": "NumberGeneratorSequence item delete",
          "description": "Delete a NumberGeneratorSequence item"
        },
                {
          "permissionName": "servint.numberGenerator.generate.execute",
          "displayName": "NumberGeneratorSequence generate",
          "description": "Generate the next item in a NumberGenerator sequence",
          "replaces": ["servint.numberGenerator.generate"]
        },
                {
          "permissionName": "servint.numberGenerator.view",
          "displayName": "NumberGenerator view",
          "description": "Allow user to view number generators",
          "subPermissions":           [
            "servint.numberGenerator.collection.get",
            "servint.numberGenerator.item.get",
            "servint.numberGeneratorSequence.collection.get",
            "servint.numberGeneratorSequence.item.get",
            "servint.refdata.read"
          ]
        },
                {
          "permissionName": "servint.numberGenerator.number.generate",
          "displayName": "NumberGenerator generate",
          "description": "Allow user to use number generators to generate the next number in a sequence",
          "subPermissions":           [
            "servint.numberGenerator.view",
            "servint.numberGenerator.generate.execute"
          ],
          "replaces": ["servint.numberGenerator.use"]
        },
                {
          "permissionName": "servint.numberGenerator.create",
          "displayName": "NumberGenerator create",
          "description": "Allow user to set up number generators and sequences",
          "subPermissions":           [
            "servint.numberGenerator.number.generate",
            "servint.numberGenerator.item.post",
            "servint.numberGeneratorSequence.item.post"
          ]
        },
                {
          "permissionName": "servint.numberGenerator.edit",
          "displayName": "NumberGenerator edit",
          "description": "Allow user to set up and edit number generators and sequences",
          "subPermissions":           [
            "servint.numberGenerator.create",
            "servint.numberGenerator.item.put",
            "servint.numberGeneratorSequence.item.put"
          ],
          "replaces": ["servint.numberGenerator.config"]
        },
                {
          "permissionName": "servint.numberGenerator.manage",
          "displayName": "NumberGenerator manage",
          "description": "Allow user to configure and delete number generators",
          "subPermissions":           [
            "servint.numberGenerator.edit",
            "servint.numberGenerator.item.delete",
            "servint.numberGeneratorSequence.item.delete"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-service-interaction:4.2.2",
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8080/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-server -XX:+UseContainerSupport -XX:MaxRAMPercentage=55.0 -XX:+PrintFlagsFinal"
        }],
        "dockerPull": false
      }
    },
        {
      "id": "mod-ebsconet-2.4.0",
      "name": "Ebsconet integration business logic module",
      "requires":       [
                {
          "id": "orders",
          "version": "12.0"
        },
                {
          "id": "order-lines",
          "version": "3.0"
        },
                {
          "id": "organizations.organizations",
          "version": "1.1"
        },
                {
          "id": "finance.expense-classes",
          "version": "3.0"
        },
                {
          "id": "finance.funds",
          "version": "3.0"
        },
                {
          "id": "notes",
          "version": "4.0"
        }
      ],
      "provides": [      {
        "id": "ebsconet",
        "version": "2.0",
        "handlers":         [
                    {
            "methods": ["GET"],
            "pathPattern": "/ebsconet/orders/order-lines/{polNumber}",
            "permissionsRequired": ["ebsconet.order-lines.item.get"],
            "modulePermissions":             [
              "finance.expense-classes.item.get",
              "orders.item.get",
              "orders.po-lines.collection.get",
              "organizations.organizations.item.get"
            ]
          },
                    {
            "methods": ["PUT"],
            "pathPattern": "/ebsconet/orders/order-lines/{polNumber}",
            "permissionsRequired": ["ebsconet.order-lines.item.put"],
            "modulePermissions":             [
              "finance.funds.collection.get",
              "finance.expense-classes.collection.get",
              "finance.expense-classes.item.get",
              "orders.po-lines.collection.get",
              "orders.po-lines.item.get",
              "orders.po-lines.item.put",
              "notes.item.post",
              "notes.item.delete",
              "note.links.collection.get",
              "note.types.collection.get"
            ]
          },
                    {
            "methods": ["GET"],
            "pathPattern": "/ebsconet/validate",
            "permissionsRequired": ["ebsconet.orders.validate.get"],
            "modulePermissions": []
          }
        ]
      }],
      "permissionSets":       [
                {
          "permissionName": "ebsconet.all",
          "displayName": "Ebsconet API module - all permissions",
          "description": "All permissions for ebsconet module",
          "subPermissions":           [
            "ebsconet.order-lines.item.get",
            "ebsconet.order-lines.item.put",
            "ebsconet.orders.validate.get"
          ]
        },
                {
          "permissionName": "ebsconet.order-lines.item.get",
          "displayName": "get order line, related to the order line number",
          "description": "Get list of order line"
        },
                {
          "permissionName": "ebsconet.order-lines.item.put",
          "displayName": "update order line, related to the order line number",
          "description": "Update order line"
        },
                {
          "permissionName": "ebsconet.orders.validate.get",
          "displayName": "validate order",
          "description": "Validate order"
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-ebsconet:2.4.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 357913941,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env": [        {
          "name": "JAVA_OPTIONS",
          "value": "-XX:MaxRAMPercentage=80.0"
        }]
      }
    },
        {
      "id": "mod-batch-print-1.3.0",
      "name": "Batch printing",
      "provides":       [
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        },
                {
          "id": "batch-print",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/print/entries",
              "permissionsRequired": ["batch-print.entries.item.post"],
              "permissionsDesired": ["batch-print.print.write"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/print/entries",
              "permissionsRequired": ["batch-print.entries.collection.get"],
              "permissionsDesired": ["batch-print.print.read"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/print/entries",
              "permissionsRequired": ["batch-print.entries.collection.delete"],
              "permissionsDesired": ["batch-print.print.write"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": ["batch-print.entries.item.get"],
              "permissionsDesired": ["batch-print.print.read"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": ["batch-print.entries.item.put"],
              "permissionsDesired": ["batch-print.print.write"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": ["batch-print.entries.item.delete"],
              "permissionsDesired": ["batch-print.print.write"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/mail",
              "permissionsRequired": ["batch-print.entries.mail.post"],
              "permissionsDesired": ["batch-print.print.write"]
            }
          ]
        },
                {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [          {
            "methods": ["POST"],
            "pathPattern": "/print/batch-creation",
            "modulePermissions":             [
              "batch-print.print.write",
              "batch-print.print.read"
            ],
            "schedule":             {
              "cron": "1 6 * * *",
              "zone": "CET"
            }
          }]
        }
      ],
      "requires": [],
      "permissionSets":       [
                {
          "permissionName": "batch-print.print.write",
          "displayName": "batch print - write print entries",
          "description": "Write print entries",
          "visible": false
        },
                {
          "permissionName": "batch-print.print.read",
          "displayName": "batch print - read print entries",
          "description": "Read print entries",
          "visible": false
        },
                {
          "permissionName": "batch-print.entries.mail.post",
          "displayName": "batch print - send mail",
          "description": "Send mail to print"
        },
                {
          "permissionName": "batch-print.entries.item.post",
          "displayName": "batch print - create print entry",
          "description": "Create print entry"
        },
                {
          "permissionName": "batch-print.entries.item.put",
          "displayName": "batch print - update print entry",
          "description": "Update print entry"
        },
                {
          "permissionName": "batch-print.entries.collection.get",
          "displayName": "batch print - get print entries",
          "description": "Get batch print"
        },
                {
          "permissionName": "batch-print.entries.item.get",
          "displayName": "batch print - get print entry",
          "description": "Get print entry"
        },
                {
          "permissionName": "batch-print.entries.item.delete",
          "displayName": "batch print - delete print entry",
          "description": "Delete print entry"
        },
                {
          "permissionName": "batch-print.entries.collection.delete",
          "replaces": ["batch-print.entries.item.delete"],
          "displayName": "batch print - delete print entries",
          "description": "Delete print entries"
        },
                {
          "permissionName": "batch-print.entries.all",
          "displayName": "batch print - all batch print permissions",
          "description": "All batch print permissions",
          "subPermissions":           [
            "batch-print.entries.item.post",
            "batch-print.entries.collection.get",
            "batch-print.entries.item.get",
            "batch-print.entries.item.put",
            "batch-print.entries.item.delete",
            "batch-print.entries.collection.delete",
            "batch-print.entries.mail.post",
            "batch-print.print.write",
            "batch-print.print.read"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-batch-print:1.3.0",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 2147483648,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ]
      }
    },
        {
      "id": "mod-serials-management-2.0.2",
      "name": "mod-serials-management",
      "provides":       [
                {
          "id": "serials-management",
          "version": "2.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/refdata",
              "permissionsRequired": ["serials-management.refdata.category.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/refdata/{domain}/{property}",
              "permissionsRequired": ["serials-management.refdata.value.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": ["serials-management.refdata.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/refdata",
              "permissionsRequired": ["serials-management.refdata.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": ["serials-management.refdata.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": ["serials-management.refdata.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/serials",
              "permissionsRequired": ["serials-management.serials.collection.get"],
              "modulePermissions": ["orders.po-lines.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": ["serials-management.serials.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/serials",
              "permissionsRequired": ["serials-management.serials.item.post"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": ["serials-management.serials.item.put"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": ["serials-management.serials.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/rulesets",
              "permissionsRequired": ["serials-management.rulesets.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/rulesets/{id}",
              "permissionsRequired": ["serials-management.rulesets.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets",
              "permissionsRequired": ["serials-management.rulesets.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/serials-management/rulesets/{id}",
              "permissionsRequired": ["serials-management.rulesets.item.delete"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets/{id}/active",
              "permissionsRequired": ["serials-management.rulesets.set-active.execute"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets/{id}/deprecated",
              "permissionsRequired": ["serials-management.rulesets.set-deprecated.execute"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets/{id}/draft",
              "permissionsRequired": ["serials-management.rulesets.set-draft.execute"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets/{id}/replaceAndDeprecate",
              "permissionsRequired": ["serials-management.rulesets.replace-deprecate.execute"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/rulesets/{id}/replaceAndDelete",
              "permissionsRequired": ["serials-management.rulesets.replace-delete.execute"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/predictedPieces",
              "permissionsRequired": ["serials-management.predictedPieceSets.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": ["serials-management.predictedPieceSets.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": ["serials-management.predictedPieceSets.item.put"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/predictedPieces/generate",
              "permissionsRequired": ["serials-management.predictedPieceSets.transient.generate"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/predictedPieces/create",
              "permissionsRequired": ["serials-management.predictedPieceSets.generate"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": ["serials-management.predictedPieceSets.item.delete"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/locales",
              "permissionsRequired": ["serials-management.locales.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/modelRulesets",
              "permissionsRequired": ["serials-management.modelRulesets.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/serials-management/modelRulesets/{id}",
              "permissionsRequired": ["serials-management.modelRulesets.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/serials-management/modelRulesets",
              "permissionsRequired": ["serials-management.modelRulesets.item.post"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/serials-management/modelRulesets/{id}",
              "permissionsRequired": ["serials-management.modelRulesets.item.delete"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers":           [
                        {
              "permissionsRequired": [],
              "methods":               [
                "POST",
                "DELETE"
              ],
              "pathPattern": "/_/tenant"
            },
                        {
              "permissionsRequired": [],
              "methods": ["POST"],
              "pathPattern": "/_/tenant/disable"
            }
          ]
        }
      ],
      "requires": [],
      "optional": [      {
        "id": "order-lines",
        "version": "3.3"
      }],
      "permissionSets":       [
                {
          "permissionName": "serials-management.settings.get",
          "displayName": "settings get",
          "description": "get settings",
          "visible": false
        },
                {
          "permissionName": "serials-management.settings.post",
          "displayName": "settings post",
          "description": "post settings",
          "visible": false
        },
                {
          "permissionName": "serials-management.settings.put",
          "displayName": "settings put",
          "description": "put settings",
          "visible": false
        },
                {
          "permissionName": "serials-management.settings.delete",
          "displayName": "settings delete",
          "description": "delete settings",
          "visible": false
        },
                {
          "permissionName": "serials-management.settings.read",
          "displayName": "settings read",
          "description": "read settings",
          "visible": false,
          "subPermissions": ["serials-management.settings.get"]
        },
                {
          "permissionName": "serials-management.settings.write",
          "displayName": "settings write",
          "description": "write settings",
          "visible": false,
          "subPermissions":           [
            "serials-management.settings.read",
            "serials-management.settings.post",
            "serials-management.settings.put",
            "serials-management.settings.delete"
          ]
        },
                {
          "permissionName": "serials-management.refdata.category.collection.get",
          "displayName": "Ref data category collection get",
          "description": "Get a collection of ref data category records",
          "visible": false,
          "replaces": ["serials-management.refdata.collection.get"]
        },
                {
          "permissionName": "serials-management.refdata.value.collection.get",
          "displayName": "Ref data value collection get",
          "description": "Get a collection of ref data value records",
          "visible": false,
          "replaces": ["serials-management.refdata.collection.get"]
        },
                {
          "permissionName": "serials-management.refdata.item.get",
          "displayName": "Ref data item get",
          "description": "Get a ref data record",
          "visible": false
        },
                {
          "permissionName": "serials-management.refdata.item.post",
          "displayName": "Ref data item post",
          "description": "Post a ref data record",
          "visible": false
        },
                {
          "permissionName": "serials-management.refdata.item.put",
          "displayName": "Ref data item put",
          "description": "Put a ref data record",
          "visible": false
        },
                {
          "permissionName": "serials-management.refdata.item.delete",
          "displayName": "Ref data item delete",
          "description": "Delete a ref data record",
          "visible": false
        },
                {
          "permissionName": "serials-management.refdata.read",
          "displayName": "Refdata read",
          "description": "Read refdata as items or collections",
          "subPermissions":           [
            "serials-management.refdata.value.collection.get",
            "serials-management.refdata.category.collection.get",
            "serials-management.refdata.item.get"
          ]
        },
                {
          "permissionName": "serials-management.refdata.write",
          "displayName": "Refdata write",
          "description": "Read and write refdata entries",
          "subPermissions":           [
            "serials-management.refdata.read",
            "serials-management.refdata.item.post",
            "serials-management.refdata.item.put"
          ]
        },
                {
          "permissionName": "serials-management.refdata.manage",
          "displayName": "Refdata manage",
          "description": "Read, write and delete refdata entries",
          "subPermissions":           [
            "serials-management.refdata.write",
            "serials-management.refdata.item.delete"
          ]
        },
                {
          "permissionName": "serials-management.serials.collection.get",
          "displayName": "Serial collection get",
          "description": "Get a collection of serial records"
        },
                {
          "permissionName": "serials-management.serials.item.get",
          "displayName": "Serial item get",
          "description": "Get a serial record"
        },
                {
          "permissionName": "serials-management.serials.view",
          "subPermissions":           [
            "serials-management.serials.collection.get",
            "serials-management.serials.item.get"
          ]
        },
                {
          "permissionName": "serials-management.serials.item.post",
          "displayName": "Serial item post",
          "description": "Post a serial record"
        },
                {
          "permissionName": "serials-management.serials.item.put",
          "displayName": "Serial item put",
          "description": "Put a serial record"
        },
                {
          "permissionName": "serials-management.serials.edit",
          "subPermissions":           [
            "serials-management.serials.view",
            "serials-management.serials.item.post",
            "serials-management.serials.item.put"
          ]
        },
                {
          "permissionName": "serials-management.serials.item.delete",
          "displayName": "Serial item delete",
          "description": "Delete a serial record"
        },
                {
          "permissionName": "serials-management.serials.manage",
          "subPermissions":           [
            "serials-management.serials.edit",
            "serials-management.serials.item.delete"
          ]
        },
                {
          "permissionName": "serials-management.rulesets.collection.get",
          "displayName": "Ruleset collection get",
          "description": "Get a collection of ruleset records"
        },
                {
          "permissionName": "serials-management.rulesets.item.get",
          "displayName": "Ruleset item get",
          "description": "Get a ruleset record"
        },
                {
          "permissionName": "serials-management.rulesets.view",
          "subPermissions":           [
            "serials-management.rulesets.collection.get",
            "serials-management.rulesets.item.get"
          ]
        },
                {
          "permissionName": "serials-management.rulesets.item.post",
          "displayName": "Ruleset item post",
          "description": "Post a ruleset record"
        },
                {
          "permissionName": "serials-management.rulesets.set-active.execute",
          "displayName": "Set ruleset status active",
          "description": "Permit the changing of a ruleset status to \"active\"",
          "replaces": ["serials-management.rulesets.item.put"]
        },
                {
          "permissionName": "serials-management.rulesets.set-deprecated.execute",
          "displayName": "Set ruleset status deprecated",
          "description": "Permit the changing of a ruleset status to \"deprecated\"",
          "replaces": ["serials-management.rulesets.item.put"]
        },
                {
          "permissionName": "serials-management.rulesets.set-draft.execute",
          "displayName": "Set ruleset status draft",
          "description": "Permit the changing of a ruleset status to \"draft\"",
          "replaces": ["serials-management.rulesets.item.put"]
        },
                {
          "permissionName": "serials-management.rulesets.replace-delete.execute",
          "displayName": "Replace and delete a ruleset",
          "description": "Permit the deletion and replacement of a ruleset"
        },
                {
          "permissionName": "serials-management.rulesets.replace-deprecate.execute",
          "displayName": "Replace and deprecate a ruleset",
          "description": "Permit the deprecation and replacement of a ruleset"
        },
                {
          "permissionName": "serials-management.rulesets.edit",
          "subPermissions":           [
            "serials-management.rulesets.view",
            "serials-management.rulesets.item.post",
            "serials-management.rulesets.set-active.execute",
            "serials-management.rulesets.set-deprecated.execute",
            "serials-management.rulesets.set-draft.execute",
            "serials-management.rulesets.replace-delete.execute",
            "serials-management.rulesets.replace-deprecate.execute"
          ]
        },
                {
          "permissionName": "serials-management.rulesets.item.delete",
          "displayName": "Ruleset item delete",
          "description": "Delete a ruleset record"
        },
                {
          "permissionName": "serials-management.rulesets.manage",
          "subPermissions":           [
            "serials-management.rulesets.edit",
            "serials-management.rulesets.item.delete"
          ]
        },
                {
          "permissionName": "serials-management.predictedPieceSets.collection.get",
          "displayName": "Predicted pieces collection get",
          "description": "Get a collection of predicted piece set records"
        },
                {
          "permissionName": "serials-management.predictedPieceSets.item.get",
          "displayName": "Predicted pieces item get",
          "description": "Get a predicted piece set record"
        },
                {
          "permissionName": "serials-management.predictedPieceSets.view",
          "subPermissions":           [
            "serials-management.predictedPieceSets.collection.get",
            "serials-management.predictedPieceSets.item.get"
          ]
        },
                {
          "permissionName": "serials-management.predictedPieceSets.transient.generate",
          "displayName": "Predicted piece set preview generate",
          "description": "Generate predicted piece set for preview without saving",
          "replaces": ["serials-management.predictedPieceSets.item.post"]
        },
                {
          "permissionName": "serials-management.predictedPieceSets.generate",
          "displayName": "Predicted piece set generate",
          "description": "Generate predicted piece set",
          "replaces": ["serials-management.predictedPieceSets.item.post"]
        },
                {
          "permissionName": "serials-management.predictedPieceSets.item.put",
          "displayName": "Predicted piece set item put",
          "description": "Put a predicted piece set record"
        },
                {
          "permissionName": "serials-management.predictedPieceSets.item.delete",
          "displayName": "Predicted piece set item delete",
          "description": "Delete a predicted piece set record"
        },
                {
          "permissionName": "serials-management.predictedPieceSets.edit",
          "subPermissions":           [
            "serials-management.predictedPieceSets.view",
            "serials-management.predictedPieceSets.transient.generate",
            "serials-management.predictedPieceSets.generate",
            "serials-management.predictedPieceSets.item.put"
          ]
        },
                {
          "permissionName": "serials-management.predictedPieceSets.manage",
          "subPermissions":           [
            "serials-management.predictedPieceSets.edit",
            "serials-management.predictedPieceSets.item.delete"
          ]
        },
                {
          "permissionName": "serials-management.locales.collection.get",
          "displayName": "Locales collection get",
          "description": "Get the collection of locales"
        },
                {
          "permissionName": "serials-management.modelRulesets.collection.get",
          "displayName": "Model ruleset collection get",
          "description": "Get a collection of model ruleset records"
        },
                {
          "permissionName": "serials-management.modelRulesets.item.get",
          "displayName": "Model ruleset item get",
          "description": "Get a model ruleset record"
        },
                {
          "permissionName": "serials-management.modelRulesets.view",
          "subPermissions":           [
            "serials-management.modelRulesets.collection.get",
            "serials-management.modelRulesets.item.get"
          ]
        },
                {
          "permissionName": "serials-management.modelRulesets.item.post",
          "displayName": "Model ruleset item post",
          "description": "Post a model ruleset record"
        },
                {
          "permissionName": "serials-management.modelRulesets.edit",
          "subPermissions":           [
            "serials-management.modelRulesets.view",
            "serials-management.modelRulesets.item.post"
          ]
        },
                {
          "permissionName": "serials-management.modelRulesets.item.delete",
          "displayName": "Model ruleset item delete",
          "description": "Delete a model ruleset record"
        },
                {
          "permissionName": "serials-management.modelRulesets.manage",
          "subPermissions":           [
            "serials-management.modelRulesets.edit",
            "serials-management.modelRulesets.item.delete"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-serials-management:2.0.2",
        "dockerArgs": {"HostConfig":         {
          "Memory": 1073741824,
          "PortBindings": {"8080/tcp": [{"HostPort": "%p"}]}
        }},
        "dockerPull": false,
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-server -XX:+UseContainerSupport -XX:MaxRAMPercentage=55.0 -XX:+PrintFlagsFinal"
          },
                    {
            "name": "DB_HOST",
            "value": "postgres"
          },
                    {
            "name": "DB_PORT",
            "value": "5432"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "50"
          }
        ]
      }
    },
        {
      "id": "mod-record-specifications-2.0.1",
      "name": "Record Specifications",
      "provides":       [
                {
          "id": "specification-storage",
          "version": "1.0",
          "handlers":           [
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/specifications",
              "permissionsRequired": ["specification-storage.specifications.collection.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/specifications/{specificationId}",
              "permissionsRequired": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/specification-storage/specifications/{specificationId}/sync",
              "permissionsRequired": ["specification-storage.specification.item.sync.execute"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/specifications/{specificationId}/rules",
              "permissionsRequired": ["specification-storage.specification.rules.collection.get"]
            },
                        {
              "methods": ["PATCH"],
              "pathPattern": "/specification-storage/specifications/{specificationId}/rules/{ruleId}",
              "permissionsRequired": ["specification-storage.specification.rules.item.patch"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
              "permissionsRequired": ["specification-storage.specification.fields.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
              "permissionsRequired": ["specification-storage.specification.fields.item.post"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/specification-storage/fields/{id}",
              "permissionsRequired": ["specification-storage.fields.item.put"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/specification-storage/fields/{id}",
              "permissionsRequired": ["specification-storage.fields.item.delete"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
              "permissionsRequired": ["specification-storage.field.subfields.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
              "permissionsRequired": ["specification-storage.field.subfields.item.post"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
              "permissionsRequired": ["specification-storage.field.indicators.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
              "permissionsRequired": ["specification-storage.field.indicators.item.post"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/specification-storage/indicators/{indicatorId}",
              "permissionsRequired": ["specification-storage.indicators.item.put"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["GET"],
              "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
              "permissionsRequired": ["specification-storage.indicator.indicator-codes.collection.get"]
            },
                        {
              "methods": ["POST"],
              "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
              "permissionsRequired": ["specification-storage.indicator.indicator-codes.item.post"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
              "permissionsRequired": ["specification-storage.indicator-codes.item.put"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
              "permissionsRequired": ["specification-storage.indicator-codes.item.delete"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["PUT"],
              "pathPattern": "/specification-storage/subfields/{subfieldId}",
              "permissionsRequired": ["specification-storage.subfields.item.put"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            },
                        {
              "methods": ["DELETE"],
              "pathPattern": "/specification-storage/subfields/{subfieldId}",
              "permissionsRequired": ["specification-storage.subfields.item.delete"],
              "modulePermissions": ["specification-storage.specifications.item.get"]
            }
          ]
        },
                {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers":           [
                        {
              "methods": ["POST"],
              "pathPattern": "/_/tenant"
            },
                        {
              "methods":               [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}"
            }
          ]
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "specification-storage.specifications.collection.get",
          "displayName": "Specification Storage - Get specification collection",
          "description": "Get specification collection"
        },
                {
          "permissionName": "specification-storage.specifications.item.get",
          "displayName": "Specification Storage - Get specification",
          "description": "Get specification"
        },
                {
          "permissionName": "specification-storage.specification.item.sync.execute",
          "displayName": "Specification Storage - Sync specification",
          "description": "Sync specification"
        },
                {
          "permissionName": "specification-storage.specification.rules.collection.get",
          "displayName": "Specification Storage - Get specification rules collection",
          "description": "Get specification rules collection"
        },
                {
          "permissionName": "specification-storage.specification.rules.item.patch",
          "displayName": "Specification Storage - Toggle rule for specification",
          "description": "Toggle rule for specification"
        },
                {
          "permissionName": "specification-storage.specification.fields.collection.get",
          "displayName": "Specification Storage - Get specification field definition collection",
          "description": "Get specification fields collection"
        },
                {
          "permissionName": "specification-storage.specification.fields.item.post",
          "displayName": "Specification Storage - Create field definition for specification",
          "description": "Create specification field definition"
        },
                {
          "permissionName": "specification-storage.fields.item.put",
          "displayName": "Specification Storage - Update field definition",
          "description": "Update field definition"
        },
                {
          "permissionName": "specification-storage.fields.item.delete",
          "displayName": "Specification Storage - Delete field definition",
          "description": "Delete field definition"
        },
                {
          "permissionName": "specification-storage.field.subfields.collection.get",
          "displayName": "Specification Storage - Get field subfields definition collection",
          "description": "Get field subfields collection"
        },
                {
          "permissionName": "specification-storage.field.subfields.item.post",
          "displayName": "Specification Storage - Create subfield definition for field",
          "description": "Create field subfield definition"
        },
                {
          "permissionName": "specification-storage.field.indicators.collection.get",
          "displayName": "Specification Storage - Get field indicators definition collection",
          "description": "Get field indicators collection"
        },
                {
          "permissionName": "specification-storage.field.indicators.item.post",
          "displayName": "Specification Storage - Create indicator definition for field",
          "description": "Create field indicator definition"
        },
                {
          "permissionName": "specification-storage.indicators.item.put",
          "displayName": "Specification Storage - Update indicator definition",
          "description": "Update indicator definition"
        },
                {
          "permissionName": "specification-storage.indicator.indicator-codes.collection.get",
          "displayName": "Specification Storage - Get indicator code definition collection",
          "description": "Get indicator codes collection"
        },
                {
          "permissionName": "specification-storage.indicator.indicator-codes.item.post",
          "displayName": "Specification Storage - Create code definition for indicator",
          "description": "Create indicator code definition"
        },
                {
          "permissionName": "specification-storage.indicator-codes.item.put",
          "displayName": "Specification Storage - Update indicator code definition",
          "description": "Update indicator code definition"
        },
                {
          "permissionName": "specification-storage.indicator-codes.item.delete",
          "displayName": "Specification Storage - Delete indicator code definition",
          "description": "Delete indicator code definition"
        },
                {
          "permissionName": "specification-storage.subfields.item.put",
          "displayName": "Specification Storage - Update subfield definition",
          "description": "Update subfield definition"
        },
                {
          "permissionName": "specification-storage.subfields.item.delete",
          "displayName": "Specification Storage - Delete subfield definition",
          "description": "Delete subfield definition"
        },
                {
          "permissionName": "specification-storage.all",
          "displayName": "Specification Storage - All permissions",
          "description": "Entire set of permissions needed to manage specifications",
          "subPermissions":           [
            "specification-storage.specifications.collection.get",
            "specification-storage.specifications.item.get",
            "specification-storage.specification.rules.collection.get",
            "specification-storage.specification.rules.item.patch",
            "specification-storage.specification.fields.collection.get",
            "specification-storage.specification.fields.item.post",
            "specification-storage.fields.item.put",
            "specification-storage.fields.item.delete",
            "specification-storage.field.subfields.collection.get",
            "specification-storage.field.subfields.item.post",
            "specification-storage.field.indicators.collection.get",
            "specification-storage.field.indicators.item.post",
            "specification-storage.indicators.item.put",
            "specification-storage.indicator.indicator-codes.collection.get",
            "specification-storage.indicator.indicator-codes.item.post",
            "specification-storage.subfields.item.put",
            "specification-storage.subfields.item.delete"
          ]
        }
      ],
      "launchDescriptor":       {
        "dockerImage": "mod-record-specifications:2.0.1",
        "dockerPull": false,
        "dockerArgs": {"HostConfig":         {
          "Memory": 542293850,
          "PortBindings": {"8081/tcp": [{"HostPort": "%p"}]}
        }},
        "env":         [
                    {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
                    {
            "name": "DB_HOST",
            "value": "localhost",
            "description": "Postgres hostname"
          },
                    {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
                    {
            "name": "DB_USERNAME",
            "value": "folio_admin",
            "description": "Postgres username"
          },
                    {
            "name": "DB_PASSWORD",
            "value": "folio_admin",
            "description": "Postgres username password"
          },
                    {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
                    {
            "name": "DB_MAXPOOLSIZE",
            "value": "10",
            "description": "This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections"
          },
                    {
            "name": "DB_MINIMUM_IDLE",
            "value": "10",
            "description": "This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool"
          },
                    {
            "name": "DB_CONNECTION_TIMEOUT",
            "value": "30000",
            "description": "This property controls the maximum number of milliseconds that a client will wait for a connection from the pool"
          },
                    {
            "name": "DB_IDLE_TIMEOUT",
            "value": "600000",
            "description": "This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when `DB_MINIMUM_IDLE` is defined to be less than `DB_MAXPOOLSIZE`"
          },
                    {
            "name": "DB_KEEPALIVE_TIME",
            "value": "0",
            "description": "This property controls how frequently HikariCP will attempt to keep a connection alive, in order to prevent it from being timed out by the database or network infrastructure (0 - disabled)"
          },
                    {
            "name": "DB_MAX_LIFETIME",
            "value": "1800000",
            "description": "This property controls the maximum lifetime of a connection in the pool"
          },
                    {
            "name": "DB_VALIDATION_TIMEOUT",
            "value": "5000",
            "description": "This property controls the maximum amount of time that a connection will be tested for aliveness. This value must be less than the `DB_CONNECTION_TIMEOUT`"
          },
                    {
            "name": "DB_INITIALIZATION_FAIL_TIMEOUT",
            "value": "30000",
            "description": "This property controls whether the pool will \"fail fast\" if the pool cannot be seeded with an initial connection successfully"
          },
                    {
            "name": "DB_LEAK_DETECTION_THRESHOLD",
            "value": "30000",
            "description": "This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak (0 - disabled)"
          },
                    {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
                    {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
                    {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
                    {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
                    {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          }
        ]
      }
    }
  ],
  "uiModuleDescriptors":   [
        {
      "id": "folio_marc-authorities-7.0.2",
      "name": "MARC Authorities module",
      "requires":       [
                {
          "id": "search",
          "version": "1.0 1.3"
        },
                {
          "id": "browse",
          "version": "1.0 2.0"
        },
                {
          "id": "source-storage-records",
          "version": "3.3"
        },
                {
          "id": "marc-records-editor",
          "version": "6.0"
        },
                {
          "id": "audit-config",
          "version": "1.0"
        },
                {
          "id": "audit-marc",
          "version": "1.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.marc-authorities.enabled",
          "displayName": "UI: MARC Authorities module is enabled",
          "visible": false
        },
                {
          "permissionName": "ui-marc-authorities.authority-record.view",
          "displayName": "MARC Authority: View MARC authority record",
          "subPermissions":           [
            "module.marc-authorities.enabled",
            "browse.authorities.collection.get",
            "marc-records-editor.item.get",
            "marc-records-editor.links.suggestion.post",
            "search.authorities.collection.get",
            "search.facets.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "inventory-storage.authorities.item.get",
            "data-export.quick.export.post",
            "instance-authority.linking-rules.collection.get",
            "instance-authority-links.authority-statistics.collection.get",
            "instance-authority-links.instance-statistics.collection.get",
            "inventory-storage.authorities.collection.get",
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "perms.users.get",
            "mapping-rules.get",
            "audit.marc.authority.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-marc-authorities.authority-record.create",
          "displayName": "MARC Authority: Create new MARC authority record",
          "subPermissions":           [
            "ui-marc-authorities.authority-record.view",
            "inventory-storage.authority-source-files.hrid.post",
            "marc-records-editor.item.post",
            "instance-authority-links.instances.collection.post",
            "instance-authority-links.authorities.bulk.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-marc-authorities.authority-record.edit",
          "displayName": "MARC Authority: Edit MARC authority record",
          "subPermissions":           [
            "ui-marc-authorities.authority-record.view",
            "marc-records-editor.item.put",
            "instance-authority-links.authorities.bulk.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-marc-authorities.authority-record.delete",
          "displayName": "MARC Authority: Delete MARC authority record",
          "subPermissions": ["inventory-storage.authorities.item.delete"],
          "visible": true
        },
                {
          "permissionName": "settings.marc-authorities.enabled",
          "displayName": "Settings (MARC authority): Module is enabled.",
          "subPermissions":           [
            "settings.enabled",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-marc-authorities.settings.authority-files.view",
          "displayName": "Settings (MARC authority): View authority files",
          "subPermissions":           [
            "settings.marc-authorities.enabled",
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "perms.users.get",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-marc-authorities.settings.authority-files.all",
          "displayName": "Settings (MARC authority): View, create, edit, delete authority files",
          "subPermissions":           [
            "settings.marc-authorities.enabled",
            "ui-marc-authorities.settings.authority-files.view",
            "inventory-storage.authority-source-files.item.post",
            "inventory-storage.authority-source-files.item.put",
            "inventory-storage.authority-source-files.item.patch",
            "inventory-storage.authority-source-files.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-marc-authorities.settings.version-history",
          "displayName": "Settings (MARC authority): Configure version history",
          "subPermissions":           [
            "settings.marc-authorities.enabled",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get",
            "audit.config.groups.settings.item.put",
            "audit.config.groups.settings.audit.authority.records.page.size.item.put"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_stripes-authority-components-6.0.1",
      "name": "Component library for Stripes Authority modules",
      "requires":       [
                {
          "id": "search",
          "version": "1.0 1.3"
        },
                {
          "id": "browse",
          "version": "1.0 2.0"
        },
                {
          "id": "authority-source-files",
          "version": "2.0"
        },
                {
          "id": "source-storage-records",
          "version": "3.0"
        }
      ],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_quick-marc-10.0.1",
      "name": "Quick MARC editor",
      "requires":       [
                {
          "id": "inventory",
          "version": "14.0"
        },
                {
          "id": "marc-records-editor",
          "version": "6.0"
        },
                {
          "id": "search",
          "version": "1.2"
        },
                {
          "id": "marc-specifications",
          "version": "1.0"
        },
                {
          "id": "authority-source-files",
          "version": "2.0"
        },
                {
          "id": "instance-authority-links",
          "version": "2.1"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "ui-quick-marc.quick-marc-editor.view",
          "displayName": "quickMARC: View MARC bibliographic record",
          "subPermissions":           [
            "marc-records-editor.item.get",
            "inventory.instances.item.get",
            "instance-authority-links.instances.collection.get",
            "instance-authority.linking-rules.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-editor.create",
          "displayName": "quickMARC: Create a new MARC bibliographic record",
          "subPermissions":           [
            "ui-quick-marc.quick-marc-editor.view",
            "marc-records-editor.item.put",
            "marc-records-editor.item.post",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-editor.all",
          "displayName": "quickMARC: View, edit MARC bibliographic record",
          "subPermissions":           [
            "ui-quick-marc.quick-marc-editor.view",
            "perms.users.get",
            "marc-records-editor.item.put",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.put",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.view",
          "displayName": "quickMARC: View MARC holdings record",
          "subPermissions":           [
            "marc-records-editor.item.get",
            "inventory.instances.item.get",
            "instance-authority.linking-rules.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.all",
          "displayName": "quickMARC: View, edit MARC holdings record",
          "subPermissions":           [
            "ui-quick-marc.quick-marc-holdings-editor.view",
            "marc-records-editor.item.put",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.create",
          "displayName": "quickMARC: Create a new MARC holdings record",
          "subPermissions":           [
            "ui-quick-marc.quick-marc-holdings-editor.view",
            "marc-records-editor.status.item.get",
            "marc-records-editor.item.post",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-editor.derive.execute",
          "replaces": ["ui-quick-marc.quick-marc-editor.duplicate"],
          "displayName": "quickMARC: Derive new MARC bibliographic record",
          "subPermissions":           [
            "ui-quick-marc.quick-marc-editor.view",
            "marc-records-editor.status.item.get",
            "marc-records-editor.item.put",
            "marc-records-editor.item.post",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.put",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-authorities-editor.create",
          "displayName": "quickMARC: Create a new MARC authority record",
          "subPermissions":           [
            "ui-marc-authorities.authority-record.view",
            "inventory-storage.authority-source-files.hrid.post",
            "marc-records-editor.item.post",
            "instance-authority-links.instances.collection.post",
            "instance-authority-links.authorities.bulk.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-authorities-editor.all",
          "displayName": "quickMARC: View, edit MARC authorities record",
          "subPermissions":           [
            "marc-records-editor.item.get",
            "marc-records-editor.item.put",
            "inventory-storage.locations.collection.get",
            "marc-specifications.item.get",
            "search.authorities.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.quick-marc-authority-records.link-unlink.execute",
          "replaces": ["ui-quick-marc.quick-marc-authority-records.linkUnlink"],
          "displayName": "quickMARC: Can Link/unlink authority records to bib records",
          "subPermissions":           [
            "instance-authority.linking-rules.collection.get",
            "inventory-storage.authority-source-files.collection.get",
            "marc-records-editor.links.suggestion.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-quick-marc.settings.lccn-duplicate-check.edit",
          "displayName": "Edit, View: Enable duplicate LCCN (010 $a) checking of MARC bibliographic and authority records",
          "subPermissions":           [
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.write.ui-quick-marc.lccn-duplicate-check.manage"
          ],
          "visible": false
        },
                {
          "permissionName": "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
          "displayName": "Settings (MARC): read LCCN duplicate check settings",
          "visible": false
        },
                {
          "permissionName": "mod-settings.global.write.ui-quick-marc.lccn-duplicate-check.manage",
          "displayName": "Settings (MARC): write LCCN duplicate check settings",
          "visible": false
        }
      ]
    },
        {
      "id": "folio_inventory-13.0.4",
      "name": "Inventory manager",
      "requires":       [
                {
          "id": "alternative-title-types",
          "version": "1.0"
        },
                {
          "id": "audit-inventory",
          "version": "1.0"
        },
                {
          "id": "audit-config",
          "version": "1.0"
        },
                {
          "id": "audit-marc",
          "version": "1.0"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "browse",
          "version": "2.0"
        },
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "classification-types",
          "version": "1.1"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "contributor-name-types",
          "version": "1.2"
        },
                {
          "id": "contributor-types",
          "version": "2.0"
        },
                {
          "id": "data-export",
          "version": "5.0"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.3 1.4 1.5"
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
                {
          "id": "holdings-note-types",
          "version": "1.0"
        },
                {
          "id": "holdings-sources",
          "version": "1.0"
        },
                {
          "id": "holdings-storage",
          "version": "3.0 4.4 5.0 6.0 7.0 8.0"
        },
                {
          "id": "holdings-types",
          "version": "1.0"
        },
                {
          "id": "identifier-types",
          "version": "1.1"
        },
                {
          "id": "ill-policies",
          "version": "1.0"
        },
                {
          "id": "instance-formats",
          "version": "2.0"
        },
                {
          "id": "instance-note-types",
          "version": "1.0"
        },
                {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
                {
          "id": "instance-statuses",
          "version": "1.0"
        },
                {
          "id": "instance-storage",
          "version": "7.0 8.0 9.0 10.0 11.0"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "inventory-record-bulk",
          "version": "1.0"
        },
                {
          "id": "inventory",
          "version": "10.10 11.0 12.0 13.0 14.0"
        },
                {
          "id": "item-note-types",
          "version": "1.0"
        },
                {
          "id": "item-storage",
          "version": "8.0 9.0 10.0"
        },
                {
          "id": "loan-types",
          "version": "2.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "material-types",
          "version": "2.0"
        },
                {
          "id": "modes-of-issuance",
          "version": "1.0"
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
                {
          "id": "search",
          "version": "0.7 1.0 1.3"
        },
                {
          "id": "settings",
          "version": "1.1"
        },
                {
          "id": "source-storage-records",
          "version": "3.3"
        },
                {
          "id": "statistical-code-types",
          "version": "1.0"
        },
                {
          "id": "statistical-codes",
          "version": "1.0"
        },
                {
          "id": "tags",
          "version": "1.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "optional":       [
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "copycat-imports",
          "version": "1.1"
        },
                {
          "id": "copycat-profiles",
          "version": "1.2"
        },
                {
          "id": "remote-storage-mappings",
          "version": "1.0 2.0"
        },
                {
          "id": "acquisitions-units",
          "version": "1.1"
        },
                {
          "id": "orders",
          "version": "11.0 12.0"
        },
                {
          "id": "orders.holding-summary",
          "version": "1.0"
        },
                {
          "id": "order-lines",
          "version": "2.0 3.0"
        },
                {
          "id": "orders-storage.settings",
          "version": "1.0"
        },
                {
          "id": "organizations.organizations",
          "version": "1.0"
        },
                {
          "id": "pieces",
          "version": "3.0"
        },
                {
          "id": "titles",
          "version": "1.2"
        },
                {
          "id": "linked-data",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "module.inventory.enabled",
          "displayName": "Inventory: Module is enabled",
          "subPermissions":           [
            "search.index.indices.item.post",
            "search.index.mappings.item.post",
            "search.index.records.collection.post",
            "search.instances.collection.get",
            "search.instances.ids.collection.get",
            "search.holdings.ids.collection.get",
            "search.config.languages.item.post",
            "search.config.languages.collection.get",
            "search.config.languages.item.delete",
            "search.index.inventory.reindex.post",
            "search.facets.collection.get",
            "consortium-search.holdings.collection.get",
            "consortium-search.items.collection.get"
          ]
        },
                {
          "permissionName": "ui-inventory.all",
          "replaces": ["ui-inventory.all-permissions.TEMPORARY"],
          "displayName": "Inventory: All permissions",
          "description": "Some subperms to support enabling/using the Inventory app",
          "subPermissions":           [
            "ui-plugin-create-inventory-records.create",
            "ui-inventory.instance.view",
            "ui-inventory.instance.create",
            "ui-inventory.holdings.create",
            "ui-inventory.item.create",
            "ui-inventory.instance.edit",
            "ui-inventory.item.edit",
            "ui-inventory.holdings.edit",
            "ui-inventory.item.mark-as-missing.execute",
            "ui-inventory.item.delete",
            "ui-inventory.holdings.delete",
            "browse.contributors.instances.collection.get",
            "inventory-storage.bound-with-parts.collection.get",
            "source-storage.records.matching.collection.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.call-number-browse.view",
          "displayName": "Call number browse: View permissions ",
          "description": "Enable call number browse feature",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "browse.call-numbers.instances.collection.get",
            "browse.authorities.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.subjects.view",
          "displayName": "Subject browse: View permissions",
          "description": "Enable subject browse feature",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "browse.subjects.instances.collection.get",
            "browse.authorities.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.inventory.enabled",
          "displayName": "Settings (Inventory): Module is enabled.",
          "subPermissions":           [
            "settings.enabled",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "perms.users.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-inventory.settings.material-types",
          "replaces": ["ui-inventory.settings.materialtypes"],
          "displayName": "Settings (Inventory): Create, edit, delete material types",
          "subPermissions":           [
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.delete",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.item.post",
            "inventory-storage.material-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.loan-types",
          "replaces": ["ui-inventory.settings.loantypes"],
          "displayName": "Settings (Inventory): Create, edit, delete loan types",
          "subPermissions":           [
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.delete",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.item.post",
            "inventory-storage.loan-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.statistical-code-types",
          "displayName": "Settings (Inventory): Create, edit, delete statistical code types",
          "subPermissions":           [
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.delete",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.statistical-code-types.item.post",
            "inventory-storage.statistical-code-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.instance-formats",
          "displayName": "Settings (Inventory): Create, edit, delete formats",
          "subPermissions":           [
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.delete",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.instance-formats.item.post",
            "inventory-storage.instance-formats.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.electronic-access-relationships",
          "displayName": "Settings (Inventory): Create, edit, delete URL relationships",
          "subPermissions":           [
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.delete",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.electronic-access-relationships.item.post",
            "inventory-storage.electronic-access-relationships.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.holdings-types",
          "displayName": "Settings (Inventory): Create, edit, delete holdings types",
          "subPermissions":           [
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.delete",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.holdings-types.item.post",
            "inventory-storage.holdings-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.call-number-browse",
          "displayName": "Settings (Inventory): Configure call number browse",
          "subPermissions":           [
            "settings.inventory.enabled",
            "inventory-storage.call-number-types.collection.get",
            "browse.config.collection.get",
            "browse.config.item.put",
            "perms.users.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.classification-browse",
          "displayName": "Settings (Inventory): Configure classification browse",
          "subPermissions":           [
            "settings.inventory.enabled",
            "inventory-storage.classification-types.collection.get",
            "browse.config.collection.get",
            "browse.config.item.put",
            "perms.users.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.classification-types",
          "displayName": "Settings (Inventory): Create, edit, delete classification identifier types",
          "subPermissions":           [
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.delete",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.classification-types.item.post",
            "inventory-storage.classification-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.identifier-types",
          "displayName": "Settings (Inventory): Create, edit, delete resource identifier types",
          "subPermissions":           [
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.delete",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.item.post",
            "inventory-storage.identifier-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.subject-sources",
          "displayName": "Settings (Inventory): Create, edit, delete subject sources",
          "subPermissions":           [
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-sources.item.get",
            "inventory-storage.subject-sources.item.post",
            "inventory-storage.subject-sources.item.put",
            "inventory-storage.subject-sources.item.delete",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.subject-types",
          "displayName": "Settings (Inventory): Create, edit, delete subject types",
          "subPermissions":           [
            "inventory-storage.subject-types.collection.get",
            "inventory-storage.subject-types.item.get",
            "inventory-storage.subject-types.item.post",
            "inventory-storage.subject-types.item.put",
            "inventory-storage.subject-types.item.delete",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.instance-statuses",
          "displayName": "Settings (Inventory): Create, edit, delete instance status types",
          "subPermissions":           [
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.delete",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.instance-statuses.item.post",
            "inventory-storage.instance-statuses.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.statistical-codes",
          "displayName": "Settings (Inventory): Create, edit, delete statistical codes",
          "subPermissions":           [
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.delete",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.statistical-codes.item.post",
            "inventory-storage.statistical-codes.item.put",
            "settings.inventory.enabled",
            "inventory-storage.statistical-code-types.collection.get",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.alternative-title-types",
          "displayName": "Settings (Inventory): Create, edit, delete alternative title types",
          "subPermissions":           [
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.delete",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.alternative-title-types.item.post",
            "inventory-storage.alternative-title-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.instance-types",
          "displayName": "Settings (Inventory): Create, edit, delete locally defined resource types",
          "subPermissions":           [
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.delete",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.instance-types.item.post",
            "inventory-storage.instance-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.nature-of-content-terms",
          "displayName": "Settings (Inventory): Create, edit, delete nature of content",
          "subPermissions":           [
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.delete",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.nature-of-content-terms.item.post",
            "inventory-storage.nature-of-content-terms.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.modes-of-issuance",
          "displayName": "Settings (Inventory): Create, edit, delete locally defined modes of issuance",
          "subPermissions":           [
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.delete",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.modes-of-issuance.item.post",
            "inventory-storage.modes-of-issuance.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.instance-note-types",
          "displayName": "Settings (Inventory): Create, edit, delete instance note types",
          "subPermissions":           [
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.delete",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.instance-note-types.item.post",
            "inventory-storage.instance-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.ill-policies",
          "displayName": "Settings (Inventory): Create, edit, delete ILL policies",
          "subPermissions":           [
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.delete",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.ill-policies.item.post",
            "inventory-storage.ill-policies.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.contributor-types",
          "displayName": "Settings (Inventory): Create, edit, delete contributor types",
          "subPermissions":           [
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.delete",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.contributor-types.item.post",
            "inventory-storage.contributor-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.call-number-types",
          "displayName": "Settings (Inventory): Create, edit, delete call number types",
          "subPermissions":           [
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.delete",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.call-number-types.item.post",
            "inventory-storage.call-number-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.single-record-import",
          "displayName": "Settings (Inventory): Configure single-record import",
          "subPermissions":           [
            "settings.inventory.enabled",
            "copycat.profiles.collection.get",
            "copycat.profiles.item.get",
            "copycat.profiles.item.post",
            "copycat.profiles.item.put",
            "copycat.profiles.item.delete",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "inventory-storage.identifier-types.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.holdings-note-types",
          "displayName": "Settings (Inventory): Create, edit, delete holdings note types",
          "subPermissions":           [
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.delete",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-note-types.item.post",
            "inventory-storage.holdings-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.holdings-sources",
          "displayName": "Settings (Inventory): Create, edit, delete holdings sources",
          "subPermissions":           [
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.delete",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.post",
            "inventory-storage.holdings-sources.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.item-note-types",
          "displayName": "Settings (Inventory): Create, edit, delete item note types",
          "subPermissions":           [
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.delete",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.item-note-types.item.post",
            "inventory-storage.item-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.fast-add",
          "displayName": "Settings (Inventory): Edit fast add settings",
          "subPermissions":           [
            "inventory-storage.instance-statuses.collection.get",
            "configuration.entries.collection.get",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "settings.inventory.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.hrid-handling",
          "displayName": "Settings (Inventory): Create, edit and delete HRID handling",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.hrid-settings.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "mod-settings.global.read.ui-inventory.number-generator-settings.manage",
          "displayName": "Settings (Inventory): Read the settings in the 'Number generator' section",
          "visible": false
        },
                {
          "permissionName": "mod-settings.global.write.ui-inventory.number-generator-settings.manage",
          "displayName": "Settings (Inventory): Write the settings in the 'Number generator' section",
          "visible": false
        },
                {
          "permissionName": "ui-inventory.settings.manage-number-generator-options",
          "displayName": "Settings (Inventory): Manage number generator options",
          "subPermissions":           [
            "settings.inventory.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.read.ui-inventory.number-generator-settings.manage",
            "mod-settings.global.write.ui-inventory.number-generator-settings.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.view",
          "displayName": "Inventory: View instances, holdings, and items",
          "subPermissions":           [
            "module.inventory.enabled",
            "users.collection.get",
            "tags.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "circulation.loans.collection.get",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "configuration.entries.collection.get",
            "inventory.config.instances.blocked-fields.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.get",
            "inventory.items.collection.get",
            "inventory.items-by-holdings-id.collection.get",
            "inventory.items.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.record-bulk.ids.get",
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-types.collection.get",
            "data-export.quick.export.post",
            "orders.holding-summary.collection.get",
            "orders.pieces.collection.get",
            "orders.po-lines.collection.get",
            "orders.po-lines.item.get",
            "orders.collection.get",
            "orders.item.get",
            "orders-storage.settings.collection.get",
            "orders.titles.collection.get",
            "organizations.organizations.item.get",
            "acquisitions-units.units.collection.get",
            "browse.call-numbers.instances.collection.get",
            "browse.contributors.instances.collection.get",
            "browse.subjects.instances.collection.get",
            "browse.classification-numbers.instances.collection.get",
            "perms.users.get",
            "inventory-storage.bound-with-parts.collection.get",
            "consortium-search.locations.collection.get",
            "browse.config.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-inventory.display-settings.manage",
            "inventory-storage.instance-date-types.collection.get",
            "audit.inventory.instance.collection.get",
            "audit.inventory.holdings.collection.get",
            "audit.inventory.item.collection.get",
            "audit.marc.bib.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "consortia.sharing-instances.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.create",
          "displayName": "Inventory: View, create instances",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "inventory.instances.item.post",
            "inventory-storage.instances.item.post",
            "browse.contributors.instances.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.edit",
          "displayName": "Inventory: View, create, edit instances",
          "subPermissions":           [
            "ui-inventory.instance.create",
            "inventory.instances.item.put",
            "inventory-storage.instances.item.put",
            "browse.contributors.instances.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.order.create",
          "replaces": ["ui-inventory.instance.createOrder"],
          "displayName": "Inventory: Create order from instance",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "acquisitions-units.memberships.collection.get",
            "acquisitions-units.units.collection.get",
            "data-export.config.collection.get",
            "finance.exchange-rate.item.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "finance.funds.expense-classes.collection.get",
            "isbn-utils.convert-to-13.get",
            "isbn-utils.validator.get",
            "orders.acquisition-methods.collection.get",
            "orders.configuration.prefixes.collection.get",
            "orders.configuration.reasons-for-closure.collection.get",
            "orders.configuration.suffixes.collection.get",
            "orders.item.get",
            "orders.item.post",
            "orders.item.put",
            "orders.order-templates.collection.get",
            "orders.order-templates.item.get",
            "orders.po-lines.item.post",
            "orders.po-number.item.get",
            "orders.po-number.item.post",
            "organizations.organizations.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.item.create",
          "displayName": "Inventory: View, create items",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "inventory.items.item.post",
            "inventory.instances.item.put",
            "inventory-storage.instances.item.put",
            "inventory-storage.bound-with-parts.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.item.edit",
          "displayName": "Inventory: View, create, edit items",
          "subPermissions":           [
            "ui-inventory.item.create",
            "inventory.items.item.put",
            "inventory-storage.bound-with-parts.item.delete",
            "inventory-storage.bound-withs.collection.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.item.move",
          "displayName": "Inventory: Move items",
          "subPermissions":           [
            "ui-inventory.item.create",
            "inventory.items.move.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.item.mark-as-missing.execute",
          "replaces": ["ui-inventory.item.markasmissing"],
          "displayName": "Inventory: View, create, edit, mark missing items",
          "subPermissions":           [
            "ui-inventory.item.edit",
            "inventory.items.item.mark-missing.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.item.delete",
          "displayName": "Inventory: View, create, edit, delete items",
          "subPermissions":           [
            "ui-inventory.item.edit",
            "inventory.items.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.holdings.create",
          "displayName": "Inventory: View, create holdings",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "inventory-storage.holdings.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.holdings.edit",
          "displayName": "Inventory: View, create, edit holdings",
          "subPermissions":           [
            "ui-inventory.holdings.create",
            "inventory-storage.holdings.item.put",
            "inventory.config.holdings.blocked-fields.get",
            "inventory.holdings.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.holdings.move",
          "displayName": "Inventory: Move holdings",
          "subPermissions":           [
            "ui-inventory.instance.edit",
            "ui-inventory.holdings.create",
            "inventory.holdings.move.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.holdings.delete",
          "displayName": "Inventory: View, create, edit, delete holdings",
          "subPermissions":           [
            "ui-inventory.holdings.edit",
            "inventory-storage.holdings.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.staff-suppressed-records.view",
          "replaces": ["ui-inventory.instance.view-staff-suppressed-records"],
          "displayName": "Inventory: Enable staff suppress facet",
          "subPermissions": ["ui-inventory.instance.view"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.instance.set-records-for-deletion.execute",
          "replaces": ["ui-inventory.instance.set-deletion-and-staff-suppress"],
          "displayName": "Inventory: Set records for deletion",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "source-storage.records.update"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.settings.list.view",
          "displayName": "Settings (Inventory): View list of settings pages",
          "subPermissions":           [
            "settings.inventory.enabled",
            "users.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.hrid-settings.item.get",
            "configuration.entries.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-withdrawn.execute",
          "replaces": ["ui-inventory.items.mark-items-withdrawn"],
          "displayName": "Inventory: Mark items withdrawn",
          "subPermissions": ["inventory.items.item.mark-withdrawn.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-intellectual-item.execute",
          "replaces": ["ui-inventory.items.mark-intellectual-item"],
          "displayName": "Inventory: Mark items intellectual item",
          "subPermissions": ["inventory.items.item.mark-intellectual-item.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-restricted.execute",
          "replaces": ["ui-inventory.items.mark-restricted"],
          "displayName": "Inventory: Mark items restricted",
          "subPermissions": ["inventory.items.item.mark-restricted.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-unknown.execute",
          "replaces": ["ui-inventory.items.mark-unknown"],
          "displayName": "Inventory: Mark items unknown",
          "subPermissions": ["inventory.items.item.mark-unknown.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-unavailable.execute",
          "replaces": ["ui-inventory.items.mark-unavailable"],
          "displayName": "Inventory: Mark items unavailable",
          "subPermissions": ["inventory.items.item.mark-unavailable.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-long-missing.execute",
          "replaces": ["ui-inventory.items.mark-long-missing"],
          "displayName": "Inventory: Mark items long missing",
          "subPermissions": ["inventory.items.item.mark-long-missing.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-in-process-non-requestable.execute",
          "replaces": ["ui-inventory.items.mark-in-process-non-requestable"],
          "displayName": "Inventory: Mark items in process (non-requestable)",
          "subPermissions": ["inventory.items.item.mark-in-process-non-requestable.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.mark-in-process.execute",
          "replaces": ["ui-inventory.items.mark-in-process"],
          "displayName": "Inventory: Mark items in process",
          "subPermissions": ["inventory.items.item.mark-in-process.post"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.items.in-transit-report.create",
          "replaces": ["ui-inventory.items.create-in-transit-report"],
          "displayName": "Inventory: Create and download In transit items report",
          "subPermissions": ["circulation.inventory.items-in-transit-report.get"],
          "visible": true
        },
                {
          "permissionName": "ui-inventory.single-record-import",
          "displayName": "Inventory: Import single bibliographic records",
          "subPermissions":           [
            "ui-inventory.instance.view",
            "copycat.profiles.collection.get",
            "copycat.imports.post",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "mod-settings.global.read.ui-inventory.display-settings.manage",
          "displayName": "Settings (Inventory): read the settings in the 'Display settings' section",
          "visible": false
        },
                {
          "permissionName": "mod-settings.global.write.ui-inventory.display-settings.manage",
          "displayName": "Settings (Inventory): write the settings in the 'Display settings' section",
          "visible": false
        },
                {
          "permissionName": "ui-inventory.settings.displaySettings",
          "displayName": "Settings (Inventory): Can view and edit general settings",
          "subPermissions":           [
            "settings.inventory.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.read.ui-inventory.display-settings.manage",
            "mod-settings.global.write.ui-inventory.display-settings.manage",
            "audit.config.groups.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.item.put",
            "audit.config.groups.settings.audit.inventory.records.page.size.item.put"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_servicepoints-8.0.0",
      "name": "Service Points handler for Stripes",
      "requires": [],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_plugin-create-inventory-records-6.0.0",
      "name": "Create inventory records for Stripes",
      "requires":       [
                {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "source-storage-records",
          "version": "2.0 3.0"
        },
                {
          "id": "instance-storage",
          "version": "7.0 8.0 9.0 10.0 11.0"
        },
                {
          "id": "holdings-storage",
          "version": "3.0 4.0 5.0 6.0 7.0 8.0"
        },
                {
          "id": "item-storage",
          "version": "8.0 9.0 10.0"
        },
                {
          "id": "loan-types",
          "version": "2.0"
        },
                {
          "id": "material-types",
          "version": "2.0"
        },
                {
          "id": "item-note-types",
          "version": "1.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "identifier-types",
          "version": "1.1"
        },
                {
          "id": "contributor-types",
          "version": "2.0"
        },
                {
          "id": "contributor-name-types",
          "version": "1.2"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
                {
          "id": "instance-formats",
          "version": "2.0"
        },
                {
          "id": "classification-types",
          "version": "1.1"
        },
                {
          "id": "statistical-code-types",
          "version": "1.0"
        },
                {
          "id": "statistical-codes",
          "version": "1.0"
        },
                {
          "id": "modes-of-issuance",
          "version": "1.0"
        },
                {
          "id": "instance-statuses",
          "version": "1.0"
        },
                {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
                {
          "id": "instance-note-types",
          "version": "1.0"
        },
                {
          "id": "alternative-title-types",
          "version": "1.0"
        },
                {
          "id": "holdings-types",
          "version": "1.0"
        },
                {
          "id": "call-number-types",
          "version": "1.0"
        },
                {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
                {
          "id": "ill-policies",
          "version": "1.0"
        },
                {
          "id": "holdings-note-types",
          "version": "1.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.ui-plugin-create-inventory-records.enabled",
          "displayName": "UI: create-inventory-records plugin is enabled"
        },
                {
          "permissionName": "ui-plugin-create-inventory-records.create",
          "displayName": "Fast add: Create",
          "subPermissions":           [
            "inventory.instances.item.post",
            "inventory-storage.instances.item.post",
            "inventory.items.item.post",
            "inventory-storage.holdings.item.post",
            "configuration.entries.collection.get",
            "inventory.config.instances.blocked-fields.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.record-bulk.ids.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-instance-9.0.1",
      "name": "Instance-finder for Stripes",
      "requires":       [
                {
          "id": "contributor-types",
          "version": "2.0"
        },
                {
          "id": "instance-types",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "search",
          "version": "0.5 1.0"
        }
      ],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_plugin-find-package-title-7.0.0",
      "name": "Stripes plugin to find packages and titles",
      "requires": [],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "module.ui-plugin-find-package-title.enabled",
        "displayName": "UI: find packages and titles plugin is enabled"
      }]
    },
        {
      "id": "folio_checkin-11.0.0",
      "name": "Item Check-in",
      "requires":       [
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "feesfines",
          "version": "17.0 18.0 19.0"
        }
      ],
      "optional": [      {
        "id": "circulation-bff-loans",
        "version": "1.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "module.checkin.enabled",
          "displayName": "UI: Check in module is enabled"
        },
                {
          "permissionName": "ui-checkin.all",
          "displayName": "Check in: All permissions",
          "description": "Entire set of permissions needed to use Checkin",
          "subPermissions":           [
            "users.collection.get",
            "usergroups.collection.get",
            "module.checkin.enabled",
            "inventory.items.collection.get",
            "inventory-storage.service-points.collection.get",
            "accounts.collection.get",
            "accounts.item.get",
            "lost-item-fees-policies.collection.get",
            "circulation.check-in-by-barcode.post",
            "circulation-bff.loans.check-in-by-barcode.execute",
            "circulation.requests.collection.get",
            "feefineactions.collection.get",
            "configuration.entries.collection.get",
            "circulation.end-patron-action-session.post",
            "circulation-storage.staff-slips.collection.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_checkout-12.0.1",
      "name": "Item Check-out",
      "requires":       [
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "add-info",
          "version": "0.1"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
                {
          "id": "notes",
          "version": "4.0"
        }
      ],
      "optional": [      {
        "id": "circulation-bff-loans",
        "version": "1.2"
      }],
      "permissionSets":       [
                {
          "permissionName": "module.checkout.enabled",
          "displayName": "UI: Check out module is enabled"
        },
                {
          "permissionName": "ui-checkout.circulation.execute",
          "replaces": ["ui-checkout.circulation"],
          "displayName": "Check out: Check out circulating items",
          "description": "Set of permissions needed to check out circulation items",
          "subPermissions":           [
            "users.collection.get",
            "usergroups.collection.get",
            "proxiesfor.collection.get",
            "accounts.collection.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "module.checkout.enabled",
            "inventory.items.collection.get",
            "circulation.check-out-by-barcode.post",
            "circulation-bff.loans.check-out-by-barcode.execute",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.end-patron-action-session.post",
            "configuration.entries.collection.get",
            "note.links.collection.get",
            "users.configurations.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-checkout.all",
          "displayName": "Check out: All permissions",
          "description": "Entire set of permissions needed to use Check out",
          "subPermissions": ["ui-checkout.circulation.execute"],
          "visible": true
        },
                {
          "permissionName": "ui-checkout.viewLoans.view",
          "replaces": ["ui-checkout.viewLoans"],
          "displayName": "Check out: View loans",
          "description": "Entire set of permissions needed to view loans",
          "visible": true
        },
                {
          "permissionName": "ui-checkout.viewFeeFines.view",
          "replaces": ["ui-checkout.viewFeeFines"],
          "displayName": "Check out: View fees/fines",
          "description": "Entire set of permissions needed to view fees/fines",
          "visible": true
        },
                {
          "permissionName": "ui-checkout.viewRequests.view",
          "replaces": ["ui-checkout.viewRequests"],
          "displayName": "Check out: View requests",
          "description": "Entire set of permissions needed to view requests",
          "visible": true
        }
      ]
    },
        {
      "id": "folio_circulation-11.0.1",
      "name": "Circulation manager",
      "requires":       [
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0"
        },
                {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
                {
          "id": "template-engine",
          "version": "2.0"
        },
                {
          "id": "patron-notice-policy-storage",
          "version": "0.11"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "feesfines",
          "version": "16.0 17.0 18.0 19.0"
        }
      ],
      "optional":       [
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "ecs-tlr",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "settings.circulation.enabled",
          "displayName": "Settings (Circulation): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-circulation.settings.view-cancellation-reasons",
          "displayName": "Settings (Circulation): Can view cancellation reasons",
          "subPermissions":           [
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.cancellation-reasons",
          "displayName": "Settings (Circulation): Can create, edit and remove cancellation reasons",
          "subPermissions":           [
            "ui-circulation.settings.view-cancellation-reasons",
            "circulation-storage.cancellation-reasons.item.post",
            "circulation-storage.cancellation-reasons.item.put",
            "circulation-storage.cancellation-reasons.item.delete",
            "circulation-storage.cancellation-reasons.collection.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.loan-history",
          "displayName": "Settings (Circulation): Can view loan history",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "settings.circulation.enabled",
            "payments.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.edit-loan-history",
          "displayName": "Settings (Circulation): Can edit loan history",
          "subPermissions":           [
            "ui-circulation.settings.loan-history",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-loan-policies",
          "displayName": "Settings (Circulation): Can view loan policies",
          "subPermissions":           [
            "circulation.loans.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.loan-policies",
          "displayName": "Settings (Circulation): Can create, edit and remove loan policies",
          "subPermissions":           [
            "ui-circulation.settings.view-loan-policies",
            "circulation-storage.loan-policies.item.post",
            "circulation-storage.loan-policies.item.put",
            "circulation-storage.loan-policies.item.delete",
            "circulation-storage.loan-policies.collection.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-notice-policies",
          "displayName": "Settings (Circulation): Can view notice policies",
          "subPermissions":           [
            "circulation.rules.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "templates.collection.get",
            "templates.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.notice-policies",
          "displayName": "Settings (Circulation): Can create, edit and remove notice policies",
          "subPermissions":           [
            "ui-circulation.settings.view-notice-policies",
            "circulation-storage.patron-notice-policies.item.post",
            "circulation-storage.patron-notice-policies.item.put",
            "circulation-storage.patron-notice-policies.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.loan-policies.all",
          "displayName": "Settings (Circulation): Can create, edit and remove loan policies [LEGACY]",
          "subPermissions": ["ui-circulation.settings.loan-policies"]
        },
                {
          "permissionName": "ui-circulation.settings.view-circulation-rules",
          "displayName": "Settings (Circulation): View circulation rules",
          "subPermissions":           [
            "circulation-storage.circulation-rules.get",
            "circulation.rules.get",
            "usergroups.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "settings.circulation.enabled",
            "inventory-storage.material-types.item.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.locations.collection.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.collection.get",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.edit-circulation-rules",
          "displayName": "Settings (Circulation): Can create, edit and remove circulation rules",
          "subPermissions":           [
            "ui-circulation.settings.view-circulation-rules",
            "circulation-storage.circulation-rules.put",
            "circulation.rules.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-fixed-due-date-schedules",
          "displayName": "Settings (Circulation): Can view fixed due date schedules",
          "subPermissions":           [
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.fixed-due-date-schedules",
          "displayName": "Settings (Circulation): Can create, edit and remove fixed due date schedules",
          "subPermissions":           [
            "ui-circulation.settings.view-fixed-due-date-schedules",
            "circulation-storage.fixed-due-date-schedules.item.post",
            "circulation-storage.fixed-due-date-schedules.item.put",
            "circulation-storage.fixed-due-date-schedules.item.delete",
            "circulation-storage.fixed-due-date-schedules.collection.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.loan-rules.all",
          "displayName": "Settings (Circulation): Can create, edit and remove loan rules [LEGACY]",
          "subPermissions": ["ui-circulation.settings.edit-circulation-rules"]
        },
                {
          "permissionName": "ui-circulation.settings.view-staff-slips",
          "displayName": "Settings (Circulation): Can view staff slips",
          "subPermissions":           [
            "settings.circulation.enabled",
            "circulation-storage.staff-slips.collection.get",
            "circulation-storage.staff-slips.item.get",
            "users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.edit-staff-slips",
          "displayName": "Settings (Circulation): Can edit staff slips",
          "subPermissions":           [
            "ui-circulation.settings.view-staff-slips",
            "circulation-storage.staff-slips.item.put"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.staff-slips",
          "displayName": "Settings (Circulation): Can create, edit and remove staff slips",
          "subPermissions":           [
            "ui-circulation.settings.edit-staff-slips",
            "configuration.entries.collection.get",
            "configuration.entries.item.put",
            "configuration.entries.item.post",
            "circulation-storage.staff-slips.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.request-print-details",
          "displayName": "Settings (Circulation): Can enable request print details",
          "subPermissions":           [
            "settings.circulation.enabled",
            "circulation.settings.collection.get",
            "circulation.settings.item.get",
            "circulation.settings.item.put",
            "circulation.settings.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-request-policies",
          "displayName": "Settings (Circulation): Can view request policies",
          "subPermissions":           [
            "circulation.rules.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.request-policies.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled",
            "inventory-storage.service-points.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.request-policies",
          "displayName": "Settings (Circulation): Can create, edit and remove request policies",
          "subPermissions":           [
            "ui-circulation.settings.view-request-policies",
            "circulation-storage.request-policies.collection.delete",
            "circulation-storage.request-policies.item.delete",
            "circulation-storage.request-policies.item.post",
            "circulation-storage.request-policies.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-other-settings",
          "displayName": "Settings (Circulation): Can view other settings",
          "subPermissions":           [
            "user-settings.custom-fields.collection.get",
            "settings.circulation.enabled",
            "configuration.entries.collection.get",
            "configuration.entries.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.other-settings",
          "displayName": "Settings (Circulation): Can create, edit and remove other settings",
          "subPermissions":           [
            "ui-circulation.settings.view-other-settings",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-notice-templates",
          "displayName": "Settings (Circulation): Can view patron notice templates",
          "subPermissions":           [
            "circulation-storage.patron-notice-policies.collection.get",
            "templates.collection.get",
            "templates.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-circulation.settings.notice-templates",
          "displayName": "Settings (Circulation): Can create, edit and remove patron notice templates",
          "subPermissions":           [
            "ui-circulation.settings.view-notice-templates",
            "templates.item.post",
            "templates.item.put",
            "templates.item.delete",
            "template-request.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-overdue-fines-policies",
          "displayName": "Settings (Circulation): Can view overdue fine policies",
          "subPermissions":           [
            "circulation.loans.collection.get",
            "manual-block-templates.collection.get",
            "overdue-fines-policies.collection.get",
            "overdue-fines-policies.item.get",
            "templates.collection.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.overdue-fines-policies",
          "displayName": "Settings (Circulation): Can create, edit and remove overdue fine policies",
          "subPermissions":           [
            "ui-circulation.settings.view-overdue-fines-policies",
            "overdue-fines-policies.item.post",
            "overdue-fines-policies.item.put",
            "overdue-fines-policies.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-lost-item-fees-policies",
          "displayName": "Settings (Circulation): Can view lost item fee policies",
          "subPermissions":           [
            "circulation.loans.collection.get",
            "lost-item-fees-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.lost-item-fees-policies",
          "displayName": "Settings (Circulation): Can create, edit and remove lost item fee policies",
          "subPermissions":           [
            "ui-circulation.settings.view-lost-item-fees-policies",
            "lost-item-fees-policies.item.post",
            "lost-item-fees-policies.item.put",
            "lost-item-fees-policies.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-titleLevelRequests",
          "displayName": "Settings (Circulation): Title level request view",
          "subPermissions":           [
            "settings.circulation.enabled",
            "templates.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "circulation.requests.collection.get",
            "configuration.entries.collection.get"
          ]
        },
                {
          "permissionName": "ui-circulation.settings.titleLevelRequests",
          "displayName": "Settings (Circulation): Title level request edit",
          "subPermissions":           [
            "ui-circulation.settings.view-titleLevelRequests",
            "mod-settings.global.write.circulation",
            "mod-settings.entries.item.put",
            "mod-settings.entries.item.post",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation.settings.view-circulation-settings",
          "displayName": "Settings (Circulation): Can view all circulation settings",
          "subPermissions":           [
            "ui-circulation.settings.view-circulation-rules",
            "ui-circulation.settings.view-other-settings",
            "ui-circulation.settings.view-staff-slips",
            "ui-circulation.settings.view-titleLevelRequests",
            "tlr.consortium-tlr.view",
            "ui-circulation.settings.view-fixed-due-date-schedules",
            "ui-circulation.settings.loan-history",
            "ui-circulation.settings.view-loan-policies",
            "ui-circulation.settings.view-overdue-fines-policies",
            "ui-circulation.settings.view-lost-item-fees-policies",
            "ui-circulation.settings.view-notice-policies",
            "ui-circulation.settings.view-notice-templates",
            "ui-circulation.settings.view-cancellation-reasons",
            "ui-circulation.settings.view-request-policies",
            "ui-circulation.settings.view-staff-slips"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-user-8.0.0",
      "name": "User-finder for Stripes",
      "requires": [],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "module.ui-plugin-find-user.enabled",
        "displayName": "UI: find-user plugin is enabled"
      }]
    },
        {
      "id": "folio_data-export-7.0.0",
      "name": "Data export manager",
      "requires": [      {
        "id": "data-export",
        "version": "5.0"
      }],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.data-export.enabled",
          "displayName": "Data export: module enabled",
          "visible": false
        },
                {
          "permissionName": "settings.data-export.enabled",
          "displayName": "Settings data-export enabled",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-data-export.view",
          "displayName": "Data export: Can view only",
          "subPermissions":           [
            "module.data-export.enabled",
            "data-export.related-users.collection.get",
            "data-export.job-executions.items.download.get",
            "data-export.job-executions.collection.get",
            "data-export.logs.collection.get",
            "data-export.mapping-profiles.collection.get",
            "data-export.job-profiles.collection.get",
            "data-export.mapping-profiles.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-export.edit",
          "displayName": "Data export: Can upload files, export, download files and view logs",
          "subPermissions":           [
            "ui-data-export.view",
            "data-export.export.post",
            "data-export.file-definitions.upload.post",
            "data-export.file-definitions.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-export.settings.view",
          "displayName": "Settings (Data export): Can view only",
          "subPermissions":           [
            "settings.data-export.enabled",
            "data-export.job-executions.collection.get",
            "data-export.job-profiles.collection.get",
            "data-export.job-profiles.item.get",
            "data-export.transformation-fields.collection.get",
            "data-export.mapping-profiles.collection.get",
            "data-export.mapping-profiles.item.get",
            "users.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-export.settings.edit",
          "displayName": "Settings (Data export): Can view, add, update profiles",
          "subPermissions":           [
            "ui-data-export.settings.view",
            "data-export.mapping-profiles.item.post",
            "data-export.mapping-profiles.item.put",
            "data-export.mapping-profiles.item.delete",
            "data-export.job-profiles.item.post",
            "data-export.job-profiles.item.put",
            "data-export.job-profiles.item.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_export-manager-4.0.0",
      "name": "Description for export manager",
      "requires":       [
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "data-export-spring",
          "version": "1.0 2.0"
        },
                {
          "id": "organizations.organizations",
          "version": "1.0"
        },
                {
          "id": "tags",
          "version": "1.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.export-manager.enabled",
          "displayName": "UI: Export manager module is enabled",
          "visible": false
        },
                {
          "permissionName": "ui-export-manager.export-manager.view",
          "displayName": "Export manager: View",
          "description": "",
          "subPermissions":           [
            "module.export-manager.enabled",
            "configuration.entries.collection.get",
            "organizations.organizations.collection.get",
            "organizations.organizations.item.get",
            "data-export.config.collection.get",
            "data-export.config.item.get",
            "data-export.job.collection.get",
            "data-export.job.item.get",
            "tags.collection.get",
            "usergroups.collection.get",
            "users.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-export-manager.jobs.downloadAndResend.execute",
          "replaces": ["ui-export-manager.jobs.downloadAndResend"],
          "displayName": "Export manager: Download and resend files",
          "description": "",
          "subPermissions":           [
            "data-export.job.item.post",
            "data-export.job.item.download",
            "data-export.job.item.resend"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-export-manager.export-manager.all",
          "displayName": "Export manager: All",
          "description": "",
          "subPermissions":           [
            "ui-export-manager.export-manager.view",
            "data-export.edifact.orders.create",
            "ui-export-manager.jobs.downloadAndResend.execute"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-bursar-export-4.0.3",
      "name": "Bursar export",
      "requires":       [
                {
          "id": "users",
          "version": "15.0 16.0"
        },
                {
          "id": "feesfines",
          "version": "16.0 17.0 18.0 19.0"
        },
                {
          "id": "data-export-spring",
          "version": "2.0"
        },
                {
          "id": "service-points",
          "version": "3.0"
        },
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.all",
          "displayName": "Transfer exports: Modify configuration and start jobs",
          "subPermissions":           [
            "ui-plugin-bursar-export.bursar-exports.manual",
            "data-export.config.item.post",
            "data-export.config.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.manual",
          "displayName": "Transfer exports: Start manual jobs",
          "subPermissions":           [
            "ui-plugin-bursar-export.bursar-exports.view",
            "data-export.job.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.view",
          "displayName": "Transfer exports: View configuration",
          "subPermissions":           [
            "settings.tenant-settings.enabled",
            "usergroups.collection.get",
            "owners.collection.get",
            "transfers.collection.get",
            "feefines.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.locations.collection.get",
            "data-export.config.collection.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_remote-storage-7.0.1",
      "name": "Description for remote storage",
      "requires":       [
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "remote-storage-configurations",
          "version": "1.1"
        },
                {
          "id": "remote-storage-mappings",
          "version": "1.0"
        },
                {
          "id": "remote-storage-extended-mappings",
          "version": "1.0"
        },
                {
          "id": "remote-storage-providers",
          "version": "1.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "settings.remote-storage.enabled",
          "displayName": "Settings (Remote storages): Module is enabled.",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-remote-storage.settings.remote-storages.view",
          "displayName": "Remote storage: View",
          "subPermissions":           [
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.mappings.item.get",
            "remote-storage.mappings.collection.get",
            "remote-storage.extended-mappings.collection.get",
            "remote-storage.extended-mappings.item.get",
            "remote-storage.extended-mappings-locations.collection.get",
            "remote-storage.providers.collection.get",
            "settings.remote-storage.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-remote-storage.settings.remote-storages.edit",
          "displayName": "Remote storage: Create, edit, delete",
          "subPermissions":           [
            "ui-remote-storage.settings.remote-storages.view",
            "remote-storage.configurations.item.post",
            "remote-storage.configurations.item.put",
            "remote-storage.configurations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.item.delete",
            "remote-storage.extended-mappings.item.post",
            "remote-storage.extended-mappings.item.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_circulation-log-6.0.1",
      "name": "Description for circulation logs",
      "requires":       [
                {
          "id": "service-points",
          "version": "3.3"
        },
                {
          "id": "circulation-logs",
          "version": "1.2"
        }
      ],
      "optional": [      {
        "id": "data-export-spring",
        "version": "1.0 2.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "module.circulation-log.enabled",
          "displayName": "UI: Circulation logs module is enabled",
          "visible": false
        },
                {
          "permissionName": "ui-circulation-log.log-event.view",
          "displayName": "Circulation log: View",
          "description": "",
          "subPermissions":           [
            "module.circulation-log.enabled",
            "inventory-storage.service-points.collection.get",
            "circulation-logs.collection.get",
            "data-export.job.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-circulation-log.log-event.all",
          "displayName": "Circulation log: All",
          "description": "",
          "subPermissions":           [
            "ui-circulation-log.log-event.view",
            "data-export.job.item.post",
            "data-export.job.item.download",
            "usergroups.collection.get",
            "users.collection.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_calendar-12.0.0",
      "name": "Calendar settings",
      "requires":       [
                {
          "id": "calendar",
          "version": "5.0"
        },
                {
          "id": "service-points",
          "version": "3.0"
        },
                {
          "id": "users",
          "version": "16.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.calendar.enabled",
          "displayName": "UI: Calendar module is enabled",
          "visible": false
        },
                {
          "permissionName": "settings.calendar.enabled",
          "displayName": "Settings (Calendar): Display calendar in the settings list",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-calendar.view",
          "displayName": "Settings (Calendar): Can view existing calendars",
          "description": "User can view existing calendars",
          "subPermissions":           [
            "module.calendar.enabled",
            "settings.calendar.enabled",
            "calendar.view",
            "configuration.entries.collection.get",
            "inventory-storage.service-points.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-calendar.create",
          "replaces":           [
            "ui-calendar.edit",
            "ui-calendar.all"
          ],
          "displayName": "Settings (Calendar): Can create and assign new calendars",
          "description": "User can create and assign new calendars",
          "subPermissions":           [
            "ui-calendar.view",
            "calendar.create"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-calendar.update",
          "replaces":           [
            "ui-calendar.edit",
            "ui-calendar.all"
          ],
          "displayName": "Settings (Calendar): Can edit and reassign existing calendars",
          "description": "User can edit and reassign existing calendars",
          "subPermissions":           [
            "ui-calendar.view",
            "calendar.update"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-calendar.delete",
          "replaces": ["ui-calendar.all"],
          "displayName": "Settings (Calendar): Can delete existing calendars",
          "description": "User can delete existing calendars",
          "subPermissions":           [
            "ui-calendar.view",
            "calendar.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_courses-7.0.3",
      "name": "Maintain courses and reserve items for them",
      "requires":       [
                {
          "id": "course-reserves-storage",
          "version": "0.2"
        },
                {
          "id": "term-storage",
          "version": "0.1"
        },
                {
          "id": "department-storage",
          "version": "0.1"
        },
                {
          "id": "course-type-storage",
          "version": "0.1"
        },
                {
          "id": "processing-status-storage",
          "version": "0.1"
        },
                {
          "id": "copyright-status-storage",
          "version": "0.1"
        },
                {
          "id": "role-storage",
          "version": "0.1"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "item-storage",
          "version": "7.1 8.0 9.0 10.0"
        },
                {
          "id": "loan-types",
          "version": "2.2"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.courses.enabled",
          "displayName": "UI: courses module is enabled",
          "visible": false
        },
                {
          "permissionName": "settings.courses.enabled",
          "displayName": "Settings (courses): display list of settings pages",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-courses.all",
          "replaces": ["course-reserves.all"],
          "displayName": "Courses: All permissions",
          "description": "The highest level is CRUD Course Reserves which allows the user to maintain courses, items, instructors, cross listed courses, etc.",
          "subPermissions":           [
            "ui-courses.maintain-courses",
            "ui-courses.maintain-items",
            "ui-courses.maintain-settings",
            "course-reserves-storage.terms.write",
            "course-reserves-storage.courselistings.write",
            "course-reserves-storage.roles.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.courses.write",
            "course-reserves-storage.reserves.write"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.read-all",
          "replaces": ["course-reserves.read-all"],
          "displayName": "Courses: Read all",
          "description": "Allows user read only access to Courses and Reserves",
          "subPermissions":           [
            "module.courses.enabled",
            "course-reserves-storage.courses.read",
            "course-reserves-storage.courselistings.read",
            "course-reserves-storage.reserves.read",
            "course-reserves-storage.terms.read",
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.departments.read",
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.roles.read",
            "inventory-storage.locations.collection.get",
            "inventory.items.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.read-add-edit",
          "replaces": ["course-reserves.read-add-edit"],
          "displayName": "Courses: Read, add, and edit courses",
          "description": "Allows user the ability to read, add and edit Course Records - but not to delete. (Does not include item add, edit and remove)",
          "subPermissions":           [
            "ui-courses.read-all",
            "course-reserves-storage.courses.item.post",
            "course-reserves-storage.courses.item.put",
            "course-reserves-storage.courselistings.item.post",
            "course-reserves-storage.courselistings.item.put",
            "course-reserves-storage.courselisting.courses.item.post",
            "course-reserves-storage.courselistings.courses.item.put",
            "course-reserves-storage.courselistings.instructors.item.post",
            "course-reserves-storage.courselistings.instructors.item.put",
            "course-reserves-storage.courselistings.instructors.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.maintain-courses",
          "displayName": "Courses: Read, add, edit, and delete courses",
          "description": "Allows user the ability to fully edit and delete Course Records.",
          "subPermissions":           [
            "ui-courses.read-all",
            "ui-courses.read-add-edit",
            "course-reserves-storage.courses.item.delete",
            "course-reserves-storage.courselistings.item.delete",
            "course-reserves-storage.courselistings.courses.item.delete",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.add-edit-items",
          "displayName": "Courses: Add and edit a courses' reserved items",
          "description": "This permission allows a user to add and edit items on a course",
          "subPermissions":           [
            "ui-courses.read-all",
            "course-reserves-storage.reserves.item.post",
            "course-reserves-storage.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.post",
            "inventory-storage.locations.collection.get",
            "inventory.items.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.maintain-items",
          "replaces": ["course-reserves.maintain-items"],
          "displayName": "Courses: Add, edit, and remove a courses' reserved items",
          "description": "This permission allows a user to add, edit, and remove items on a course",
          "subPermissions":           [
            "ui-courses.read-all",
            "ui-courses.add-edit-items",
            "course-reserves-storage.reserves.write",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.view-settings",
          "displayName": "Settings (Courses): Can view course settings",
          "description": "This permission allows the user to view all Course Settings",
          "subPermissions":           [
            "settings.courses.enabled",
            "configuration.entries.collection.get",
            "course-reserves-storage.terms.read",
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.departments.read",
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.roles.read"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-courses.maintain-settings",
          "replaces": ["course-reserves.maintain-settings"],
          "displayName": "Settings (Courses): Can create, edit and delete course settings",
          "description": "This permission allows the user to Create, edit and delete all Course Settings",
          "subPermissions":           [
            "settings.courses.enabled",
            "course-reserves-storage.terms.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.roles.write"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_requests-12.0.2",
      "name": "Requests manager",
      "requires":       [
                {
          "id": "cancellation-reason-storage",
          "version": "1.1"
        },
                {
          "id": "circulation",
          "version": "14.2"
        },
                {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "request-storage",
          "version": "6.0"
        },
                {
          "id": "pick-slips",
          "version": "0.1"
        },
                {
          "id": "search-slips",
          "version": "0.1"
        },
                {
          "id": "automated-patron-blocks",
          "version": "0.1"
        }
      ],
      "optional": [      {
        "id": "circulation-bff-loans",
        "version": "1.0"
      }],
      "permissionSets":       [
                {
          "permissionName": "module.requests.enabled",
          "displayName": "UI: Requests module is enabled"
        },
                {
          "permissionName": "ui-requests.moveRequest.execute",
          "replaces": ["ui-requests.moveRequest"],
          "displayName": "Requests: Move to new item, reorder queue",
          "subPermissions":           [
            "circulation.requests.item.move.post",
            "circulation.rules.request-policy.get",
            "ui-requests.reorderQueue.execute"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-requests.reorderQueue.execute",
          "replaces": ["ui-requests.reorderQueue"],
          "displayName": "Requests: Reorder queue",
          "subPermissions":           [
            "circulation.requests.queue-item.collection.get",
            "circulation.requests.queue-instance.collection.get",
            "circulation.requests.queue.item-reorder.collection.post",
            "circulation.requests.queue.instance-reorder.collection.post",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation.rules.request-policy.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-requests.all",
          "displayName": "Requests: All permissions",
          "description": "All permissions for the Requests app",
          "subPermissions":           [
            "ui-requests.view",
            "ui-requests.create",
            "ui-requests.edit",
            "ui-requests.moveRequest.execute",
            "ui-requests.reorderQueue.execute"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-requests.view",
          "displayName": "Requests: View",
          "subPermissions":           [
            "module.requests.enabled",
            "circulation.loans.collection.get",
            "circulation.settings.item.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "users.collection.get",
            "users.item.get",
            "proxiesfor.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "configuration.entries.collection.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory.instances.item.get",
            "inventory.instances.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.collection.get",
            "manualblocks.collection.get",
            "circulation.requests.hold-shelf-clearance-report.get",
            "circulation.settings.collection.get",
            "tlr.settings.get",
            "mod-settings.global.read.circulation",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "circulation.search-slips.get",
            "circulation.pick-slips.get",
            "circulation-bff.search-slips.collection.get",
            "circulation-bff.pick-slips.collection.get",
            "circulation-storage.staff-slips.collection.get",
            "tags.collection.get",
            "circulation.print-events-entry.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-requests.create",
          "displayName": "Requests: View, create",
          "subPermissions":           [
            "ui-requests.view",
            "automated-patron-blocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation.requests.item.post",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-preferences.collection.get",
            "inventory-storage.locations.item.get",
            "circulation-bff.requests.search-instances.get",
            "circulation-bff.requests.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-requests.edit",
          "displayName": "Requests: View, edit, cancel",
          "subPermissions":           [
            "ui-requests.view",
            "circulation.requests.item.put",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.delete",
            "circulation-storage.request-preferences.collection.get",
            "tags.item.post"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_data-import-9.0.1",
      "name": "Data Import manager",
      "requires":       [
                {
          "id": "data-import",
          "version": "3.2"
        },
                {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.5"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.data-import.enabled",
          "displayName": "UI: Data import module is enabled",
          "visible": false
        },
                {
          "permissionName": "ui-data-import.manage",
          "displayName": "Data import: Can upload files, import, and view logs",
          "subPermissions":           [
            "module.data-import.enabled",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "change-manager.records.delete",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.assembleStorageFile.post",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.jobexecution.cancel",
            "data-import.upload.file.post",
            "data-import.uploaddefinitions.delete",
            "data-import.uploaddefinitions.files.delete",
            "data-import.uploadDefinitions.files.item.post",
            "data-import.uploadDefinitions.processFiles.item.post",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "data-import.uploaddefinitions.post",
            "data-import.uploaddefinitions.put",
            "data-import.uploadUrl.item.get",
            "data-import.uploadUrl.subsequent.item.get",
            "invoice-storage.invoice-lines.item.get",
            "invoice-storage.invoices.item.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "source-storage.stream.marc-record-identifiers.collection.post",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "source-storage.records.matching.collection.post",
            "ui-data-import.view",
            "ui-orders.orders.view",
            "metadata-provider.incomingrecords.get",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-import.view",
          "displayName": "Data import: Can view only",
          "subPermissions":           [
            "module.data-import.enabled",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "data-import.downloadUrl.get",
            "data-import.splitconfig.get",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "metadata-provider.incomingrecords.get",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-import.logs.delete",
          "displayName": "Data import: Can delete import logs",
          "subPermissions":           [
            "ui-data-import.view",
            "change-manager.jobexecutions.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.data-import.enabled",
          "displayName": "Settings (Data import): Display list of settings pages for Data import",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-data-import.settings.manage",
          "displayName": "Settings (Data import): Can view, create, edit, and remove",
          "subPermissions":           [
            "settings.data-import.enabled",
            "acquisitions-units.units.collection.get",
            "batch-groups.collection.get",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.delete",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.actionprofile.post",
            "converter-storage.actionprofile.put",
            "converter-storage.field-protection-settings.delete",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.field-protection-settings.post",
            "converter-storage.field-protection-settings.put",
            "converter-storage.jobprofile.delete",
            "converter-storage.jobprofile.delete",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofile.post",
            "converter-storage.jobprofile.put",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.jobprofilesnapshots.post",
            "converter-storage.mappingprofile.delete",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.mappingprofile.post",
            "converter-storage.mappingprofile.put",
            "converter-storage.matchprofile.delete",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.matchprofile.post",
            "converter-storage.matchprofile.put",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.fileExtensions.default.post",
            "data-import.fileExtensions.delete",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.fileExtensions.post",
            "data-import.fileExtensions.put",
            "data-import.splitconfig.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "mapping-rules.get",
            "mapping-rules.restore",
            "mapping-rules.update",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "organizations.organizations.collection.get",
            "tags.collection.get",
            "tags.item.post",
            "ui-orders.orders.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-data-import.settings.readOnly",
          "displayName": "Settings (Data import): Can view only",
          "subPermissions":           [
            "settings.data-import.enabled",
            "acquisitions-units.units.collection.get",
            "batch-groups.collection.get",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.splitconfig.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "mapping-rules.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "tags.collection.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-import-profile-9.0.0",
      "name": "Find and select Data Import Profiles plugin for Stripes",
      "requires":       [
                {
          "id": "data-import",
          "version": "3.2"
        },
                {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
                {
          "id": "data-import-converter-storage",
          "version": "1.5"
        }
      ],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_agreements-12.0.2",
      "name": "ERM agreement functionality for Stripes",
      "requires":       [
                {
          "id": "configuration",
          "version": "2.0 3.0 4.0 5.0"
        },
                {
          "id": "erm",
          "version": "7.0"
        },
                {
          "id": "licenses",
          "version": "6.0"
        }
      ],
      "optional":       [
                {
          "id": "order-lines",
          "version": "2.0 3.0"
        },
                {
          "id": "organizations-storage.interfaces",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "13.0 14.0 15.0 16.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "module.agreements.enabled",
          "displayName": "UI: ui-agreements module is enabled",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "tags.collection.get",
            "erm.refdata.view",
            "note.types.collection.get"
          ]
        },
                {
          "permissionName": "ui-agreements.resources.view",
          "displayName": "Agreements: Search & view e-resources",
          "description": "Grants all permissions included in 'Agreements: Search & view agreements' plus the ability to search and view e-resources (packages and titles in those packages) in the internal KB.",
          "subPermissions":           [
            "module.agreements.enabled",
            "erm.packages.view",
            "erm.titles.view",
            "erm.resources.view",
            "erm.pci.view",
            "ui-agreements.agreements.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.platforms.view",
          "displayName": "Agreements: Search & view platforms",
          "description": "Grants all permissions included in 'Agreements: Search & view e-resources' plus the ability to search and view platforms in the internal KB",
          "subPermissions":           [
            "module.agreements.enabled",
            "erm.platforms.view",
            "ui-agreements.resources.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.platforms.edit",
          "displayName": "Agreements: Edit platforms",
          "description": "Grants all permissions included in 'Platforms: Search & view platforms' plus the ability to edit platform properties",
          "subPermissions":           [
            "erm.platforms.edit",
            "ui-agreements.platforms.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.resources.edit",
          "displayName": "Agreements: Edit e-resources",
          "description": "Grants all permissions included in 'Agreements: Search & view e-resources' plus the ability to edit the e-resources",
          "subPermissions":           [
            "erm.pci.edit",
            "erm.pti.edit",
            "erm.titles.edit",
            "ui-agreements.resources.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.agreements.view",
          "displayName": "Agreements: Search & view agreements",
          "description": "A user with this permission can search and view existing agreements. This includes the permission to see and access the Agreement app in the Folio interface",
          "subPermissions":           [
            "module.agreements.enabled",
            "erm.agreements.view",
            "erm.contacts.view",
            "erm.custprops.view",
            "erm.files.view",
            "erm.orgs.view",
            "licenses.custprops.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.agreements.file.download",
          "displayName": "Agreements: File download",
          "description": "A user with this permission is able to download and view the content of Agreement document files",
          "subPermissions":           [
            "erm.files.item.download",
            "erm.files.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.agreements.edit",
          "displayName": "Agreements: Edit agreements",
          "description": "Grants all permissions included in 'Agreements: Search & view agreements' plus the ability to edit agreements, including the ability to add and edit agreement lines, documents and view, add and edit tags on an agreement",
          "subPermissions":           [
            "ui-agreements.agreements.view",
            "erm.agreements.edit",
            "erm.entitlements.edit",
            "erm.files.edit",
            "tags.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.agreements.delete",
          "displayName": "Agreements: Delete agreements",
          "description": "Grants all permissions included in 'Agreements: Search & view agreements' plus the ability to delete agreements. This does not include the ability to edit agreements, only to delete them",
          "subPermissions":           [
            "ui-agreements.agreements.view",
            "erm.agreements.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.agreements.enabled",
          "displayName": "Settings (Agreements): ui-agreements settings are enabled",
          "subPermissions":           [
            "module.agreements.enabled",
            "settings.enabled",
            "configuration.entries.collection.get"
          ]
        },
                {
          "permissionName": "settings.configuration.manage",
          "displayName": "Settings (Agreements): Can view and edit settings",
          "subPermissions":           [
            "configuration.entries.item.put",
            "configuration.entries.item.post"
          ]
        },
                {
          "permissionName": "ui-agreements.generalSettings.view",
          "displayName": "Settings (Agreements): Can view general settings",
          "description": "Grants permission to view the general Agreements settings",
          "subPermissions": ["settings.agreements.enabled"],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.generalSettings.manage",
          "displayName": "Settings (Agreements): Can view and edit general settings",
          "description": "Grants permission to view and edit the general Agreements settings",
          "subPermissions":           [
            "ui-agreements.generalSettings.view",
            "settings.configuration.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.picklists.view",
          "displayName": "Settings (Agreements): View pick lists and values",
          "description": "Grants all permissions included in 'Settings (Agreements): Can view general settings' plus the ability to view pick lists and pick list values",
          "subPermissions":           [
            "settings.agreements.enabled",
            "erm.refdata.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.picklists.manage",
          "displayName": "Settings (Agreements): Manage pick lists and values",
          "description": "Grants all permissions included in 'Settings (Agreements): Can view and edit general settings' plus the ability to manage pick lists and pick list values",
          "subPermissions":           [
            "ui-agreements.picklists.view",
            "settings.configuration.manage",
            "erm.refdata.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.supplementaryProperties.view",
          "displayName": "Settings (Agreements): Can view agreement supplementary properties",
          "description": "Grants all permissions included in 'Settings (Agreements): Can view general settings' plus the ability to view the available supplementary properties",
          "subPermissions":           [
            "settings.agreements.enabled",
            "erm.custprops.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.supplementaryProperties.manage",
          "displayName": "Settings (Agreements): Manage agreement supplementary properties",
          "description": "Grants all permissions included in 'Settings (Agreements): Can view and edit general settings' plus the ability to manage the available supplementary properties",
          "subPermissions":           [
            "ui-agreements.supplementaryProperties.view",
            "settings.configuration.manage",
            "erm.custprops.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.appSettings.view",
          "displayName": "Settings (Agreements): Can view app settings",
          "description": "Grants permission to view the Agreements application settings",
          "subPermissions":           [
            "settings.agreements.enabled",
            "erm.settings.read"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.appSettings.manage",
          "displayName": "Settings (Agreements): Can view and edit app settings",
          "description": "Grants permission to view and edit the Agreements application settings",
          "subPermissions":           [
            "ui-agreements.appSettings.view",
            "settings.configuration.manage",
            "erm.settings.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-agreements.packages.controlSync.execute",
          "displayName": "Local KB: change package synchronisation status",
          "description": "A user with this permission can change the synchronisation status of package (i.e. whether the content of a package should be updated by data synchronising with the local KB)",
          "subPermissions": ["erm.packages.collection.controlSync.execute"],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-agreement-12.0.0",
      "name": "ERM-agreement-finder for Stripes",
      "requires": [      {
        "id": "erm",
        "version": "7.0"
      }],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "ui-plugin-find-agreement.search",
        "displayName": "Find Agreement Plugin: Search agreements",
        "description": "A user with this permission can search and view existing agreements via the find agreements plugin (used to search for agreements from within other Folio apps). This does not include the permission to see and access the Agreements app in the Folio interface.",
        "subPermissions":         [
          "erm.agreements.view",
          "erm.orgs.view",
          "erm.refdata.view"
        ],
        "visible": true
      }]
    },
        {
      "id": "folio_eholdings-11.0.1",
      "name": "FOLIO UI module for eHoldings",
      "requires":       [
                {
          "id": "eholdings",
          "version": "4.0"
        },
                {
          "id": "tags",
          "version": "1.0"
        },
                {
          "id": "erm",
          "version": "1.0 2.0 3.0 4.0 5.0 6.0 7.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.eholdings.enabled",
          "displayName": "eHoldings: Can view providers, packages, titles detail records",
          "subPermissions":           [
            "kb-ebsco.status.get",
            "kb-ebsco.kb-credentials.collection.get",
            "kb-ebsco.user-kb-credential.get",
            "kb-ebsco.access-types.collection.get",
            "kb-ebsco.access-types.item.get",
            "kb-ebsco.kb-credentials.custom-labels.collection.get",
            "kb-ebsco.custom-labels.collection.get",
            "kb-ebsco.configuration.get",
            "kb-ebsco.configuration.put",
            "kb-ebsco.cache.delete",
            "kb-ebsco.package-resources.export.collection.get",
            "kb-ebsco.package-resources.collection.get",
            "kb-ebsco.packages.collection.get",
            "kb-ebsco.packages-bulk.collection.get",
            "kb-ebsco.packages.item.get",
            "kb-ebsco.provider-packages.collection.get",
            "kb-ebsco.providers.collection.get",
            "kb-ebsco.providers.item.get",
            "kb-ebsco.resources.item.get",
            "kb-ebsco.resources-bulk.collection.get",
            "kb-ebsco.root-proxy.get",
            "kb-ebsco.proxy-types.collection.get",
            "kb-ebsco.titles.collection.get",
            "kb-ebsco.titles.item.get",
            "tags.collection.get",
            "tags.item.get",
            "kb-ebsco.package-tags.put",
            "kb-ebsco.provider-tags.put",
            "kb-ebsco.resource-tags.put",
            "kb-ebsco.tags.collection.get",
            "kb-ebsco.unique.tags.collection.get",
            "kb-ebsco.kb-credentials.holdings-load-all.post",
            "kb-ebsco.kb-credentials.holdings-load.post",
            "kb-ebsco.kb-credentials.holdings-load.status.item.get",
            "kb-ebsco.kb-credentials.proxy-types.collection.get",
            "data-export.job.item.post"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-eholdings.app.view",
          "replaces": ["ui-eholdings.app.enabled"],
          "subPermissions": ["module.eholdings.enabled"],
          "visible": true
        },
                {
          "permissionName": "settings.eholdings.enabled",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-eholdings.settings.enabled",
          "displayName": "Settings (eHoldings): View settings",
          "subPermissions":           [
            "module.eholdings.enabled",
            "settings.eholdings.enabled",
            "ui-eholdings.settings.kb.view",
            "ui-eholdings.settings.root-proxy.view",
            "ui-eholdings.settings.custom-labels.view",
            "ui-eholdings.settings.access-types.view",
            "ui-eholdings.settings.assignedUser.view",
            "ui-eholdings.settings.usage-consolidation.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.kb.view",
          "subPermissions":           [
            "settings.eholdings.enabled",
            "module.eholdings.enabled",
            "kb-ebsco.kb-credentials.collection.get",
            "kb-ebsco.kb-credentials.item.get",
            "kb-ebsco.kb-credentials.key.item.get"
          ]
        },
                {
          "permissionName": "ui-eholdings.settings.kb.edit",
          "displayName": "Settings (eHoldings): Can create, edit, and view knowledge base credentials",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.collection.post",
            "kb-ebsco.kb-credentials.item.patch",
            "kb-ebsco.kb-credentials.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.kb.delete",
          "displayName": "Settings (eHoldings): Can delete knowledge base credentials",
          "subPermissions":           [
            "ui-eholdings.settings.kb.edit",
            "kb-ebsco.kb-credentials.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.root-proxy.view",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.root-proxy.get"
          ]
        },
                {
          "permissionName": "ui-eholdings.settings.root-proxy.edit",
          "displayName": "Settings (eHoldings): configure root proxy setting",
          "subPermissions":           [
            "ui-eholdings.settings.root-proxy.view",
            "kb-ebsco.kb-credentials.root-proxy.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.package-title.select-unselect.execute",
          "replaces": ["ui-eholdings.package-title.select-unselect"],
          "displayName": "eHoldings: Can select/unselect packages and titles to/from your holdings",
          "subPermissions":           [
            "module.eholdings.enabled",
            "kb-ebsco.packages.item.put",
            "kb-ebsco.resources.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.records.edit",
          "displayName": "eHoldings: Can edit providers, packages, titles detail records",
          "subPermissions":           [
            "module.eholdings.enabled",
            "kb-ebsco.packages.item.put",
            "kb-ebsco.resources.item.put",
            "kb-ebsco.providers.item.put",
            "kb-ebsco.titles.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.titles-packages.create-delete.manage",
          "replaces": ["ui-eholdings.titles-packages.create-delete"],
          "displayName": "eHoldings: Can create and delete custom packages and titles",
          "subPermissions":           [
            "module.eholdings.enabled",
            "kb-ebsco.packages.collection.post",
            "kb-ebsco.resources.collection.post",
            "kb-ebsco.titles.collection.post",
            "kb-ebsco.packages.item.delete",
            "kb-ebsco.resources.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.costperuse.view",
          "displayName": "eHoldings: Can view Usage & analysis data for packages, titles and resources",
          "subPermissions":           [
            "module.eholdings.enabled",
            "kb-ebsco.uc.item.get",
            "kb-ebsco.resources-costperuse.item.get",
            "kb-ebsco.titles-costperuse.item.get",
            "kb-ebsco.packages-costperuse.item.get",
            "kb-ebsco.package-resources-costperuse.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.access-types.view",
          "displayName": "Settings (eholdings): Can view access status types",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.access-types.collection.get",
            "kb-ebsco.kb-credentials.access-types.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.access-types.create-edit",
          "displayName": "Settings (eholdings): Can create, edit, and view access status types",
          "subPermissions":           [
            "ui-eholdings.settings.access-types.view",
            "kb-ebsco.kb-credentials.access-types.collection.post",
            "kb-ebsco.kb-credentials.access-types.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.access-types.all",
          "displayName": "Settings (eholdings): Can create, edit, view, and delete access status types",
          "subPermissions":           [
            "ui-eholdings.settings.access-types.create-edit",
            "kb-ebsco.kb-credentials.access-types.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.custom-labels.view",
          "displayName": "Settings (eholdings): Can view custom labels",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.custom-labels.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.custom-labels.edit",
          "displayName": "Settings (eholdings): Can create, edit, view, and delete custom labels",
          "subPermissions":           [
            "ui-eholdings.settings.custom-labels.view",
            "kb-ebsco.kb-credentials.custom-labels.collection.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.usage-consolidation.view",
          "displayName": "Settings (eholdings): View Usage Consolidation API credentials",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.uc.item.get",
            "kb-ebsco.kb-credentials.uc.key.item.get",
            "kb-ebsco.currencies.collection.get",
            "kb-ebsco.uc-credentials.item.get",
            "kb-ebsco.uc-credentials.client-id.get",
            "kb-ebsco.uc-credentials.client-secret.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.usage-consolidation.create-edit",
          "displayName": "Settings (eholdings): Create, edit, and view Usage Consolidation API credentials",
          "subPermissions":           [
            "ui-eholdings.settings.usage-consolidation.view",
            "kb-ebsco.kb-credentials.uc.collection.post",
            "kb-ebsco.kb-credentials.uc.item.patch",
            "kb-ebsco.uc-credentials.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-eholdings.settings.assignedUser.view",
          "subPermissions":           [
            "ui-eholdings.settings.kb.view",
            "kb-ebsco.kb-credentials.users.collection.get",
            "usergroups.collection.get",
            "users.collection.get"
          ]
        },
                {
          "permissionName": "ui-eholdings.settings.assignedUser.edit",
          "displayName": "Settings (eHoldings): Can assign/unassign a user from a KB",
          "subPermissions":           [
            "ui-eholdings.settings.assignedUser.view",
            "kb-ebsco.kb-credentials.users.collection.post",
            "kb-ebsco.kb-credentials.users.item.put",
            "kb-ebsco.kb-credentials.users.item.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_licenses-12.0.1",
      "name": "ERM License functionality for Stripes",
      "requires": [      {
        "id": "licenses",
        "version": "6.0"
      }],
      "optional":       [
                {
          "id": "organizations-storage.interfaces",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "13.0 14.0 15.0 16.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "module.licenses.enabled",
          "displayName": "UI: ui-licenses module is enabled",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "tags.collection.get",
            "licenses.refdata.view",
            "note.types.collection.get"
          ]
        },
                {
          "permissionName": "ui-licenses.licenses.view",
          "displayName": "Licenses: Search & view licenses",
          "description": "A user with this permission can search and view existing licenses and amendments. This includes the permission to see and access the License app in the Folio interface.",
          "subPermissions":           [
            "module.licenses.enabled",
            "tags.item.post",
            "licenses.licenses.view",
            "licenses.files.view",
            "licenses.contacts.view",
            "licenses.custprops.view",
            "licenses.orgs.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.licenses.file.download",
          "displayName": "Licenses: File download",
          "description": "A user with this permission is able to download and view the content of License document files",
          "subPermissions":           [
            "licenses.files.item.download",
            "licenses.files.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.licenses.edit",
          "displayName": "Licenses: Edit licenses",
          "description": "Grants all permissions included in \"Licenses: Search & view licenses\" plus the ability to edit licenses and amendments, including the ability to add and edit documents and view, add and edit tags on a license.",
          "subPermissions":           [
            "ui-licenses.licenses.view",
            "licenses.licenses.edit",
            "licenses.files.edit"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.licenses.delete",
          "displayName": "Licenses: Delete licenses",
          "description": "Grants all permissions included in \"Licenses: Search & view licenses\" plus the ability to delete licenses and amendments.",
          "subPermissions":           [
            "ui-licenses.licenses.view",
            "licenses.licenses.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.licenses.enabled",
          "displayName": "Settings (Licenses): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-licenses.picklists.view",
          "displayName": "Settings (Licenses): View pick lists and values",
          "description": "Grants permissions to access the License settings and the ability to view pick lists and pick list values.",
          "subPermissions":           [
            "settings.licenses.enabled",
            "licenses.refdata.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.picklists.manage",
          "displayName": "Settings (Licenses): Manage pick lists and values",
          "description": "Grants permissions to access the License settings and the ability to manage pick lists and pick list values.",
          "subPermissions":           [
            "ui-licenses.picklists.view",
            "licenses.refdata.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.terms.view",
          "displayName": "Settings (Licenses): View license terms",
          "description": "Grants permissions to access the License settings and the ability to view the available terms.",
          "subPermissions":           [
            "settings.licenses.enabled",
            "licenses.custprops.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.terms.manage",
          "displayName": "Settings (Licenses): Manage license terms",
          "description": "Grants permissions to access the License settings and the ability to manage the available terms.",
          "subPermissions":           [
            "ui-licenses.terms.view",
            "licenses.custprops.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.appSettings.view",
          "displayName": "Settings (Licenses): Can view app settings",
          "description": "Grants permission to view the Licenses application settings",
          "subPermissions":           [
            "settings.licenses.enabled",
            "licenses.settings.read"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-licenses.appSettings.manage",
          "displayName": "Settings (Licenses): Can view and edit app settings",
          "description": "Grants permission to view and edit the Licenses application settings",
          "subPermissions":           [
            "ui-licenses.appSettings.view",
            "licenses.settings.manage"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-license-12.0.0",
      "name": "License-finder for Stripes",
      "requires": [      {
        "id": "licenses",
        "version": "6.0"
      }],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "ui-plugin-find-license.search",
        "displayName": "Find License Plugin: Search licenses",
        "description": "A user with this permission can search and view existing licenses via the find license plugin (used to search for licenses from within other Folio apps). This does not include the permission to see and access the License app in the Folio interface.",
        "subPermissions":         [
          "licenses.licenses.view",
          "licenses.orgs.view",
          "licenses.refdata.view"
        ],
        "visible": true
      }]
    },
        {
      "id": "folio_local-kb-admin-9.0.0",
      "name": "ERM KB Administration for FOLIO with Stripes",
      "requires": [      {
        "id": "erm",
        "version": "7.0"
      }],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.local-kb-admin.enabled",
          "displayName": "UI: ui-local-kb-admin module is enabled"
        },
                {
          "permissionName": "ui-local-kb-admin.jobs.view",
          "displayName": "Local KB admin: View jobs",
          "description": "A user with this permission can search and view Local KB Admin \"jobs\" which are used to populate data into the Agreements local knowledgebase. This includes the permission to see and access the Local KB Admin app in the Folio interface",
          "subPermissions":           [
            "module.local-kb-admin.enabled",
            "erm.jobs.view",
            "erm.refdata.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-local-kb-admin.jobs.edit",
          "displayName": "Local KB admin: Create jobs",
          "description": "Grants all permissions in \"Local KB admin: View jobs\" plus the ability to create new jobs (i.e. upload data into the Agreements local knowledgebase)",
          "subPermissions":           [
            "ui-local-kb-admin.jobs.view",
            "erm.files.edit",
            "erm.jobs.edit",
            "erm.kbs.view",
            "erm.packages.collection.import"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-local-kb-admin.jobs.delete",
          "displayName": "Local KB admin: Delete jobs",
          "description": "Grants all permissions in \"Local KB admin: View jobs\" plus the ability to delete jobs that have already run",
          "subPermissions":           [
            "ui-local-kb-admin.jobs.view",
            "erm.jobs.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "settings.local-kb-admin.enabled",
          "displayName": "Settings (Local KB admin): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-local-kb-admin.kbs.view",
          "displayName": "Local KB admin: View remote KB configuration",
          "description": "A user with this permission can view remote knowledgebases. This includes the permission to see the Local KB Admin settings in the Folio interface",
          "subPermissions":           [
            "settings.local-kb-admin.enabled",
            "erm.kbs.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-local-kb-admin.kbs.manage",
          "displayName": "Local KB admin: Manage remote KB configuration",
          "description": "A user with this permission can configure remote knowledgebases to be used as sources of data to populate the Agreements local knowledgebase. This includes the permission to see and access the Local KB Admin settings in the Folio interface",
          "subPermissions":           [
            "ui-local-kb-admin.kbs.view",
            "erm.kbs.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-local-kb-admin.proxyServer.view",
          "displayName": "Local KB admin: View proxy server configuration",
          "description": "A user with this permission can view any proxy servers which can be used to access e-resources. This includes the permission to see the Local KB Admin settings in the Folio interface",
          "subPermissions":           [
            "settings.local-kb-admin.enabled",
            "erm.sts.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-local-kb-admin.proxyServer.manage",
          "displayName": "Local KB admin: Manage proxy server configuration",
          "description": "A user with this permission can manage any proxy servers which can be used to access e-resources. This includes the permission to see and access the Local KB Admin settings in the Folio interface",
          "subPermissions":           [
            "ui-local-kb-admin.proxyServer.view",
            "erm.sts.manage"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-eresource-8.0.0",
      "name": "ERM-eresource-finder for Stripes",
      "requires": [      {
        "id": "erm",
        "version": "7.0"
      }],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "ui-plugin-find-eresource.search",
        "displayName": "Find E-resource Plugin: Search e-resources",
        "description": "A user with this permission can search and view existing e-resources in the Agreements local knowledgebase via the find eresources plugin (used to search for eresources from within other Folio apps). This does not include the permission to see and access the Agreements app in the Folio interface.",
        "subPermissions":         [
          "erm.packages.view",
          "erm.titles.view",
          "erm.resources.view",
          "erm.pci.view"
        ],
        "visible": true
      }]
    },
        {
      "id": "folio_dashboard-7.0.0",
      "name": "Dashboard app for configurable FOLIO widgets",
      "requires": [      {
        "id": "servint",
        "version": "4.0"
      }],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.dashboard.enabled",
          "displayName": "UI: Dashboard module is enabled",
          "visible": false
        },
                {
          "permissionName": "settings.dashboard.enabled",
          "displayName": "Settings (dashboard): display list of settings pages",
          "subPermissions":           [
            "settings.enabled",
            "servint.settings.write",
            "servint.refdata.write"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-dashboard.dashboards.manage",
          "displayName": "Dashboard: Manage dashboard",
          "description": "A user with this permission can create a dashboard and add, edit, remove and re-order widgets on their dashboard",
          "subPermissions":           [
            "module.dashboard.enabled",
            "servint.dashboards.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-dashboard.dashboards.admin.manage",
          "replaces": ["ui-dashboard.dashboards.admin"],
          "displayName": "Dashboard: Dashboard administrator",
          "description": "A user with this permission has no user-based restrictions on which dashboards and widgets they can interact with, ie create/delete/update",
          "subPermissions": ["servint.dashboards.admin.manage"],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_tenant-settings-10.0.0",
      "name": "Tenant settings",
      "requires":       [
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "optional":       [
                {
          "id": "location-units",
          "version": "2.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "login-saml",
          "version": "2.0"
        },
                {
          "id": "remote-storage-configurations",
          "version": "1.0"
        },
                {
          "id": "remote-storage-mappings",
          "version": "1.0 2.0"
        },
                {
          "id": "service-points",
          "version": "3.0"
        },
                {
          "id": "reading-room",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "settings.tenant-settings.enabled",
          "displayName": "Settings: enabled",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.view",
          "displayName": "Settings (tenant): View",
          "subPermissions":           [
            "settings.tenant-settings.enabled",
            "ui-tenant-settings.settings.addresses.view",
            "ui-tenant-settings.settings.locale.view",
            "ui-tenant-settings.settings.plugins.view",
            "ui-tenant-settings.settings.sso.view",
            "ui-tenant-settings.settings.servicepoints.view",
            "ui-tenant-settings.settings.location.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.addresses.view",
          "displayName": "Settings (tenant): Can view tenant addresses",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "users.collection.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.addresses",
          "displayName": "Settings (tenant): Can manage tenant addresses",
          "subPermissions":           [
            "ui-tenant-settings.settings.addresses.view",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.locale.view",
          "displayName": "Settings (tenant): Can view language, localization, and currency",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.locale",
          "displayName": "Settings (tenant): Can edit language, localization, and currency",
          "subPermissions":           [
            "ui-tenant-settings.settings.locale.view",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.plugins.view",
          "displayName": "Settings (tenant): Can view preferred plugins",
          "subPermissions":           [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.plugins",
          "displayName": "Settings (tenant): Can maintain preferred plugins",
          "subPermissions":           [
            "ui-tenant-settings.settings.plugins.view",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.sso.view",
          "displayName": "Settings (tenant): Can view SSO settings",
          "subPermissions":           [
            "login-saml.configuration.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.sso",
          "displayName": "Settings (tenant): Can maintain SSO settings",
          "subPermissions":           [
            "ui-tenant-settings.settings.sso.view",
            "login-saml.configuration.put",
            "login-saml.regenerate"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.location.view",
          "displayName": "Settings (Tenant): View locations",
          "subPermissions":           [
            "settings.tenant-settings.enabled",
            "users.item.get",
            "users.collection.get",
            "inventory.items.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.mappings.collection.get",
            "remote-storage.mappings.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.location",
          "displayName": "Settings (tenant): Can create, edit and remove locations",
          "subPermissions":           [
            "ui-tenant-settings.settings.location.view",
            "inventory-storage.location-units.institutions.item.post",
            "inventory-storage.location-units.institutions.item.put",
            "inventory-storage.location-units.institutions.item.delete",
            "inventory-storage.location-units.campuses.item.post",
            "inventory-storage.location-units.campuses.item.put",
            "inventory-storage.location-units.campuses.item.delete",
            "inventory-storage.location-units.libraries.item.post",
            "inventory-storage.location-units.libraries.item.put",
            "inventory-storage.location-units.libraries.item.delete",
            "inventory-storage.locations.item.post",
            "inventory-storage.locations.item.put",
            "inventory-storage.locations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.location.floating.view",
          "displayName": "Settings (tenant): Can view floating collection flag",
          "subPermissions": ["ui-tenant-settings.settings.location.view"],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.location.floating.edit",
          "displayName": "Settings (tenant): Can view and edit floating collection flag",
          "subPermissions":           [
            "ui-tenant-settings.settings.location",
            "ui-tenant-settings.settings.location.floating.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.servicepoints.view",
          "displayName": "Settings (tenant): Can view service points",
          "subPermissions":           [
            "settings.tenant-settings.enabled",
            "users.item.get",
            "users.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "circulation-storage.staff-slips.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-tenant-settings.settings.servicepoints",
          "displayName": "Settings (tenant): Can create and edit service points",
          "subPermissions":           [
            "ui-tenant-settings.settings.servicepoints.view",
            "inventory-storage.service-points.item.post",
            "inventory-storage.service-points.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.reading-room-access.view",
          "displayName": "Settings (tenant): Can view reading room access",
          "subPermissions":           [
            "reading-room.collection.get",
            "inventory-storage.service-points.collection.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-tenant-settings.settings.reading-room-access.all",
          "displayName": "Settings (tenant): Can create, edit and remove reading room access",
          "subPermissions":           [
            "ui-tenant-settings.settings.reading-room-access.view",
            "reading-room.item.put",
            "reading-room.item.post",
            "reading-room.item.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_gobi-settings-4.0.0",
      "name": "GOBI integration settings",
      "requires":       [
                {
          "id": "custom-mapping",
          "version": "1.0"
        },
                {
          "id": "users",
          "version": "15.1 16.0"
        }
      ],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "settings.gobi-settings.enabled",
          "displayName": "GOBI Integration: display list of settings pages",
          "subPermissions": ["settings.enabled"],
          "visible": false
        },
                {
          "permissionName": "ui-gobi-settings.permission.settings.view",
          "displayName": "Settings (GOBI Integration): Can view only",
          "subPermissions":           [
            "settings.gobi-settings.enabled",
            "gobi.mappings.translators.collection.get",
            "gobi.mappings.types.collection.get",
            "gobi.custom-mappings.collection.get",
            "gobi.custom-mappings.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-gobi-settings.permission.settings.edit",
          "displayName": "Settings (GOBI Integration): Can view and edit settings",
          "subPermissions":           [
            "ui-gobi-settings.permission.settings.view",
            "gobi.custom-mappings.item.post",
            "gobi.custom-mappings.item.put",
            "gobi.custom-mappings.item.delete"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_handler-stripes-registry-3.0.0",
      "name": "frontend registry for Stripes",
      "requires": [],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_myprofile-10.0.0",
      "name": "My profile",
      "requires": [],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.myprofile.enabled",
          "displayName": "UI: My-profile module is enabled"
        },
                {
          "permissionName": "settings.myprofile.enabled",
          "displayName": "Settings (My profile): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-myprofile.settings.change-password",
          "displayName": "Settings (My profile): Can change your local password",
          "description": "Some subperms can be deleted later when submodules use modern permission names",
          "subPermissions":           [
            "settings.myprofile.enabled",
            "users.collection.get",
            "users-bl.item.get",
            "users.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-myprofile.settings.main-nav-order.manage",
          "displayName": "Settings (My profile): Can change application order in main navigation",
          "subPermissions":           [
            "settings.myprofile.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.entries.item.delete",
            "mod-settings.owner.read.stripes-core.prefs.manage",
            "mod-settings.owner.write.stripes-core.prefs.manage"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_plugin-find-authority-5.0.0",
      "name": "Stripes plugin to find authorities",
      "requires": [],
      "optional": [],
      "permissionSets": [      {
        "permissionName": "module.ui-plugin-find-authority.enabled",
        "displayName": "UI: find authorities plugin is enabled"
      }]
    },
        {
      "id": "folio_service-interaction-4.0.0",
      "name": "FOLIO app for service-interaction",
      "requires": [      {
        "id": "servint",
        "version": "4.0"
      }],
      "optional": [],
      "permissionSets":       [
                {
          "permissionName": "module.service-interaction.enabled",
          "displayName": "UI: ui-service-interaction module is enabled",
          "visible": true
        },
                {
          "permissionName": "settings.service-interaction.enabled",
          "displayName": "Settings (service-interaction): display list of settings pages",
          "subPermissions": ["settings.enabled"],
          "visible": true
        },
                {
          "permissionName": "ui-service-interaction.numberGenerator.view",
          "displayName": "Settings (Service-interaction): View number generator settings and use number generators within apps",
          "subPermissions": ["servint.numberGenerator.number.generate"],
          "visible": true
        },
                {
          "permissionName": "ui-service-interaction.numberGenerator.manage",
          "displayName": "Settings (Service-interaction): Manage number generator settings and use number generators within apps",
          "subPermissions":           [
            "ui-service-interaction.numberGenerator.view",
            "servint.numberGenerator.manage"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_users-12.1.4",
      "name": "User management",
      "requires":       [
                {
          "id": "users",
          "version": "16.4"
        },
                {
          "id": "configuration",
          "version": "2.0"
        },
                {
          "id": "permissions",
          "version": "5.7"
        },
                {
          "id": "login",
          "version": "7.3"
        },
                {
          "id": "users-bl",
          "version": "6.1"
        },
                {
          "id": "staging-users",
          "version": "1.0"
        },
                {
          "id": "tags",
          "version": "1.0"
        }
      ],
      "optional":       [
                {
          "id": "actual-cost-record-storage",
          "version": "0.4"
        },
                {
          "id": "add-info",
          "version": "0.1"
        },
                {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
                {
          "id": "batch-print",
          "version": "1.0"
        },
                {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
                {
          "id": "consortia",
          "version": "1.0"
        },
                {
          "id": "feesfines",
          "version": "19.1"
        },
                {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
                {
          "id": "loan-storage",
          "version": "4.0 5.0 6.0 7.0"
        },
                {
          "id": "notes",
          "version": "4.0"
        },
                {
          "id": "request-storage",
          "version": "2.5 3.0 4.0 5.0 6.0"
        },
                {
          "id": "reading-room-patron-permission",
          "version": "1.0"
        },
                {
          "id": "roles",
          "version": "1.0"
        },
                {
          "id": "users-keycloak",
          "version": "1.0"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "module.users.enabled",
          "displayName": "UI: Users module is enabled"
        },
                {
          "permissionName": "settings.users.enabled",
          "displayName": "Settings (Users): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-users.view",
          "displayName": "Users: Can view user profile",
          "description": "Some subperms can be deleted later when submodules use modern permission names",
          "subPermissions":           [
            "module.users.enabled",
            "users-bl.collection.get",
            "users-bl.item.get",
            "addresstypes.collection.get",
            "users.collection.get",
            "users.item.get",
            "users-keycloak.collection.get",
            "users-keycloak.item.get",
            "usergroups.collection.get",
            "configuration.entries.collection.get",
            "user-settings.custom-fields.collection.get",
            "user-settings.custom-fields.item.get",
            "user-settings.custom-fields.item.stats.get",
            "departments.collection.get",
            "departments.item.get",
            "users.configurations.item.get",
            "users-keycloak.auth-users.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.edit",
          "displayName": "Users: Can edit user profile",
          "description": "Some subperms can be deleted later when bl does updates and ModulePermissions can be used",
          "subPermissions":           [
            "ui-users.view",
            "users-bl.item.put",
            "users.item.put",
            "users-keycloak.item.get",
            "users-keycloak.item.put",
            "tags.collection.get",
            "tags.item.post",
            "circulation-storage.request-preferences.item.post",
            "circulation-storage.request-preferences.item.put",
            "users-keycloak.auth-users.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.delete",
          "displayName": "Users: Can delete user profile if user does not have any open transactions",
          "description": "Delete user when user does not have any open transactions",
          "subPermissions":           [
            "users-bl.item.delete",
            "users-keycloak.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.open-transactions.view",
          "replaces": ["ui-users.opentransactions"],
          "displayName": "Users: Can check open transactions",
          "description": "Check if user does have any open transactions",
          "subPermissions": ["users-bl.transactions.get"],
          "visible": true
        },
                {
          "permissionName": "ui-users.create",
          "displayName": "Users: Can create and edit users",
          "description": "Some subperms can be deleted later when bl does updates and ModulePermissions can be used",
          "subPermissions":           [
            "ui-users.edit",
            "users-bl.item.post",
            "users.item.post",
            "users-keycloak.item.post",
            "perms.users.item.post",
            "login.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.perms.view",
          "replaces": ["ui-users.viewperms"],
          "displayName": "Users: Can view permissions assigned to users",
          "description": "Also includes basic permissions to view users",
          "subPermissions":           [
            "ui-users.view",
            "perms.users.get",
            "perms.permissions.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.perms.edit",
          "replaces": ["ui-users.editperms"],
          "displayName": "Users: Can assign and unassign permissions to users",
          "description": "",
          "subPermissions":           [
            "ui-users.edit",
            "ui-users.perms.view",
            "perms.users.item.put",
            "perms.users.item.post",
            "perms.users.item.delete",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.roles.view",
          "displayName": "Users: Can view user/role assignments",
          "description": "Also includes basic permissions to view roles, users, patron groups",
          "subPermissions":           [
            "ui-users.view",
            "ui-authorization-roles.users.settings.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.roles.manage",
          "displayName": "Users: Can manage user/role assignments",
          "description": "",
          "subPermissions":           [
            "ui-users.roles.view",
            "ui-users.edit",
            "ui-authorization-roles.users.settings.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.user-service-points.view",
          "replaces": ["ui-users.viewuserservicepoints"],
          "displayName": "Users: Can view service points assigned to users",
          "description": "Also includes basic permissions to view users",
          "subPermissions":           [
            "ui-users.view",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.user-service-points.edit",
          "replaces": ["ui-users.edituserservicepoints"],
          "displayName": "Users: Can assign and unassign service points to users",
          "description": "",
          "subPermissions":           [
            "ui-users.edit",
            "ui-users.user-service-points.view",
            "inventory-storage.service-points-users.item.post",
            "inventory-storage.service-points-users.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.permsets.view",
          "displayName": "Settings (Users): Can view permission sets",
          "description": "",
          "subPermissions":           [
            "perms.permissions.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.permsets.all",
          "displayName": "Settings (Users): Can create, edit and remove permission sets",
          "description": "",
          "subPermissions":           [
            "ui-users.settings.permsets.view",
            "perms.permissions.item.put",
            "perms.permissions.item.post",
            "perms.permissions.item.delete",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.usergroups.view",
          "displayName": "Settings (Users): Can view patron groups",
          "subPermissions":           [
            "usergroups.collection.get",
            "usergroups.item.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.usergroups.all",
          "displayName": "Settings (Users): Can create, edit and remove patron groups",
          "subPermissions":           [
            "ui-users.settings.usergroups.view",
            "usergroups.item.delete",
            "usergroups.item.post",
            "usergroups.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.addresstypes.view",
          "displayName": "Settings (Users): Can view address types",
          "subPermissions":           [
            "addresstypes.collection.get",
            "addresstypes.item.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.addresstypes.all",
          "displayName": "Settings (Users): Can create, edit and remove address types",
          "subPermissions":           [
            "ui-users.settings.addresstypes.view",
            "addresstypes.item.post",
            "addresstypes.item.put",
            "addresstypes.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.proxies.view",
          "replaces": ["ui-users.viewproxies"],
          "displayName": "Users: Can view proxies assigned to users",
          "subPermissions":           [
            "ui-users.view",
            "proxiesfor.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.proxies.all",
          "replaces": ["ui-users.editproxies"],
          "displayName": "Users: Can create, edit and remove proxies",
          "description": "",
          "subPermissions":           [
            "ui-users.edit",
            "ui-users.proxies.view",
            "proxiesfor.item.get",
            "proxiesfor.item.post",
            "proxiesfor.item.put",
            "proxiesfor.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.comments.view",
          "displayName": "Settings (Users): Can view if comment required",
          "subPermissions":           [
            "comments.collection.get",
            "comments.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.comments.all",
          "displayName": "Settings (Users): Can edit if comment required",
          "subPermissions":           [
            "ui-users.settings.comments.view",
            "comments.item.delete",
            "comments.item.put",
            "comments.item.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.feefines.view",
          "displayName": "Settings (Users): Can view feefines-related entries",
          "subPermissions":           [
            "ui-users.settings.owners.view",
            "ui-users.settings.manual-charges.view",
            "ui-users.settings.waives.view",
            "ui-users.settings.payments.view",
            "ui-users.settings.refunds.view",
            "ui-users.settings.comments.view",
            "ui-users.settings.transfers.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.feefines.all",
          "displayName": "Settings (Users): Can create, edit and remove all feefines-related entries",
          "subPermissions":           [
            "settings.users.enabled",
            "ui-users.settings.owners.all",
            "ui-users.settings.feefines",
            "ui-users.settings.waives.all",
            "ui-users.settings.payments.all",
            "ui-users.settings.refunds.all",
            "ui-users.settings.comments.all",
            "ui-users.settings.transfers.all",
            "ui-users.settings.manual-charges.all",
            "ui-plugin-bursar-export.bursar-exports.all"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.manual-charges.view",
          "displayName": "Settings (Users): Can view manual charges",
          "subPermissions":           [
            "feefines.collection.get",
            "feefines.item.get",
            "inventory-storage.service-points.collection.get",
            "owners.collection.get",
            "templates.collection.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.manual-charges.all",
          "displayName": "Settings (Users): Can create, edit and remove manual charges",
          "subPermissions":           [
            "ui-users.settings.manual-charges.view",
            "feefines.item.delete",
            "feefines.item.post",
            "feefines.item.put",
            "feefine-reports.refund.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.customfields.view",
          "displayName": "Settings (Users): Can view custom fields",
          "subPermissions":           [
            "settings.users.enabled",
            "configuration.entries.collection.get",
            "user-settings.custom-fields.collection.get",
            "user-settings.custom-fields.item.option.stats.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.customfields.edit",
          "displayName": "Settings (Users): Can create, edit, and view custom fields",
          "subPermissions":           [
            "ui-users.settings.customfields.view",
            "user-settings.custom-fields.collection.put",
            "user-settings.custom-fields.item.post",
            "user-settings.custom-fields.item.put",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.customfields.all",
          "displayName": "Settings (Users): Can create, edit, view and delete custom fields",
          "subPermissions":           [
            "ui-users.settings.customfields.view",
            "ui-users.settings.customfields.edit",
            "user-settings.custom-fields.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.owners.view",
          "displayName": "Settings (Users): Can view owners",
          "subPermissions":           [
            "inventory-storage.service-points.collection.get",
            "owners.collection.get",
            "owners.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.owners.all",
          "displayName": "Settings (Users): Can create, edit and remove owners",
          "subPermissions":           [
            "ui-users.settings.owners.view",
            "owners.item.delete",
            "owners.item.post",
            "owners.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.payments.view",
          "displayName": "Settings (Users): Can view payment methods",
          "subPermissions":           [
            "owners.collection.get",
            "payments.collection.get",
            "payments.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.payments.all",
          "displayName": "Settings (Users): Can create, edit and remove payment methods",
          "subPermissions":           [
            "ui-users.settings.payments.view",
            "payments.item.delete",
            "payments.item.post",
            "payments.item.put",
            "users.collection.get",
            "users-keycloak.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.refunds.view",
          "displayName": "Settings (Users): Can view refund reasons",
          "subPermissions":           [
            "refunds.collection.get",
            "refunds.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.refunds.all",
          "displayName": "Settings (Users): Can create, edit and remove refunds reasons",
          "subPermissions":           [
            "ui-users.settings.refunds.view",
            "refunds.item.delete",
            "refunds.item.post",
            "refunds.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.waives.view",
          "displayName": "Settings (Users): Can view waive reasons",
          "subPermissions":           [
            "waives.collection.get",
            "waives.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.waives.all",
          "displayName": "Settings (Users): Can create, edit and remove waive reasons",
          "subPermissions":           [
            "ui-users.settings.waives.view",
            "waives.item.delete",
            "waives.item.post",
            "waives.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.accounts.all",
          "replaces": ["ui-users.accounts"],
          "displayName": "Fee/Fine History: Can create, edit and remove accounts",
          "subPermissions":           [
            "accounts.collection.get",
            "accounts.item.delete",
            "accounts.item.get",
            "accounts.item.post",
            "accounts.item.put",
            "feefineactions.collection.get",
            "payments.collection.get",
            "waives.collection.get",
            "owners.collection.get",
            "feefines.collection.get",
            "transfers.collection.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.fee-fine-actions.all",
          "replaces": ["ui-users.feefineactions"],
          "displayName": "Fee/Fine Details: Can create, edit and remove fee/fine actions",
          "subPermissions":           [
            "feefineactions.collection.get",
            "feefineactions.item.delete",
            "feefineactions.item.get",
            "feefineactions.item.post",
            "feefineactions.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.transfers.view",
          "displayName": "Settings (Users): Can view transfer accounts",
          "subPermissions":           [
            "owners.collection.get",
            "transfers.collection.get",
            "transfers.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.transfers.all",
          "displayName": "Settings (Users): Can create, edit and remove transfer accounts ",
          "subPermissions":           [
            "ui-users.settings.transfers.view",
            "transfers.item.delete",
            "transfers.item.post",
            "transfers.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.manual-pay.execute",
          "replaces": ["ui-users.manual_pay"],
          "displayName": "Fees/Fines: Can pay",
          "subPermissions":           [
            "ui-users.accounts.all",
            "ui-users.fee-fine-actions.all",
            "comments.collection.get",
            "comments.item.get",
            "payments.collection.get",
            "payments.item.get",
            "feesfines.accounts.check-pay.post",
            "feesfines.accounts-bulk.check-pay.post",
            "feesfines.accounts.pay.post",
            "feesfines.accounts-bulk.pay.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.manual-waive.execute",
          "replaces": ["ui-users.manual_waive"],
          "displayName": "Fees/Fines: Can waive",
          "subPermissions":           [
            "ui-users.accounts.all",
            "ui-users.fee-fine-actions.all",
            "comments.collection.get",
            "comments.item.get",
            "waives.collection.get",
            "waives.item.get",
            "feesfines.accounts.check-waive.post",
            "feesfines.accounts-bulk.check-waive.post",
            "feesfines.accounts.waive.post",
            "feesfines.accounts-bulk.waive.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.manual-charge.execute",
          "replaces": ["ui-users.manual_charge"],
          "displayName": "Fees/Fines: Can charge",
          "subPermissions":           [
            "owners.collection.get",
            "owners.item.get",
            "feefines.collection.get",
            "feefines.item.get",
            "ui-users.manual-pay.execute"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.patron-blocks.all",
          "replaces": ["ui-users.patron_blocks"],
          "displayName": "Users: Can create, edit and remove patron blocks",
          "subPermissions":           [
            "manualblocks.collection.get",
            "manual-block-templates.collection.get",
            "manualblocks.item.delete",
            "manualblocks.item.get",
            "manualblocks.item.post",
            "manualblocks.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.conditions.view",
          "displayName": "Settings (Users): Can view patron blocks conditions",
          "subPermissions":           [
            "settings.users.enabled",
            "patron-blocks.patron-block-conditions.collection.get",
            "patron-blocks.patron-block-conditions.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.conditions.edit",
          "displayName": "Settings (Users): Can view and edit patron blocks conditions",
          "subPermissions":           [
            "ui-users.settings.conditions.view",
            "patron-blocks.patron-block-conditions.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.patron-block-templates.view",
          "displayName": "Settings (Users): Can view patron blocks templates",
          "subPermissions":           [
            "settings.users.enabled",
            "manual-block-templates.collection.get",
            "manual-block-templates.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.patron-block-templates.all",
          "displayName": "Settings (Users): Can create, edit and remove patron blocks templates",
          "subPermissions":           [
            "ui-users.settings.patron-block-templates.view",
            "manual-block-templates.item.post",
            "manual-block-templates.item.put",
            "manual-block-templates.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.limits.view",
          "displayName": "Settings (Users): Can view patron blocks limits",
          "subPermissions":           [
            "ui-users.settings.conditions.view",
            "patron-blocks.patron-block-limits.collection.get",
            "patron-blocks.patron-block-limits.item.get",
            "usergroups.collection.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.limits.all",
          "displayName": "Settings (Users): Can create, edit and remove patron blocks limits",
          "subPermissions":           [
            "ui-users.settings.conditions.edit",
            "ui-users.settings.limits.view",
            "patron-blocks.patron-block-limits.item.post",
            "patron-blocks.patron-block-limits.item.put",
            "patron-blocks.patron-block-limits.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.feesfines.view",
          "displayName": "Users: Can view fees/fines and loans",
          "description": "Also includes basic permissions to view users",
          "subPermissions":           [
            "ui-users.view",
            "ui-users.loans.view",
            "accounts.collection.get",
            "accounts.item.get",
            "comments.collection.get",
            "comments.item.get",
            "feefineactions.collection.get",
            "feefines.collection.get",
            "feefines.item.get",
            "owners.collection.get",
            "owners.item.get",
            "payments.collection.get",
            "payments.item.get",
            "refunds.collection.get",
            "refunds.item.get",
            "transfers.collection.get",
            "waives.collection.get",
            "waives.item.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.feesfines.actions.all",
          "displayName": "Users: Can create, edit and remove fees/fines",
          "subPermissions":           [
            "ui-users.feesfines.view",
            "ui-users.manual-charge.execute",
            "ui-users.manual-pay.execute",
            "ui-users.manual-waive.execute",
            "feesfines.accounts.check-transfer.post",
            "feesfines.accounts.check-refund.post",
            "feesfines.accounts.transfer.post",
            "feesfines.accounts-bulk.transfer.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "feesfines.accounts.refund.post",
            "feesfines.accounts-bulk.refund.post",
            "circulation-storage.loans.item.get",
            "inventory.items.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-renew.create",
          "replaces": ["ui-users.loans.renew"],
          "displayName": "Users: User loans renew",
          "description": "Also includes backend permissions to perform loans renew",
          "subPermissions":           [
            "circulation.renew-by-barcode.post",
            "inventory-storage.location-units.libraries.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-renew-override.create",
          "replaces": ["ui-users.loans.renew-override"],
          "displayName": "Users: User loans renew through override",
          "description": "Also includes backend permissions to perform loans renew through override",
          "subPermissions": ["circulation.override-renewal-block.post"],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-add-info.create",
          "replaces":           [
            "ui-users.loans.add-patron-info",
            "ui-users.loans.add-staff-info"
          ],
          "displayName": "Users: User loans: add staff or patron information",
          "subPermissions": ["circulation.loans.add-info.post"],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-declare-item-lost.execute",
          "replaces": ["ui-users.loans.declare-item-lost"],
          "displayName": "Users: User loans declare lost",
          "description": "Also includes backend permissions to declare items lost",
          "subPermissions":           [
            "circulation.loans.declare-item-lost.post",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-declare-claimed-returned-item-as-missing.execute",
          "replaces": ["ui-users.loans.declare-claimed-returned-item-as-missing"],
          "displayName": "Users: User loans mark claimed returned missing",
          "description": "Also includes backend permission to declare claimed returned item as missing",
          "subPermissions":           [
            "circulation.loans.declare-claimed-returned-item-as-missing.post",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-claim-item-returned.execute",
          "replaces": ["ui-users.loans.claim-item-returned"],
          "displayName": "Users: User loans claim returned",
          "description": "Also includes backend permissions to claim items returned",
          "subPermissions":           [
            "circulation.loans.claim-item-returned.post",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans.view",
          "displayName": "Users: User loans view",
          "description": "Also includes basic permissions to view users",
          "subPermissions":           [
            "ui-users.view",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.staff-slips.collection.get",
            "accounts.collection.get",
            "comments.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-due-date.edit",
          "replaces": ["ui-users.loans.change-due-date"],
          "displayName": "Users: User loans change due date",
          "description": "Also includes backend permissions to perform change due date",
          "subPermissions":           [
            "circulation.loans.item.put",
            "circulation.renew-by-barcode.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans.all",
          "displayName": "Users: User loans view, change due date, renew",
          "description": "Also includes requests, loan-policies and accounts permissions",
          "subPermissions":           [
            "ui-users.view",
            "ui-users.loans-due-date.edit",
            "ui-users.loans-renew.create",
            "ui-users.loans.view",
            "circulation.loans.item.put",
            "circulation.renew-by-barcode.post",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "accounts.collection.get",
            "feefineactions.collection.get",
            "owners.collection.get",
            "payments.collection.get",
            "comments.collection.get",
            "waives.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.material-types.collection.get",
            "manualblocks.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.loans-anonymize.execute",
          "replaces": ["ui-users.loans.anonymize"],
          "displayName": "Users: User loans anonymize",
          "subPermissions": ["circulation.loans.collection.anonymize.user.post"],
          "visible": true
        },
                {
          "permissionName": "ui-users.requests.all",
          "displayName": "Users: View requests",
          "description": "Also includes basic permissions to view users and loans",
          "subPermissions":           [
            "ui-users.view",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.delete",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory.instances.item.get",
            "inventory.instances.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.material-types.collection.get",
            "circulation-storage.loan-policies.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.reset.password",
          "displayName": "Users: Create/reset password",
          "subPermissions":           [
            "login.credentials-existence.get",
            "ui-users.view",
            "ui-users.edit",
            "users-bl.password-reset-link.generate",
            "users-keycloak.password-reset-link.generate"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.departments.view",
          "displayName": "Settings (Users): Can view departments",
          "subPermissions":           [
            "settings.users.enabled",
            "departments.collection.get",
            "departments.item.get"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.departments.edit",
          "displayName": "Settings (Users): Edit departments",
          "subPermissions":           [
            "settings.users.enabled",
            "departments.item.put"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.departments.create",
          "displayName": "Settings (Users): Create departments",
          "subPermissions":           [
            "settings.users.enabled",
            "departments.item.post"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.departments.delete",
          "displayName": "Settings (Users): Delete departments",
          "subPermissions":           [
            "settings.users.enabled",
            "departments.item.delete"
          ],
          "visible": false
        },
                {
          "permissionName": "ui-users.settings.departments.create.edit.view",
          "displayName": "Settings (Users): Can create, edit, and view departments",
          "subPermissions":           [
            "ui-users.settings.departments.create",
            "ui-users.settings.departments.edit",
            "ui-users.settings.departments.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.departments.all",
          "displayName": "Settings (Users): Can create, edit, view, and delete departments",
          "subPermissions":           [
            "ui-users.settings.departments.create",
            "ui-users.settings.departments.edit",
            "ui-users.settings.departments.view",
            "ui-users.settings.departments.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.override-patron-block.execute",
          "replaces": ["ui-users.overridePatronBlock"],
          "displayName": "User: Can override patron blocks",
          "subPermissions": ["circulation.override-patron-block.post"],
          "visible": true
        },
                {
          "permissionName": "ui-users.override-item-block.execute",
          "replaces": ["ui-users.overrideItemBlock"],
          "displayName": "User: Can override item blocks",
          "subPermissions":           [
            "circulation.override-item-limit-block.post",
            "circulation.override-item-not-loanable-block.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.cash-drawer-report.execute",
          "replaces": ["ui-users.cashDrawerReport"],
          "displayName": "Users: Create and download Cash drawer reconciliation report",
          "subPermissions":           [
            "feesfines.feefine-reports.cash-drawer-reconciliation.post",
            "feesfines.feefine-reports.cash-drawer-reconciliation-source.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.financial-transaction-report.execute",
          "replaces": ["ui-users.financialTransactionReport"],
          "displayName": "Users: Create and download Financial transaction detail report",
          "subPermissions": ["feefine-reports.financial-transactions-detail.post"],
          "visible": true
        },
                {
          "permissionName": "ui-users.manual-process-refunds-report.execute",
          "replaces": ["ui-users.manualProcessRefundsReport"],
          "displayName": "Users: Create and download Refunds to process manually report",
          "subPermissions":           [
            "ui-users.view",
            "feefine-reports.refund.post",
            "owners.collection.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.lost-items-requiring-actual-cost.execute",
          "replaces": ["ui-users.lost-items.requiring-actual-cost"],
          "displayName": "Users: Can process lost items requiring actual cost",
          "subPermissions":           [
            "ui-users.view",
            "ui-users.loans.view",
            "ui-users.feesfines.actions.all",
            "ui-inventory.instance.view",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-fee-fine-bill.post",
            "actual-cost-fee-fine-cancel.post"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.profile-pictures.view",
          "displayName": "Users: Can view profile pictures",
          "description": "Also includes basic permissions to view users",
          "subPermissions":           [
            "ui-users.view",
            "users.profile-picture.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.profile-pictures.all",
          "displayName": "Users: Can view, edit, and delete profile pictures",
          "description": "Also includes basic permissions to edit user profile",
          "subPermissions":           [
            "ui-users.profile-pictures.view",
            "ui-users.edit",
            "users.profile-picture.item.post",
            "users.profile-picture.item.put",
            "users.profile-picture.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.general.view",
          "displayName": "Settings (Users): Can view general entries",
          "description": "Permission to view all general entries of settings",
          "subPermissions":           [
            "ui-users.settings.addresstypes.view",
            "ui-users.settings.customfields.view",
            "ui-users.settings.usergroups.view",
            "ui-users.settings.permsets.view",
            "ui-users.settings.departments.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.patron-blocks.view",
          "displayName": "Settings (Users): Can view all patron blocks entries",
          "description": "Permission to view conditions, limits and templated in patron block section of settings",
          "subPermissions":           [
            "ui-users.settings.conditions.view",
            "ui-users.settings.limits.view",
            "ui-users.settings.patron-block-templates.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.settings.view",
          "displayName": "Settings (Users): View all settings",
          "subPermissions":           [
            "ui-users.settings.general.view",
            "ui-users.settings.feefines.view",
            "ui-users.settings.patron-blocks.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.patron-notice-print-jobs.view",
          "replaces": ["ui-users.view-patron-notice-print-jobs"],
          "displayName": "Users: View patron notice print jobs",
          "subPermissions":           [
            "ui-users.view",
            "batch-print.entries.collection.get",
            "batch-print.entries.item.get",
            "batch-print.print.read"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.patron-notice-print-jobs.delete",
          "replaces": ["ui-users.remove-patron-notice-print-jobs"],
          "displayName": "Users: View and remove patron notice print jobs",
          "subPermissions":           [
            "ui-circulation.settings.view-patron-notice-print-jobs",
            "batch-print.entries.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.reading-room-access.view",
          "displayName": "Users: Can view reading room access",
          "subPermissions":           [
            "ui-users.view",
            "reading-room.patron-permission.item.get"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.reading-room-access.edit",
          "displayName": "Users: Can view, and edit reading room access",
          "subPermissions":           [
            "ui-users.edit",
            "ui-users.reading-room-access.view",
            "reading-room.patron-permission.item.put"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.patron-pre-registrations.execute",
          "displayName": "Users: Can merge patron preregistration data",
          "description": "Edits existing user or creates new user, based on pre-registration record",
          "subPermissions":           [
            "staging-users.item.put",
            "perms.users.item.post",
            "ui-users.edit"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-users.patron-pre-registrations.view",
          "displayName": "Users: Can view patron preregistration data",
          "subPermissions":           [
            "module.users.enabled",
            "ui-users.view",
            "staging-users.collection.get"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_serials-management-2.0.3",
      "name": "FOLIO app for serials-management",
      "requires": [      {
        "id": "serials-management",
        "version": "1.0 2.0"
      }],
      "optional":       [
                {
          "id": "orders",
          "version": "12.1"
        },
                {
          "id": "order-lines",
          "version": "3.0"
        },
                {
          "id": "organizations",
          "version": "2.0"
        },
                {
          "id": "material-types",
          "version": "2.2"
        },
                {
          "id": "pieces",
          "version": "3.0"
        },
                {
          "id": "acquisitions-units",
          "version": "1.1"
        },
                {
          "id": "holdings-storage",
          "version": "6.0 7.0 8.0"
        },
                {
          "id": "locations",
          "version": "3.0"
        },
                {
          "id": "titles",
          "version": "1.2"
        },
                {
          "id": "identifier-types",
          "version": "1.2"
        }
      ],
      "permissionSets":       [
                {
          "permissionName": "module.serials-management.enabled",
          "displayName": "UI: ui-serials-management module is enabled",
          "subPermissions":           [
            "serials-management.refdata.read",
            "serials-management.locales.collection.get"
          ]
        },
                {
          "permissionName": "settings.serials-management.enabled",
          "displayName": "Settings (serials-management): display list of settings pages",
          "subPermissions": ["settings.enabled"]
        },
                {
          "permissionName": "ui-serials-management.serials.view",
          "displayName": "Serials: Search & view serials",
          "description": "A user with this permission can search and view existing serials. This includes the permission to see and access the Serials app in the Folio interface and permission to view publication patterns.",
          "subPermissions":           [
            "module.serials-management.enabled",
            "serials-management.serials.view",
            "serials-management.rulesets.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.serials.edit",
          "displayName": "Serials: Edit serials",
          "description": "Grants all permissions included in Serials: Search & view serials plus the ability to edit serials. It does not include the ability to create Publication patterns.",
          "subPermissions":           [
            "ui-serials-management.serials.view",
            "serials-management.serials.edit"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.serials.manage",
          "displayName": "Serials: Manage serials",
          "description": "Grants all permissions included in Serials: Edit serials plus the ability to delete serials.",
          "subPermissions":           [
            "ui-serials-management.serials.edit",
            "serials-management.serials.manage"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.rulesets.edit",
          "displayName": "Serials: Edit publication patterns",
          "description": "Grants all permissions included in Serials: Edit serials plus the ability to create publication patterns.",
          "subPermissions":           [
            "ui-serials-management.serials.edit",
            "serials-management.rulesets.edit",
            "serials-management.modelRulesets.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.modelrulesets.manage",
          "displayName": "Serials: Manage publication pattern templates",
          "description": "Grants permissions to create and delete publication pattern templates.",
          "subPermissions": ["serials-management.modelRulesets.manage"],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.predictedpieces.view",
          "displayName": "Serials: Search & view predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view serials plus the ability to search and view predicted pieces.",
          "subPermissions":           [
            "ui-serials-management.serials.view",
            "serials-management.predictedPieceSets.view"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.predictedpieces.edit",
          "displayName": "Serials: Create predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view predicted pieces plus the ability to creatre predicted pieces based on publication patterns.",
          "subPermissions":           [
            "ui-serials-management.predictedpieces.view",
            "serials-management.predictedPieceSets.edit"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.predictedpieces.delete",
          "displayName": "Serials: Delete predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view predicted pieces plus the ability to delete predicted pieces that are not linked to receiving pieces.",
          "subPermissions":           [
            "ui-serials-management.predictedpieces.view",
            "serials-management.predictedPieceSets.item.delete"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.picklists.view",
          "displayName": "Settings (Serials): View pick lists and values",
          "description": "A user with this permission can access the settings for the Serials app and view pick lists and pick list values.",
          "subPermissions":           [
            "settings.serials-management.enabled",
            "serials-management.refdata.read"
          ],
          "visible": true
        },
                {
          "permissionName": "ui-serials-management.picklists.manage",
          "displayName": "Settings (Serials): Manage pick lists and values",
          "description": "Grants all permissions included in 'Settings (Serials): View pick lists and values' plus the ability to manage pick lists and pick list values.",
          "subPermissions":           [
            "ui-serials-management.picklists.view",
            "serials-management.refdata.manage",
            "settings.configuration.manage"
          ],
          "visible": true
        }
      ]
    },
        {
      "id": "folio_stripes-marc-components-2.0.1",
      "name": "Component library for Stripes Marc modules",
      "requires":       [
                {
          "id": "instance-authority-linking-rules",
          "version": "1.1"
        },
                {
          "id": "audit-marc",
          "version": "1.0"
        }
      ],
      "optional": [],
      "permissionSets": []
    },
        {
      "id": "folio_stripes-inventory-components-2.0.2",
      "name": "",
      "requires":       [
                {
          "id": "instance-date-types",
          "version": "1.0"
        },
                {
          "id": "settings",
          "version": "1.0"
        }
      ],
      "optional": [],
      "permissionSets": []
    }
  ]
}